#!/bin/sh

# Default display name
DNAME="${SYNOPKG_PKGNAME}"

# Source package specific variable and functions
SVC_SETUP=`dirname $0`"/service-setup"
if [ -r "${SVC_SETUP}" ]; then
    . "${SVC_SETUP}"
fi

start_daemon ()
{
    call_func "service_prestart"
    if [ -z "${SVC_QUIET}" ]; then
        if [ -z "${SVC_KEEP_LOG}" ]; then
            date > ${LOG_FILE}
        else
            date >> ${LOG_FILE}
        fi
        echo "Starting ${DNAME} command ${SERVICE_COMMAND} " >> ${LOG_FILE}
    fi
    if [ -n "${SERVICE_COMMAND}" ]; then
        if [ -n "${USER}" -a $SYNOPKG_DSM_VERSION_MAJOR -lt 6 ]; then
            if [ -z "${SERVICE_SHELL}" ]; then
                SERVICE_SHELL=/bin/sh
            fi
            if [ -z "${SVC_NO_REDIRECT}" ]; then
                su ${SYNOUSER_PREFIX}${USER} -s ${SERVICE_SHELL} -c "${SERVICE_COMMAND}" >> ${LOG_FILE} 2>&1
            else
                su ${SYNOUSER_PREFIX}${USER} -s ${SERVICE_SHELL} -c "${SERVICE_COMMAND}"
            fi
        else
            # DSM 6 user is set by conf/privilege
            if [ -z "${SVC_NO_REDIRECT}" ]; then
                ${SERVICE_COMMAND} >> ${LOG_FILE} 2>&1
            else
                ${SERVICE_COMMAND}
            fi

        fi
    fi
}

stop_daemon ()
{
    if [ -n "${PID_FILE}" -a -r "${PID_FILE}" ]; then
        PID=$(cat "${PID_FILE}")
        if [ -z "${SVC_QUIET}" ]; then
            date >> ${LOG_FILE}
            echo "Stopping ${DNAME} service ${PID} " >> ${LOG_FILE}
        fi
        kill -TERM $PID >> ${LOG_FILE} 2>&1
        wait_for_status 1 20 || kill -KILL $PID >> ${LOG_FILE} 2>&1
        if [ -f "${PID_FILE}" ]; then
            rm -f "${PID_FILE}" > /dev/null
        fi
    fi
    call_func "service_poststop"
}

daemon_status ()
{

    if [ -n "${PID_FILE}" -a -r "${PID_FILE}" ]; then
        if kill -0 $(cat "${PID_FILE}") > /dev/null 2>&1; then
            return
        fi
        rm -f "${PID_FILE}" > /dev/null
    fi
    return 1
}

wait_for_status ()
{
    counter=$2
    while [ ${counter} -gt 0 ]; do
        daemon_status
        [ $? -eq $1 ] && return
        counter=$((counter-1))
        sleep 1
    done
    return 1
}


case $1 in
    start)
        if daemon_status; then
            echo "${DNAME} is already running"
            exit 0
        else
            echo "Starting ${DNAME} ..."
            start_daemon
            exit $?
        fi
        ;;
    stop)
        if daemon_status; then
            echo "Stopping ${DNAME} ..."
            stop_daemon
            exit $?
        else
            echo "${DNAME} is not running"
            exit 0
        fi
        ;;
    status)
        if daemon_status; then
            echo "${DNAME} is running"
            exit 0
        else
            echo "${DNAME} is not running"
            exit 1
        fi
        ;;
    log)
        if [ -n "${LOG_FILE}" -a -r "${LOG_FILE}" ]; then
            echo "${LOG_FILE}"
        fi
        exit 0
        ;;
    *)
        exit 1
        ;;
esac
