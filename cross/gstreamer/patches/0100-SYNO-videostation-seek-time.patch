diff -uprN ../gstreamer-1.20.2/tools/gst-launch.c ./tools/gst-launch.c
--- ../gstreamer-1.20.2/tools/gst-launch.c	(revision d084a38aaea9d247cc876bac3f853838eab5aeb6)
+++ ./tools/gst-launch.c	(date 1654852783173)
@@ -1082,6 +1082,9 @@
   gchar *savefile = NULL;
   gboolean no_position = FALSE;
   gboolean force_position = FALSE;
+  gint64 seek_start = 0;
+  gint64 seek_start_no_flush = 0;
+
 #ifndef GST_DISABLE_OPTION_PARSING
   GOptionEntry options[] = {
     {"tags", 't', 0, G_OPTION_ARG_NONE, &tags,
@@ -1102,6 +1105,10 @@
         N_("Do not install a fault handler"), NULL},
     {"eos-on-shutdown", 'e', 0, G_OPTION_ARG_NONE, &eos_on_shutdown,
         N_("Force EOS on sources before shutting the pipeline down"), NULL},
+    {"seek", 's', 0, G_OPTION_ARG_INT64, &seek_start,
+        N_("Seek to TIME in seconds"), N_("TIME")},
+    {"seek-no-flush", 'S', 0, G_OPTION_ARG_INT64, &seek_start_no_flush,
+        N_("Seek to TIME in seconds"), N_("TIME")},
 #if 0
     {"index", 'i', 0, G_OPTION_ARG_NONE, &check_index,
         N_("Gather and print index statistics"), NULL},
@@ -1279,6 +1286,27 @@
         break;
     }
 
+    if(seek_start) {
+      PRINT (_("Attempting to SEEK ...\n"));
+      if (!gst_element_seek (pipeline, 1.0, GST_FORMAT_TIME,
+            GST_SEEK_FLAG_FLUSH | GST_SEEK_FLAG_ACCURATE, GST_SEEK_TYPE_SET,
+            seek_start * 1000000000, GST_SEEK_TYPE_NONE, GST_CLOCK_TIME_NONE))
+      {
+        g_printerr(_("ERROR: Pipeline doesn't want to seek.\n"));
+      }
+    }
+
+    if(seek_start_no_flush && !seek_start)
+    {
+      PRINT (_("Attempting to SEEK ...\n"));
+      if (!gst_element_seek (pipeline, 1.0, GST_FORMAT_TIME,
+            GST_SEEK_FLAG_ACCURATE, GST_SEEK_TYPE_SET,
+            seek_start_no_flush * 1000000000, GST_SEEK_TYPE_NONE, GST_CLOCK_TIME_NONE))
+      {
+        g_printerr(_("ERROR: Pipeline doesn't want to seek.\n"));
+      }
+    }
+
 #ifdef G_OS_UNIX
     signal_watch_intr_id =
         g_unix_signal_add (SIGINT, (GSourceFunc) intr_handler, pipeline);
