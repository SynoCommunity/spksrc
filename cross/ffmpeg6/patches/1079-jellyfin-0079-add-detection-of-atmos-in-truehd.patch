Index: jellyfin-ffmpeg/libavcodec/avcodec.h
===================================================================
--- libavcodec/avcodec.h
+++ libavcodec/avcodec.h
@@ -1595,6 +1595,8 @@ typedef struct AVCodecContext {
 
 #define FF_PROFILE_EAC3_DDP_ATMOS         30
 
+#define FF_PROFILE_TRUEHD_ATMOS           30
+
 #define FF_PROFILE_MPEG2_422    0
 #define FF_PROFILE_MPEG2_HIGH   1
 #define FF_PROFILE_MPEG2_SS     2
Index: jellyfin-ffmpeg/libavcodec/codec_desc.c
===================================================================
--- libavcodec/codec_desc.c
+++ libavcodec/codec_desc.c
@@ -2960,6 +2960,7 @@ static const AVCodecDescriptor codec_des
         .name      = "truehd",
         .long_name = NULL_IF_CONFIG_SMALL("TrueHD"),
         .props     = AV_CODEC_PROP_LOSSLESS,
+        .profiles  = NULL_IF_CONFIG_SMALL(ff_truehd_profiles),
     },
     {
         .id        = AV_CODEC_ID_MP4ALS,
Index: jellyfin-ffmpeg/libavcodec/mlpdec.c
===================================================================
--- libavcodec/mlpdec.c
+++ libavcodec/mlpdec.c
@@ -42,6 +42,7 @@
 #include "mlpdsp.h"
 #include "mlp.h"
 #include "config.h"
+#include "profiles.h"
 
 /** number of bits used for VLC lookup - longest Huffman code is 9 */
 #if ARCH_ARM
@@ -392,6 +393,14 @@ static int read_major_sync(MLPDecodeCont
     m->num_substreams        = mh.num_substreams;
     m->substream_info        = mh.substream_info;
 
+    /*  If there is a 4th substream and the MSB of substream_info is set,
+     *  there is a 16-channel spatial presentation (Atmos in TrueHD).
+     */
+    if (m->avctx->codec_id == AV_CODEC_ID_TRUEHD
+            && m->num_substreams == 4 && m->substream_info >> 7 == 1) {
+        m->avctx->profile     = FF_PROFILE_TRUEHD_ATMOS;
+    }
+
     /* limit to decoding 3 substreams, as the 4th is used by Dolby Atmos for non-audio data */
     m->max_decoded_substream = FFMIN(m->num_substreams - 1, 2);
 
@@ -1452,5 +1461,6 @@ const FFCodec ff_truehd_decoder = {
     FF_CODEC_DECODE_CB(read_access_unit),
     .flush          = mlp_decode_flush,
     .p.capabilities = AV_CODEC_CAP_DR1 | AV_CODEC_CAP_CHANNEL_CONF,
+    .p.profiles     = NULL_IF_CONFIG_SMALL(ff_truehd_profiles),
 };
 #endif /* CONFIG_TRUEHD_DECODER */
Index: jellyfin-ffmpeg/libavcodec/profiles.c
===================================================================
--- libavcodec/profiles.c
+++ libavcodec/profiles.c
@@ -52,6 +52,11 @@ const AVProfile ff_eac3_profiles[] = {
   { FF_PROFILE_UNKNOWN },
 };
 
+const AVProfile ff_truehd_profiles[] = {
+  { FF_PROFILE_TRUEHD_ATMOS,   "Dolby TrueHD + Dolby Atmos"},
+  { FF_PROFILE_UNKNOWN },
+};
+
 const AVProfile ff_dnxhd_profiles[] = {
   { FF_PROFILE_DNXHD,      "DNXHD"},
   { FF_PROFILE_DNXHR_LB,   "DNXHR LB"},
Index: jellyfin-ffmpeg/libavcodec/profiles.h
===================================================================
--- libavcodec/profiles.h
+++ libavcodec/profiles.h
@@ -59,6 +59,7 @@
 extern const AVProfile ff_aac_profiles[];
 extern const AVProfile ff_dca_profiles[];
 extern const AVProfile ff_eac3_profiles[];
+extern const AVProfile ff_truehd_profiles[];
 extern const AVProfile ff_dnxhd_profiles[];
 extern const AVProfile ff_h264_profiles[];
 extern const AVProfile ff_hevc_profiles[];
