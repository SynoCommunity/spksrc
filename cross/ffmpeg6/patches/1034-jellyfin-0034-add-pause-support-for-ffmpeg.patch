Index: jellyfin-ffmpeg/fftools/ffmpeg.c
===================================================================
--- fftools/ffmpeg.c
+++ fftools/ffmpeg.c
@@ -130,6 +130,9 @@ static int trigger_fix_sub_duration_hear
 static BenchmarkTimeStamps get_benchmark_time_stamps(void);
 static int64_t getmaxrss(void);
 static int ifilter_has_all_input_formats(FilterGraph *fg);
+static int64_t gettime_relative_minus_pause(void);
+static void pause_transcoding(void);
+static void unpause_transcoding(void);
 
 static int64_t nb_frames_dup = 0;
 static uint64_t dup_warning = 1000;
@@ -149,6 +152,9 @@ int         nb_output_files   = 0;
 FilterGraph **filtergraphs;
 int        nb_filtergraphs;
 
+int64_t paused_start = 0;
+int64_t paused_time = 0;
+
 #if HAVE_TERMIOS_H
 
 /* init terminal so that we can grab keys */
@@ -3511,12 +3517,28 @@ static void set_tty_echo(int on)
 #endif
 }
 
+static void pause_transcoding(void)
+{
+    if (!paused_start)
+        paused_start = av_gettime_relative();
+}
+
+static void unpause_transcoding(void)
+{
+    if (paused_start) {
+        paused_time += av_gettime_relative() - paused_start;
+        paused_start = 0;
+    }
+}
+
 static int check_keyboard_interaction(int64_t cur_time)
 {
     int i, ret, key;
     static int64_t last_time;
-    if (received_nb_signals)
+    if (received_nb_signals) {
+        unpause_transcoding();
         return AVERROR_EXIT;
+    }
     /* read_key() returns 0 on EOF */
     if (cur_time - last_time >= 100000) {
         key =  read_key();
@@ -3530,6 +3552,11 @@ static int check_keyboard_interaction(in
     if (key == '+') av_log_set_level(av_log_get_level()+10);
     if (key == '-') av_log_set_level(av_log_get_level()-10);
     if (key == 's') qp_hist     ^= 1;
+    if (key == 'u' || key != -1) unpause_transcoding();
+    if (key == 'p'){
+        pause_transcoding();
+        fprintf(stderr, "\nTranscoding is paused. Press [u] to resume.\n");
+    }
     if (key == 'c' || key == 'C'){
         char buf[4096], target[64], command[256], arg[256] = {0};
         double time;
@@ -3613,7 +3640,9 @@ static int check_keyboard_interaction(in
                         "C      Send/Queue command to all matching filters\n"
                         "D      cycle through available debug modes\n"
                         "h      dump packets/hex press to cycle through the 3 states\n"
+                        "p      pause transcoding\n"
                         "q      quit\n"
+                        "u      unpause transcoding\n"
                         "s      Show QP histogram\n"
         );
     }
@@ -3921,6 +3950,11 @@ static int transcode_step(void)
     InputStream  *ist = NULL;
     int ret;
 
+    if (paused_start) {
+        av_usleep(10000);
+        return 0;
+    }
+
     ost = choose_output();
     if (!ost) {
         if (got_eagain()) {
@@ -4023,11 +4057,11 @@ static int transcode(void)
     timer_start = av_gettime_relative();
 
     while (!received_sigterm) {
-        int64_t cur_time= av_gettime_relative();
+        int64_t cur_time= gettime_relative_minus_pause();
 
         /* if 'q' pressed, exits */
         if (stdin_interaction)
-            if (check_keyboard_interaction(cur_time) < 0)
+            if (check_keyboard_interaction(av_gettime_relative()) < 0)
                 break;
 
         /* check if there's any stream where output is still needed */
@@ -4064,7 +4098,7 @@ static int transcode(void)
     }
 
     /* dump report by using the first video and audio streams */
-    print_report(1, timer_start, av_gettime_relative());
+    print_report(1, timer_start, gettime_relative_minus_pause());
 
     /* close each encoder */
     for (OutputStream *ost = ost_iter(NULL); ost; ost = ost_iter(ost)) {
@@ -4091,6 +4125,12 @@ static int transcode(void)
     return ret;
 }
 
+static int64_t gettime_relative_minus_pause(void)
+{
+    return av_gettime_relative() - paused_time -
+            (paused_start ? av_gettime_relative() - paused_start : 0);
+}
+
 static BenchmarkTimeStamps get_benchmark_time_stamps(void)
 {
     BenchmarkTimeStamps time_stamps = { av_gettime_relative() };
Index: jellyfin-ffmpeg/fftools/ffmpeg.h
===================================================================
--- fftools/ffmpeg.h
+++ fftools/ffmpeg.h
@@ -766,6 +766,9 @@ extern int recast_media;
 extern int do_psnr;
 #endif
 
+extern int64_t paused_start;
+extern int64_t paused_time;
+
 void term_init(void);
 void term_exit(void);
 
Index: jellyfin-ffmpeg/fftools/ffmpeg_demux.c
===================================================================
--- fftools/ffmpeg_demux.c
+++ fftools/ffmpeg_demux.c
@@ -253,6 +253,11 @@ static void *input_thread(void *arg)
     while (1) {
         DemuxMsg msg = { NULL };
 
+        if (paused_start) {
+            av_usleep(1000); // Be more responsive to unpausing than main thread
+            continue;
+        }
+
         ret = av_read_frame(f->ctx, pkt);
 
         if (ret == AVERROR(EAGAIN)) {
