# See https://github.com/SynoCommunity/spksrc/issues/2662
# Remove the extension pgsql because the extension pgsql does not work with the PostgreSQL server from DSM. The Extension pdo_pgsql works perfectly.
--- adminer/drivers/pgsql.inc.php.org	2020-01-31 10:23:04.000000000 +0000
+++ adminer/drivers/pgsql.inc.php	2020-02-23 16:59:43.482304615 +0000
@@ -4,146 +4,8 @@
 if (isset($_GET["pgsql"])) {
 	$possible_drivers = array("PgSQL", "PDO_PgSQL");
 	define("DRIVER", "pgsql");
-	if (extension_loaded("pgsql")) {
-		class Min_DB {
-			var $extension = "PgSQL", $_link, $_result, $_string, $_database = true, $server_info, $affected_rows, $error, $timeout;
 
-			function _error($errno, $error) {
-				if (ini_bool("html_errors")) {
-					$error = html_entity_decode(strip_tags($error));
-				}
-				$error = preg_replace('~^[^:]*: ~', '', $error);
-				$this->error = $error;
-			}
-
-			function connect($server, $username, $password) {
-				global $adminer;
-				$db = $adminer->database();
-				set_error_handler(array($this, '_error'));
-				$this->_string = "host='" . str_replace(":", "' port='", addcslashes($server, "'\\")) . "' user='" . addcslashes($username, "'\\") . "' password='" . addcslashes($password, "'\\") . "'";
-				$this->_link = @pg_connect("$this->_string dbname='" . ($db != "" ? addcslashes($db, "'\\") : "postgres") . "'", PGSQL_CONNECT_FORCE_NEW);
-				if (!$this->_link && $db != "") {
-					// try to connect directly with database for performance
-					$this->_database = false;
-					$this->_link = @pg_connect("$this->_string dbname='postgres'", PGSQL_CONNECT_FORCE_NEW);
-				}
-				restore_error_handler();
-				if ($this->_link) {
-					$version = pg_version($this->_link);
-					$this->server_info = $version["server"];
-					pg_set_client_encoding($this->_link, "UTF8");
-				}
-				return (bool) $this->_link;
-			}
-
-			function quote($string) {
-				return "'" . pg_escape_string($this->_link, $string) . "'";
-			}
-
-			function value($val, $field) {
-				return ($field["type"] == "bytea" ? pg_unescape_bytea($val) : $val);
-			}
-
-			function quoteBinary($string) {
-				return "'" . pg_escape_bytea($this->_link, $string) . "'";
-			}
-
-			function select_db($database) {
-				global $adminer;
-				if ($database == $adminer->database()) {
-					return $this->_database;
-				}
-				$return = @pg_connect("$this->_string dbname='" . addcslashes($database, "'\\") . "'", PGSQL_CONNECT_FORCE_NEW);
-				if ($return) {
-					$this->_link = $return;
-				}
-				return $return;
-			}
-
-			function close() {
-				$this->_link = @pg_connect("$this->_string dbname='postgres'");
-			}
-
-			function query($query, $unbuffered = false) {
-				$result = @pg_query($this->_link, $query);
-				$this->error = "";
-				if (!$result) {
-					$this->error = pg_last_error($this->_link);
-					$return = false;
-				} elseif (!pg_num_fields($result)) {
-					$this->affected_rows = pg_affected_rows($result);
-					$return = true;
-				} else {
-					$return = new Min_Result($result);
-				}
-				if ($this->timeout) {
-					$this->timeout = 0;
-					$this->query("RESET statement_timeout");
-				}
-				return $return;
-			}
-
-			function multi_query($query) {
-				return $this->_result = $this->query($query);
-			}
-
-			function store_result() {
-				return $this->_result;
-			}
-
-			function next_result() {
-				// PgSQL extension doesn't support multiple results
-				return false;
-			}
-
-			function result($query, $field = 0) {
-				$result = $this->query($query);
-				if (!$result || !$result->num_rows) {
-					return false;
-				}
-				return pg_fetch_result($result->_result, 0, $field);
-			}
-
-			function warnings() {
-				return h(pg_last_notice($this->_link)); // second parameter is available since PHP 7.1.0
-			}
-		}
-
-		class Min_Result {
-			var $_result, $_offset = 0, $num_rows;
-
-			function __construct($result) {
-				$this->_result = $result;
-				$this->num_rows = pg_num_rows($result);
-			}
-
-			function fetch_assoc() {
-				return pg_fetch_assoc($this->_result);
-			}
-
-			function fetch_row() {
-				return pg_fetch_row($this->_result);
-			}
-
-			function fetch_field() {
-				$column = $this->_offset++;
-				$return = new stdClass;
-				if (function_exists('pg_field_table')) {
-					$return->orgtable = pg_field_table($this->_result, $column);
-				}
-				$return->name = pg_field_name($this->_result, $column);
-				$return->orgname = $return->name;
-				$return->type = pg_field_type($this->_result, $column);
-				$return->charsetnr = ($return->type == "bytea" ? 63 : 0); // 63 - binary
-				return $return;
-			}
-
-			function __destruct() {
-				pg_free_result($this->_result);
-			}
-		}
-
-	} elseif (extension_loaded("pdo_pgsql")) {
+	if (extension_loaded("pdo_pgsql")) {
 		class Min_DB extends Min_PDO {
 			var $extension = "PDO_PgSQL", $timeout;
 
