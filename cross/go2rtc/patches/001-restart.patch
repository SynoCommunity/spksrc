diff --git a/go.mod b/go.mod
index edc178f..1e124b8 100644
--- a/go.mod
+++ b/go.mod
@@ -22,6 +22,12 @@ require (
 	gopkg.in/yaml.v3 v3.0.1
 )
 
+require (
+	github.com/tillberg/stringset v0.0.0-20220429204947-12df33ab1cd6 // indirect
+	github.com/tillberg/watcher v0.0.0-20200309151633-e9412552417a // indirect
+	gopkg.in/fsnotify/fsnotify.v1 v1.4.7 // indirect
+)
+
 require (
 	github.com/davecgh/go-spew v1.1.1 // indirect
 	github.com/google/uuid v1.3.0 // indirect
@@ -37,6 +43,7 @@ require (
 	github.com/pion/transport/v2 v2.2.1 // indirect
 	github.com/pion/turn/v2 v2.1.3 // indirect
 	github.com/pmezard/go-difflib v1.0.0 // indirect
+	github.com/tillberg/autorestart v0.0.0-20220524165049-22c3f5bc7fce
 	github.com/xiam/to v0.0.0-20200126224905-d60d31e03561 // indirect
 	golang.org/x/crypto v0.11.0 // indirect
 	golang.org/x/mod v0.12.0 // indirect
diff --git a/go.sum b/go.sum
index c794dbb..24a6806 100644
--- a/go.sum
+++ b/go.sum
@@ -124,6 +124,12 @@ github.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcU
 github.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=
 github.com/tadglines/go-pkgs v0.0.0-20210623144937-b983b20f54f9 h1:aeN+ghOV0b2VCmKKO3gqnDQ8mLbpABZgRR2FVYx4ouI=
 github.com/tadglines/go-pkgs v0.0.0-20210623144937-b983b20f54f9/go.mod h1:roo6cZ/uqpwKMuvPG0YmzI5+AmUiMWfjCBZpGXqbTxE=
+github.com/tillberg/autorestart v0.0.0-20220524165049-22c3f5bc7fce h1:NcQ3uInL+f6lY1A75Cupbla2BVhbOIR0VnhX3vAqau4=
+github.com/tillberg/autorestart v0.0.0-20220524165049-22c3f5bc7fce/go.mod h1:ZDC6T6DzgNA725fdY3teO4XGeK1jfSFeeZ5Hvlnc+O8=
+github.com/tillberg/stringset v0.0.0-20220429204947-12df33ab1cd6 h1:9QVeacXfCTL1mS2tClma3psYYcOIYSOQn0/BD/viH/Q=
+github.com/tillberg/stringset v0.0.0-20220429204947-12df33ab1cd6/go.mod h1:fYcF9dZnzutLCGBoA9x0Umi4kqTf5PsSXTW+M4P0qaE=
+github.com/tillberg/watcher v0.0.0-20200309151633-e9412552417a h1:bEuy52O1mMAemrWT8/fHsvYYc43jaZ2RRmsj+1aYtUg=
+github.com/tillberg/watcher v0.0.0-20200309151633-e9412552417a/go.mod h1:5jDyx/qS4SXr0VPTpPikj9jLQAIR3cqdtZy2f5M2KuA=
 github.com/xiam/to v0.0.0-20200126224905-d60d31e03561 h1:SVoNK97S6JlaYlHcaC+79tg3JUlQABcc0dH2VQ4Y+9s=
 github.com/xiam/to v0.0.0-20200126224905-d60d31e03561/go.mod h1:cqbG7phSzrbdg3aj+Kn63bpVruzwDZi58CpxlZkjwzw=
 github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
@@ -242,6 +248,8 @@ gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8
 gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 h1:YR8cESwS4TdDjEe65xsg0ogRM/Nc3DYOhEAlW+xobZo=
 gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
 gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=
+gopkg.in/fsnotify/fsnotify.v1 v1.4.7 h1:XNNYLJHt73EyYiCZi6+xjupS9CpvmiDgjPTAjrBlQbo=
+gopkg.in/fsnotify/fsnotify.v1 v1.4.7/go.mod h1:Fyux9zXlo4rWoMSIzpn9fDAYjalPqJ/K1qJ27s+7ltE=
 gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=
 gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
 gopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
diff --git a/internal/api/api.go b/internal/api/api.go
index a14cb28..911a586 100644
--- a/internal/api/api.go
+++ b/internal/api/api.go
@@ -7,12 +7,14 @@ import (
 	"net"
 	"net/http"
 	"os"
+	"runtime"
 	"strconv"
 	"strings"
 	"sync"
 
 	"github.com/AlexxIT/go2rtc/internal/app"
 	"github.com/rs/zerolog"
+	"github.com/tillberg/autorestart"
 )
 
 func Init() {
@@ -48,6 +50,7 @@ func Init() {
 	HandleFunc("api", apiHandler)
 	HandleFunc("api/config", configHandler)
 	HandleFunc("api/exit", exitHandler)
+	HandleFunc("api/restart", restartHandler)
 
 	// ensure we can listen without errors
 	listener, err := net.Listen("tcp", cfg.Mod.Listen)
@@ -218,6 +221,19 @@ type Stream struct {
 	URL  string `json:"url"`
 }
 
+func restartHandler(w http.ResponseWriter, r *http.Request) {
+	if r.Method != "POST" {
+		http.Error(w, "", http.StatusBadRequest)
+		return
+	}
+	if runtime.GOOS != "windows" {
+		go autorestart.RestartViaExec()
+	} else {
+		os.Exit(0)
+	}
+
+}
+
 func ResponseStreams(w http.ResponseWriter, streams []Stream) {
 	if len(streams) == 0 {
 		http.Error(w, "no streams", http.StatusNotFound)
diff --git a/www/editor.html b/www/editor.html
index 92320cb..b144d19 100644
--- a/www/editor.html
+++ b/www/editor.html
@@ -27,7 +27,8 @@
 <body>
 <script src="main.js"></script>
 <div>
-    <button id="save">Save & Restart</button>
+    <button id="save">Save</button>
+    <button id="saverestart">Save & Restart</button>
 </div>
 <br>
 <div id="config"></div>
@@ -43,7 +44,19 @@
         }).then(r => {
             if (r.ok) {
                 alert('OK');
-                fetch('api/exit?code=100', {method: 'POST'});
+            } else {
+                r.text().then(alert);
+            }
+        });
+    });
+
+    document.getElementById('saverestart').addEventListener('click', () => {
+        fetch('api/config', {
+            method: 'POST', body: editor.getValue()
+        }).then(r => {
+            if (r.ok) {
+                alert('OK');
+                fetch('api/restart', {method: 'POST'});
             } else {
                 r.text().then(alert);
             }
