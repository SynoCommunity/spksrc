/*========================== begin_copyright_notice ============================

Copyright (C) 2023 Intel Corporation

SPDX-License-Identifier: MIT

============================= end_copyright_notice ===========================*/

/*========================== begin_copyright_notice ============================

Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
See https://llvm.org/LICENSE.txt for license information.
SPDX-License-Identifier: Apache-2.0 with LLVM-exception

============================= end_copyright_notice ===========================*/

# Description:
# Disable the option to avoid shortening of llvm.memset, which isn't supported
# by our memset lowering / LowerGEPForPrivMem pass, and leads to suboptimal CG.
#
# Shortening sequence to avoid:
# call void @llvm.memset.p0i8.i64(i8* %ptr, i8 0, i64 64, i1 false)
# ->
# %gep = getelementptr inbounds i8, i8* %ptr, i64 40
# call void @llvm.memset.p0i8.i64(i8* %gep, i8 0, i64 24, i1 false)
#
# TODO: Improve memset handling / GEP to extract/insertelement lowering, then
# abandon this patch.

diff --git a/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp b/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp
index c5c8e880e..e620493d8 100644
--- lib/Transforms/Scalar/DeadStoreElimination.cpp
+++ lib/Transforms/Scalar/DeadStoreElimination.cpp
@@ -113,7 +113,7 @@ DEBUG_COUNTER(MemorySSACounter, "dse-memoryssa",

 static cl::opt<bool>
 EnablePartialOverwriteTracking("enable-dse-partial-overwrite-tracking",
-  cl::init(true), cl::Hidden,
+  cl::init(false), cl::Hidden,
   cl::desc("Enable partial-overwrite tracking in DSE"));

 static cl::opt<bool>

