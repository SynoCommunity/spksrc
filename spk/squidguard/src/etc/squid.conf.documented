#	WELCOME TO SQUID 3.1.20
#	----------------------------
#	
#	This is the documentation for the Squid configuration file.
#	This documentation can also be found online at:
#		http://www.squid-cache.org/Doc/config/
#	
#	You may wish to look at the Squid home page and wiki for the
#	FAQ and other documentation:
#		http://www.squid-cache.org/
#		http://wiki.squid-cache.org/SquidFaq
#		http://wiki.squid-cache.org/ConfigExamples
#	
#	This documentation shows what the defaults for various directives
#	happen to be.  If you don't need to change the default, you should
#	leave the line out of your squid.conf in most cases.
#	
#	In some cases "none" refers to no default setting at all,
#	while in other cases it refers to the value of the option
#	- the comments for that keyword indicate if this is the case.
#

#  Configuration options can be included using the "include" directive.
#  Include takes a list of files to include. Quoting and wildcards are
#  supported.
#
#  For example,
#
#  include /path/to/included/file/squid.acl.config
#
#  Includes can be nested up to a hard-coded depth of 16 levels.
#  This arbitrary restriction is to prevent recursive include references
#  from causing Squid entering an infinite loop whilst trying to load
#  configuration files.

#  TAG: dns_testnames
#	Remove this line. DNS is no longer tested on startup.
#Default:
# none

#  TAG: extension_methods
#	Remove this line. All valid methods for HTTP are accepted by default.
#Default:
# none

#  TAG: incoming_rate
#Default:
# none

#  TAG: server_http11
#	Remove this line. HTTP/1.1 is supported by default.
#Default:
# none

#  TAG: upgrade_http0.9
#	Remove this line. ICY/1.0 streaming protocol is supported by default.
#Default:
# none

#  TAG: zph_local
#	Alter these entries. Use the qos_flows directive instead.
#Default:
# none

#  TAG: header_access
#	Since squid-3.0 replace with request_header_access or reply_header_access
#	depending on whether you wish to match client requests or server replies.
#Default:
# none

#  TAG: httpd_accel_no_pmtu_disc
#	Since squid-3.0 use the 'disable-pmtu-discovery' flag on http_port instead.
#Default:
# none

# OPTIONS FOR AUTHENTICATION
# -----------------------------------------------------------------------------

#  TAG: auth_param
#	This is used to define parameters for the various authentication
#	schemes supported by Squid.
#
#	format: auth_param scheme parameter [setting]
#
#	The order in which authentication schemes are presented to the client is
#	dependent on the order the scheme first appears in config file. IE
#	has a bug (it's not RFC 2617 compliant) in that it will use the basic
#	scheme if basic is the first entry presented, even if more secure
#	schemes are presented. For now use the order in the recommended
#	settings section below. If other browsers have difficulties (don't
#	recognize the schemes offered even if you are using basic) either
#	put basic first, or disable the other schemes (by commenting out their
#	program entry).
#
#	Once an authentication scheme is fully configured, it can only be
#	shutdown by shutting squid down and restarting. Changes can be made on
#	the fly and activated with a reconfigure. I.E. You can change to a
#	different helper, but not unconfigure the helper completely.
#
#	Please note that while this directive defines how Squid processes
#	authentication it does not automatically activate authentication.
#	To use authentication you must in addition make use of ACLs based
#	on login name in http_access (proxy_auth, proxy_auth_regex or
#	external with %LOGIN used in the format tag). The browser will be
#	challenged for authentication on the first such acl encountered
#	in http_access processing and will also be re-challenged for new
#	login credentials if the request is being denied by a proxy_auth
#	type acl.
#
#	WARNING: authentication can't be used in a transparently intercepting
#	proxy as the client then thinks it is talking to an origin server and
#	not the proxy. This is a limitation of bending the TCP/IP protocol to
#	transparently intercepting port 80, not a limitation in Squid.
#	Ports flagged 'transparent', 'intercept', or 'tproxy' have
#	authentication disabled.
#
#	=== Parameters for the basic scheme follow. ===
#
#	"program" cmdline
#	Specify the command for the external authenticator.  Such a program
#	reads a line containing "username password" and replies "OK" or
#	"ERR" in an endless loop. "ERR" responses may optionally be followed
#	by a error description available as %m in the returned error page.
#	If you use an authenticator, make sure you have 1 acl of type
#	proxy_auth.
#
#	By default, the basic authentication scheme is not used unless a
#	program is specified.
#
#	If you want to use the traditional NCSA proxy authentication, set
#	this line to something like
#
#	auth_param basic program /usr/local/squid/libexec/ncsa_auth /usr/local/squid/etc/passwd
#
#	"utf8" on|off
#	HTTP uses iso-latin-1 as characterset, while some authentication
#	backends such as LDAP expects UTF-8. If this is set to on Squid will
#	translate the HTTP iso-latin-1 charset to UTF-8 before sending the
#	username & password to the helper.
#
#	"children" numberofchildren
#	The number of authenticator processes to spawn. If you start too few
#	Squid will have to wait for them to process a backlog of credential
#	verifications, slowing it down. When password verifications are
#	done via a (slow) network you are likely to need lots of
#	authenticator processes.
#	auth_param basic children 5
#
#	"concurrency" concurrency
#	The number of concurrent requests the helper can process.
#	The default of 0 is used for helpers who only supports
#	one request at a time. Setting this changes the protocol used to
#	include a channel number first on the request/response line, allowing
#	multiple requests to be sent to the same helper in parallell without
#	wating for the response.
#	Must not be set unless it's known the helper supports this.
#	auth_param basic concurrency 0
#
#	"realm" realmstring
#	Specifies the realm name which is to be reported to the
#	client for the basic proxy authentication scheme (part of
#	the text the user will see when prompted their username and
#	password). There is no default.
#	auth_param basic realm Squid proxy-caching web server
#
#	"credentialsttl" timetolive
#	Specifies how long squid assumes an externally validated
#	username:password pair is valid for - in other words how
#	often the helper program is called for that user. Set this
#	low to force revalidation with short lived passwords.  Note
#	setting this high does not impact your susceptibility
#	to replay attacks unless you are using an one-time password
#	system (such as SecureID).  If you are using such a system,
#	you will be vulnerable to replay attacks unless you also
#	use the max_user_ip ACL in an http_access rule.
#
#	"casesensitive" on|off
#	Specifies if usernames are case sensitive. Most user databases are
#	case insensitive allowing the same username to be spelled using both
#	lower and upper case letters, but some are case sensitive. This
#	makes a big difference for user_max_ip ACL processing and similar.
#	auth_param basic casesensitive off
#
#	=== Parameters for the digest scheme follow ===
#
#	"program" cmdline
#	Specify the command for the external authenticator.  Such
#	a program reads a line containing "username":"realm" and
#	replies with the appropriate H(A1) value hex encoded or
#	ERR if the user (or his H(A1) hash) does not exists.
#	See rfc 2616 for the definition of H(A1).
#	"ERR" responses may optionally be followed by a error description
#	available as %m in the returned error page.
#
#	By default, the digest authentication scheme is not used unless a
#	program is specified.
#
#	If you want to use a digest authenticator, set this line to
#	something like
#
#	auth_param digest program /usr/local/squid/bin/digest_pw_auth /usr/local/squid/etc/digpass
#
#	"utf8" on|off
#	HTTP uses iso-latin-1 as characterset, while some authentication
#	backends such as LDAP expects UTF-8. If this is set to on Squid will
#	translate the HTTP iso-latin-1 charset to UTF-8 before sending the
#	username & password to the helper.
#
#	"children" numberofchildren
#	The number of authenticator processes to spawn (no default).
#	If you start too few Squid will have to wait for them to
#	process a backlog of H(A1) calculations, slowing it down.
#	When the H(A1) calculations are done via a (slow) network
#	you are likely to need lots of authenticator processes.
#	auth_param digest children 5
#
#	"realm" realmstring
#	Specifies the realm name which is to be reported to the
#	client for the digest proxy authentication scheme (part of
#	the text the user will see when prompted their username and
#	password). There is no default.
#	auth_param digest realm Squid proxy-caching web server
#
#	"nonce_garbage_interval" timeinterval
#	Specifies the interval that nonces that have been issued
#	to client_agent's are checked for validity.
#
#	"nonce_max_duration" timeinterval
#	Specifies the maximum length of time a given nonce will be
#	valid for.
#
#	"nonce_max_count" number
#	Specifies the maximum number of times a given nonce can be
#	used.
#
#	"nonce_strictness" on|off
#	Determines if squid requires strict increment-by-1 behavior
#	for nonce counts, or just incrementing (off - for use when
#	useragents generate nonce counts that occasionally miss 1
#	(ie, 1,2,4,6)). Default off.
#
#	"check_nonce_count" on|off
#	This directive if set to off can disable the nonce count check
#	completely to work around buggy digest qop implementations in
#	certain mainstream browser versions. Default on to check the
#	nonce count to protect from authentication replay attacks.
#
#	"post_workaround" on|off
#	This is a workaround to certain buggy browsers who sends
#	an incorrect request digest in POST requests when reusing
#	the same nonce as acquired earlier on a GET request.
#
#	=== NTLM scheme options follow ===
#
#	"program" cmdline
#	Specify the command for the external NTLM authenticator.
#	Such a program reads exchanged NTLMSSP packets with
#	the browser via Squid until authentication is completed.
#	If you use an NTLM authenticator, make sure you have 1 acl
#	of type proxy_auth.  By default, the NTLM authenticator_program
#	is not used.
#
#	auth_param ntlm program /usr/local/squid/bin/ntlm_auth
#
#	"children" numberofchildren
#	The number of authenticator processes to spawn (no default).
#	If you start too few Squid will have to wait for them to
#	process a backlog of credential verifications, slowing it
#	down. When credential verifications are done via a (slow)
#	network you are likely to need lots of authenticator
#	processes.
#
#	auth_param ntlm children 5
#
#	"keep_alive" on|off
#	Whether to keep the connection open after the initial response where
#	Squid tells the browser which schemes are supported by the proxy.
#	Some browsers are known to present many login popups or to corrupt
#	POST/PUT requests transfer if the connection is not closed.
#	The default is currently OFF to avoid this, but may change.
#	
#	auth_param ntlm keep_alive on
#
#	=== Options for configuring the NEGOTIATE auth-scheme follow ===
#
#	"program" cmdline
#	Specify the command for the external Negotiate authenticator.
#	This protocol is used in Microsoft Active-Directory enabled setups with
#	the Microsoft Internet Explorer or Mozilla Firefox browsers.
#	Its main purpose is to exchange credentials with the Squid proxy
#	using the Kerberos mechanisms.
#	If you use a Negotiate authenticator, make sure you have at least
#	one acl of type proxy_auth active. By default, the negotiate
#	authenticator_program is not used.
#	The only supported program for this role is the ntlm_auth
#	program distributed as part of Samba, version 4 or later.
#
#	auth_param negotiate program /usr/local/squid/bin/ntlm_auth --helper-protocol=gss-spnego
#
#	"children" numberofchildren
#	The number of authenticator processes to spawn (no default).
#	If you start too few Squid will have to wait for them to
#	process a backlog of credential verifications, slowing it
#	down. When crendential verifications are done via a (slow)
#	network you are likely to need lots of authenticator
#	processes.
#	auth_param negotiate children 5
#
#	"keep_alive" on|off
#	Whether to keep the connection open after the initial response where
#	Squid tells the browser which schemes are supported by the proxy.
#	Some browsers are known to present many login popups or to corrupt
#	POST/PUT requests transfer if the connection is not closed.
#	The default is currently OFF to avoid this, but may change.
#	
#	auth_param negotiate keep_alive on
#
#
#	Examples:
#
##Recommended minimum configuration per scheme:
##auth_param negotiate program <uncomment and complete this line to activate>
##auth_param negotiate children 5
##auth_param negotiate keep_alive on
##
##auth_param ntlm program <uncomment and complete this line to activate>
##auth_param ntlm children 5
##auth_param ntlm keep_alive on
##
##auth_param digest program <uncomment and complete this line>
##auth_param digest children 5
##auth_param digest realm Squid proxy-caching web server
##auth_param digest nonce_garbage_interval 5 minutes
##auth_param digest nonce_max_duration 30 minutes
##auth_param digest nonce_max_count 50
##
##auth_param basic program <uncomment and complete this line>
##auth_param basic children 5
##auth_param basic realm Squid proxy-caching web server
##auth_param basic credentialsttl 2 hours
#Default:
# none

#  TAG: authenticate_cache_garbage_interval
#	The time period between garbage collection across the username cache.
#	This is a tradeoff between memory utilization (long intervals - say
#	2 days) and CPU (short intervals - say 1 minute). Only change if you
#	have good reason to.
#Default:
# authenticate_cache_garbage_interval 1 hour

#  TAG: authenticate_ttl
#	The time a user & their credentials stay in the logged in
#	user cache since their last request. When the garbage
#	interval passes, all user credentials that have passed their
#	TTL are removed from memory.
#Default:
# authenticate_ttl 1 hour

#  TAG: authenticate_ip_ttl
#	If you use proxy authentication and the 'max_user_ip' ACL,
#	this directive controls how long Squid remembers the IP
#	addresses associated with each user.  Use a small value
#	(e.g., 60 seconds) if your users might change addresses
#	quickly, as is the case with dialups.   You might be safe
#	using a larger value (e.g., 2 hours) in a corporate LAN
#	environment with relatively static address assignments.
#Default:
# authenticate_ip_ttl 0 seconds

# ACCESS CONTROLS
# -----------------------------------------------------------------------------

#  TAG: external_acl_type
#	This option defines external acl classes using a helper program
#	to look up the status
#
#	  external_acl_type name [options] FORMAT.. /path/to/helper [helper arguments..]
#
#	Options:
#
#	  ttl=n		TTL in seconds for cached results (defaults to 3600
#	  		for 1 hour)
#	  negative_ttl=n
#	  		TTL for cached negative lookups (default same
#	  		as ttl)
#	  children=n	Number of acl helper processes spawn to service
#			external acl lookups of this type. (default 5)
#	  concurrency=n	concurrency level per process. Only used with helpers
#			capable of processing more than one query at a time.
#	  cache=n	result cache size, 0 is unbounded (default)
#	  grace=n	Percentage remaining of TTL where a refresh of a
#			cached entry should be initiated without needing to
#			wait for a new reply. (default 0 for no grace period)
#	  protocol=2.5	Compatibility mode for Squid-2.5 external acl helpers
#	  ipv4 / ipv6	IP protocol used to communicate with this helper.
#			The default is to auto-detect IPv6 and use it when available.
#
#	FORMAT specifications
#
#	  %LOGIN	Authenticated user login name
#	  %EXT_USER	Username from external acl
#	  %IDENT	Ident user name
#	  %SRC		Client IP
#	  %SRCPORT	Client source port
#	  %URI		Requested URI
#	  %DST		Requested host
#	  %PROTO	Requested protocol
#	  %PORT		Requested port
#	  %PATH		Requested URL path
#	  %METHOD	Request method
#	  %MYADDR	Squid interface address
#	  %MYPORT	Squid http_port number
#	  %PATH		Requested URL-path (including query-string if any)
#	  %USER_CERT	SSL User certificate in PEM format
#	  %USER_CERTCHAIN SSL User certificate chain in PEM format
#	  %USER_CERT_xx	SSL User certificate subject attribute xx
#	  %USER_CA_xx	SSL User certificate issuer attribute xx
#
#	  %>{Header}	HTTP request header "Header"
#	  %>{Hdr:member}
#	  		HTTP request header "Hdr" list member "member"
#	  %>{Hdr:;member}
#	  		HTTP request header list member using ; as
#	  		list separator. ; can be any non-alphanumeric
#			character.
#
#	  %<{Header}	HTTP reply header "Header"
#	  %<{Hdr:member}
#	  		HTTP reply header "Hdr" list member "member"
#	  %<{Hdr:;member}
#	  		HTTP reply header list member using ; as
#	  		list separator. ; can be any non-alphanumeric
#			character.
#
#	  %%		The percent sign. Useful for helpers which need
#			an unchanging input format.
#
#	In addition to the above, any string specified in the referencing
#	acl will also be included in the helper request line, after the
#	specified formats (see the "acl external" directive)
#
#	The helper receives lines per the above format specification,
#	and returns lines starting with OK or ERR indicating the validity
#	of the request and optionally followed by additional keywords with
#	more details.
#
#	General result syntax:
#
#	  OK/ERR keyword=value ...
#
#	Defined keywords:
#
#	  user=		The users name (login)
#	  password=	The users password (for login= cache_peer option)
#	  message=	Message describing the reason. Available as %o
#	  		in error pages
#	  tag=		Apply a tag to a request (for both ERR and OK results)
#	  		Only sets a tag, does not alter existing tags.
#	  log=		String to be logged in access.log. Available as
#	  		%ea in logformat specifications
#
#	If protocol=3.0 (the default) then URL escaping is used to protect
#	each value in both requests and responses.
#
#	If using protocol=2.5 then all values need to be enclosed in quotes
#	if they may contain whitespace, or the whitespace escaped using \.
#	And quotes or \ characters within the keyword value must be \ escaped.
#
#	When using the concurrency= option the protocol is changed by
#	introducing a query channel tag infront of the request/response.
#	The query channel tag is a number between 0 and concurrency-1.
#Default:
# none

#  TAG: acl
#	Defining an Access List
#
#	Every access list definition must begin with an aclname and acltype, 
#	followed by either type-specific arguments or a quoted filename that
#	they are read from.
#
#	   acl aclname acltype argument ...
#	   acl aclname acltype "file" ...
#
#	When using "file", the file should contain one item per line.
#
#	By default, regular expressions are CASE-SENSITIVE.
#	To make them case-insensitive, use the -i option. To return case-sensitive
#	use the +i option between patterns, or make a new ACL line without -i.
#
#	Some acl types require suspending the current request in order
#	to access some external data source.
#	Those which do are marked with the tag [slow], those which
#	don't are marked as [fast].
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl
#	for further information
#
#	***** ACL TYPES AVAILABLE *****
#
#	acl aclname src ip-address/netmask ...	# clients IP address [fast]
#	acl aclname src addr1-addr2/netmask ...	# range of addresses [fast]
#	acl aclname dst ip-address/netmask ...	# URL host's IP address [slow]
#	acl aclname myip ip-address/netmask ...	# local socket IP address [fast]
#
#	acl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)
#	  # The arp ACL requires the special configure option --enable-arp-acl.
#	  # Furthermore, the ARP ACL code is not portable to all operating systems.
#	  # It works on Linux, Solaris, Windows, FreeBSD, and some
#	  # other *BSD variants.
#	  # [fast]
#	  #
#	  # NOTE: Squid can only determine the MAC address for clients that are on
#	  # the same subnet. If the client is on a different subnet,
#	  # then Squid cannot find out its MAC address.
#
#	acl aclname srcdomain   .foo.com ...
#	  # reverse lookup, from client IP [slow]
#	acl aclname dstdomain   .foo.com ...
#	  # Destination server from URL [fast]
#	acl aclname srcdom_regex [-i] \.foo\.com ...
#	  # regex matching client name [slow]
#	acl aclname dstdom_regex [-i] \.foo\.com ...
#	  # regex matching server [fast]
#	  #
#	  # For dstdomain and dstdom_regex a reverse lookup is tried if a IP
#	  # based URL is used and no match is found. The name "none" is used
#	  # if the reverse lookup fails.
#
#	acl aclname src_as number ...
#	acl aclname dst_as number ...
#	  # [fast]
#	  # Except for access control, AS numbers can be used for
#	  # routing of requests to specific caches. Here's an
#	  # example for routing all requests for AS#1241 and only
#	  # those to mycache.mydomain.net:
#	  # acl asexample dst_as 1241
#	  # cache_peer_access mycache.mydomain.net allow asexample
#	  # cache_peer_access mycache_mydomain.net deny all
#
#	acl aclname peername myPeer ...
#	  # [fast]
#	  # match against a named cache_peer entry
#	  # set unique name= on cache_peer lines for reliable use.
#
#	acl aclname time [day-abbrevs] [h1:m1-h2:m2]
#	  # [fast]
#	  #  day-abbrevs:
#	  #	S - Sunday
#	  #	M - Monday
#	  #	T - Tuesday
#	  #	W - Wednesday
#	  #	H - Thursday
#	  #	F - Friday
#	  #	A - Saturday
#	  #  h1:m1 must be less than h2:m2
#
#	acl aclname url_regex [-i] ^http:// ...
#	  # regex matching on whole URL [fast]
#	acl aclname urlpath_regex [-i] \.gif$ ...
#	  # regex matching on URL path [fast]
#
#	acl aclname port 80 70 21 0-1024...   # destination TCP port [fast]
#	                                      # ranges are alloed
#	acl aclname myport 3128 ...	          # local socket TCP port [fast]
#	acl aclname myportname 3128 ...       # http(s)_port name [fast]
#
#	acl aclname proto HTTP FTP ...        # request protocol [fast]
# 
#	acl aclname method GET POST ...       # HTTP request method [fast]
#
#	acl aclname http_status 200 301 500- 400-403 ... 
#	  # status code in reply [fast]
#
#	acl aclname browser [-i] regexp ...
#	  # pattern match on User-Agent header (see also req_header below) [fast]
#
#	acl aclname referer_regex [-i] regexp ...
#	  # pattern match on Referer header [fast]
#	  # Referer is highly unreliable, so use with care
#
#	acl aclname ident username ...
#	acl aclname ident_regex [-i] pattern ...
#	  # string match on ident output [slow]
#	  # use REQUIRED to accept any non-null ident.
#
#	acl aclname proxy_auth [-i] username ...
#	acl aclname proxy_auth_regex [-i] pattern ...
#	  # perform http authentication challenge to the client and match against
#	  # supplied credentials [slow]
#	  #
#	  # takes a list of allowed usernames.
#	  # use REQUIRED to accept any valid username.
#	  #
#	  # Will use proxy authentication in forward-proxy scenarios, and plain
#	  # http authenticaiton in reverse-proxy scenarios
#	  #
#	  # NOTE: when a Proxy-Authentication header is sent but it is not
#	  # needed during ACL checking the username is NOT logged
#	  # in access.log.
#	  #
#	  # NOTE: proxy_auth requires a EXTERNAL authentication program
#	  # to check username/password combinations (see
#	  # auth_param directive).
#	  #
#	  # NOTE: proxy_auth can't be used in a transparent/intercepting proxy
#	  # as the browser needs to be configured for using a proxy in order
#	  # to respond to proxy authentication.
#
#	acl aclname snmp_community string ...
#	  # A community string to limit access to your SNMP Agent [fast]
#	  # Example:
#	  #
#	  #	acl snmppublic snmp_community public
#
#	acl aclname maxconn number
#	  # This will be matched when the client's IP address has
#	  # more than <number> TCP connections established. [fast]
#	  # NOTE: This only measures direct TCP links so X-Forwarded-For
#	  # indirect clients are not counted.
#
#	acl aclname max_user_ip [-s] number
#	  # This will be matched when the user attempts to log in from more
#	  # than <number> different ip addresses. The authenticate_ip_ttl
#	  # parameter controls the timeout on the ip entries. [fast]
#	  # If -s is specified the limit is strict, denying browsing
#	  # from any further IP addresses until the ttl has expired. Without
#	  # -s Squid will just annoy the user by "randomly" denying requests.
#	  # (the counter is reset each time the limit is reached and a
#	  # request is denied)
#	  # NOTE: in acceleration mode or where there is mesh of child proxies,
#	  # clients may appear to come from multiple addresses if they are
#	  # going through proxy farms, so a limit of 1 may cause user problems.
#
#	acl aclname req_mime_type [-i] mime-type ...
#	  # regex match against the mime type of the request generated
#	  # by the client. Can be used to detect file upload or some
#	  # types HTTP tunneling requests [fast]
#	  # NOTE: This does NOT match the reply. You cannot use this
#	  # to match the returned file type.
#
#	acl aclname req_header header-name [-i] any\.regex\.here
#	  # regex match against any of the known request headers.  May be
#	  # thought of as a superset of "browser", "referer" and "mime-type"
#	  # ACL [fast]
#
#	acl aclname rep_mime_type [-i] mime-type ...
#	  # regex match against the mime type of the reply received by
#	  # squid. Can be used to detect file download or some
#	  # types HTTP tunneling requests. [fast]
#	  # NOTE: This has no effect in http_access rules. It only has
#	  # effect in rules that affect the reply data stream such as
#	  # http_reply_access.
#
#	acl aclname rep_header header-name [-i] any\.regex\.here
#	  # regex match against any of the known reply headers. May be
#	  # thought of as a superset of "browser", "referer" and "mime-type"
#	  # ACLs [fast]
#
#	acl aclname external class_name [arguments...]
#	  # external ACL lookup via a helper class defined by the
#	  # external_acl_type directive [slow]
#
#	acl aclname user_cert attribute values...
#	  # match against attributes in a user SSL certificate
#	  # attribute is one of DN/C/O/CN/L/ST [fast]
#
#	acl aclname ca_cert attribute values...
#	  # match against attributes a users issuing CA SSL certificate
#	  # attribute is one of DN/C/O/CN/L/ST [fast]
#
#	acl aclname ext_user username ...
#	acl aclname ext_user_regex [-i] pattern ...
#	  # string match on username returned by external acl helper [slow]
#	  # use REQUIRED to accept any non-null user name.
#
#	acl aclname tag tagvalue ...
#	  # string match on tag returned by external acl helper [slow]
#
#	Examples:
#		acl macaddress arp 09:00:2b:23:45:67
#		acl myexample dst_as 1241
#		acl password proxy_auth REQUIRED
#		acl fileupload req_mime_type -i ^multipart/form-data$
#		acl javascript rep_mime_type -i ^application/x-javascript$
#
#Default:
# acl all src all
#
#
# Recommended minimum configuration:
#
acl manager proto cache_object
acl localhost src 127.0.0.1/32 ::1
acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1

# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
acl localnet src 10.0.0.0/8	# RFC1918 possible internal network
acl localnet src 172.16.0.0/12	# RFC1918 possible internal network
acl localnet src 192.168.0.0/16	# RFC1918 possible internal network
acl localnet src fc00::/7       # RFC 4193 local private network range
acl localnet src fe80::/10      # RFC 4291 link-local (directly plugged) machines

acl SSL_ports port 443
acl Safe_ports port 80		# http
acl Safe_ports port 21		# ftp
acl Safe_ports port 443		# https
acl Safe_ports port 70		# gopher
acl Safe_ports port 210		# wais
acl Safe_ports port 1025-65535	# unregistered ports
acl Safe_ports port 280		# http-mgmt
acl Safe_ports port 488		# gss-http
acl Safe_ports port 591		# filemaker
acl Safe_ports port 777		# multiling http
acl CONNECT method CONNECT

#  TAG: follow_x_forwarded_for
#	Allowing or Denying the X-Forwarded-For header to be followed to
#	find the original source of a request.
#
#	Requests may pass through a chain of several other proxies
#	before reaching us.  The X-Forwarded-For header will contain a
#	comma-separated list of the IP addresses in the chain, with the
#	rightmost address being the most recent.
#
#	If a request reaches us from a source that is allowed by this
#	configuration item, then we consult the X-Forwarded-For header
#	to see where that host received the request from.  If the
#	X-Forwarded-For header contains multiple addresses, we continue
#	backtracking until we reach an address for which we are not allowed
#	to follow the X-Forwarded-For header, or until we reach the first
#	address in the list. For the purpose of ACL used in the
#	follow_x_forwarded_for directive the src ACL type always matches
#	the address we are testing and srcdomain matches its rDNS.
#
#	The end result of this process is an IP address that we will
#	refer to as the indirect client address.  This address may
#	be treated as the client address for access control, ICAP, delay
#	pools and logging, depending on the acl_uses_indirect_client,
#	icap_uses_indirect_client, delay_pool_uses_indirect_client and
#	log_uses_indirect_client options.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
#	SECURITY CONSIDERATIONS:
#
#		Any host for which we follow the X-Forwarded-For header
#		can place incorrect information in the header, and Squid
#		will use the incorrect information as if it were the
#		source address of the request.  This may enable remote
#		hosts to bypass any access control restrictions that are
#		based on the client's source addresses.
#
#	For example:
#
#		acl localhost src 127.0.0.1
#		acl my_other_proxy srcdomain .proxy.example.com
#		follow_x_forwarded_for allow localhost
#		follow_x_forwarded_for allow my_other_proxy
#Default:
# follow_x_forwarded_for deny all

#  TAG: acl_uses_indirect_client	on|off
#	Controls whether the indirect client address
#	(see follow_x_forwarded_for) is used instead of the
#	direct client address in acl matching.
#
#	NOTE: maxconn ACL considers direct TCP links and indirect
#	      clients will always have zero. So no match.
#Default:
# acl_uses_indirect_client on

#  TAG: delay_pool_uses_indirect_client	on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-follow-x-forwarded-for and --enable-delay-pools option
#
#	Controls whether the indirect client address
#	(see follow_x_forwarded_for) is used instead of the
#	direct client address in delay pools.
#Default:
# delay_pool_uses_indirect_client on

#  TAG: log_uses_indirect_client	on|off
#	Controls whether the indirect client address
#	(see follow_x_forwarded_for) is used instead of the
#	direct client address in the access log.
#Default:
# log_uses_indirect_client on

#  TAG: http_access
#	Allowing or Denying access based on defined access lists
#
#	Access to the HTTP port:
#	http_access allow|deny [!]aclname ...
#
#	NOTE on default values:
#
#	If there are no "access" lines present, the default is to deny
#	the request.
#
#	If none of the "access" lines cause a match, the default is the
#	opposite of the last line in the list.  If the last line was
#	deny, the default is allow.  Conversely, if the last line
#	is allow, the default will be deny.  For these reasons, it is a
#	good idea to have an "deny all" entry at the end of your access
#	lists to avoid potential confusion.
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
#Default:
# http_access deny all
#

#
# Recommended minimum Access Permission configuration:
#
# Only allow cachemgr access from localhost
http_access allow manager localhost
http_access deny manager

# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#

# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
http_access allow localnet
http_access allow localhost

# And finally deny all other access to this proxy
http_access deny all

#  TAG: adapted_http_access
#	Allowing or Denying access based on defined access lists
#
#	Essentially identical to http_access, but runs after redirectors
#	and ICAP/eCAP adaptation. Allowing access control based on their
#	output.
#
#	If not set then only http_access is used.
#Default:
# none

#  TAG: http_reply_access
#	Allow replies to client requests. This is complementary to http_access.
#
#	http_reply_access allow|deny [!] aclname ...
#
#	NOTE: if there are no access lines present, the default is to allow
#	all replies
#
#	If none of the access lines cause a match the opposite of the
#	last line will apply. Thus it is good practice to end the rules
#	with an "allow all" or "deny all" entry.
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# none

#  TAG: icp_access
#	Allowing or Denying access to the ICP port based on defined
#	access lists
#
#	icp_access  allow|deny [!]aclname ...
#
#	See http_access for details
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
## Allow ICP queries from local networks only
##icp_access allow localnet
##icp_access deny all
#Default:
# icp_access deny all

#  TAG: htcp_access
#	Allowing or Denying access to the HTCP port based on defined
#	access lists
#
#	htcp_access  allow|deny [!]aclname ...
#
#	See http_access for details
#
#	NOTE: The default if no htcp_access lines are present is to
#	deny all traffic. This default may cause problems with peers
#	using the htcp or htcp-oldsquid options.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
## Allow HTCP queries from local networks only
##htcp_access allow localnet
##htcp_access deny all
#Default:
# htcp_access deny all

#  TAG: htcp_clr_access
#	Allowing or Denying access to purge content using HTCP based
#	on defined access lists
#
#	htcp_clr_access  allow|deny [!]aclname ...
#
#	See http_access for details
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
## Allow HTCP CLR requests from trusted peers
#acl htcp_clr_peer src 172.16.1.2
#htcp_clr_access allow htcp_clr_peer
#Default:
# htcp_clr_access deny all

#  TAG: miss_access
#	Determins whether network access is permitted when satisfying a request.
#
#	For example;
#	    to force your neighbors to use you as a sibling instead of
#	    a parent.
#
#		acl localclients src 172.16.0.0/16
#		miss_access allow localclients
#		miss_access deny  !localclients
#
#	This means only your local clients are allowed to fetch relayed/MISS
#	replies from the network and all other clients can only fetch cached
#	objects (HITs).
#
#
#	The default for this setting allows all clients who passed the
#	http_access rules to relay via this proxy.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# miss_access allow all

#  TAG: ident_lookup_access
#	A list of ACL elements which, if matched, cause an ident
#	(RFC 931) lookup to be performed for this request.  For
#	example, you might choose to always perform ident lookups
#	for your main multi-user Unix boxes, but not for your Macs
#	and PCs.  By default, ident lookups are not performed for
#	any requests.
#
#	To enable ident lookups for specific client addresses, you
#	can follow this example:
#
#	acl ident_aware_hosts src 198.168.1.0/24
#	ident_lookup_access allow ident_aware_hosts
#	ident_lookup_access deny all
#
#	Only src type ACL checks are fully supported.  A srcdomain
#	ACL might work at times, but it will not always provide
#	the correct result.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# ident_lookup_access deny all

#  TAG: reply_body_max_size	size [acl acl...]
#	This option specifies the maximum size of a reply body. It can be
#	used to prevent users from downloading very large files, such as
#	MP3's and movies. When the reply headers are received, the
#	reply_body_max_size lines are processed, and the first line where
#	all (if any) listed ACLs are true is used as the maximum body size
#	for this reply.
#
#	This size is checked twice. First when we get the reply headers,
#	we check the content-length value.  If the content length value exists
#	and is larger than the allowed size, the request is denied and the
#	user receives an error message that says "the request or reply
#	is too large." If there is no content-length, and the reply
#	size exceeds this limit, the client's connection is just closed
#	and they will receive a partial reply.
#
#	WARNING: downstream caches probably can not detect a partial reply
#	if there is no content-length header, so they will cache
#	partial responses and give them out as hits.  You should NOT
#	use this option if you have downstream caches.
#
#	WARNING: A maximum size smaller than the size of squid's error messages
#	will cause an infinite loop and crash squid. Ensure that the smallest
#	non-zero value you use is greater that the maximum header size plus
#	the size of your largest error page.
#
#	If you set this parameter none (the default), there will be
#	no limit imposed.
#
#	Configuration Format is:
#		reply_body_max_size SIZE UNITS [acl ...]
#	ie.
#		reply_body_max_size 10 MB
#
#Default:
# none

# NETWORK OPTIONS
# -----------------------------------------------------------------------------

#  TAG: http_port
#	Usage:	port [options]
#		hostname:port [options]
#		1.2.3.4:port [options]
#
#	The socket addresses where Squid will listen for HTTP client
#	requests.  You may specify multiple socket addresses.
#	There are three forms: port alone, hostname with port, and
#	IP address with port.  If you specify a hostname or IP
#	address, Squid binds the socket to that specific
#	address.  This replaces the old 'tcp_incoming_address'
#	option.  Most likely, you do not need to bind to a specific
#	address, so you can use the port number alone.
#
#	If you are running Squid in accelerator mode, you
#	probably want to listen on port 80 also, or instead.
#
#	The -a command line option may be used to specify additional
#	port(s) where Squid listens for proxy request. Such ports will
#	be plain proxy ports with no options.
#
#	You may specify multiple socket addresses on multiple lines.
#
#	Options:
#
#	   intercept	Support for IP-Layer interception of
#			outgoing requests without browser settings.
#			NP: disables authentication and IPv6 on the port.
#
#	   tproxy	Support Linux TPROXY for spoofing outgoing
#			connections using the client IP address.
#			NP: disables authentication and maybe IPv6 on the port.
#
#	   accel	Accelerator mode. Also needs at least one of
#			vhost / vport / defaultsite.
#
#	   allow-direct	Allow direct forwarding in accelerator mode. Normally
#			accelerated requests are denied direct forwarding as if
#			never_direct was used.
#
#	   defaultsite=domainname
#			What to use for the Host: header if it is not present
#			in a request. Determines what site (not origin server)
#			accelerators should consider the default.
#			Implies accel.
#
#	   vhost	Accelerator mode using Host header for virtual domain support.
#			Also uses the port as specified in Host: header unless
#			overridden by the vport option. Implies accel.
#
#	   vport	Virtual host port support. Using the http_port number
#			instead of the port passed on Host: headers. Implies accel.
#
#	   vport=NN	Virtual host port support. Using the specified port
#			number instead of the port passed on Host: headers.
#			Implies accel.
#
#	   protocol=	Protocol to reconstruct accelerated requests with.
#			Defaults to http.
#
#	   ignore-cc	Ignore request Cache-Control headers.
#
#	   		Warning: This option violates HTTP specifications if
#			used in non-accelerator setups.
#
#	   connection-auth[=on|off]
#	                use connection-auth=off to tell Squid to prevent 
#	                forwarding Microsoft connection oriented authentication
#			(NTLM, Negotiate and Kerberos)
#
#	   disable-pmtu-discovery=
#			Control Path-MTU discovery usage:
#			    off		lets OS decide on what to do (default).
#			    transparent	disable PMTU discovery when transparent
#					support is enabled.
#			    always	disable always PMTU discovery.
#
#			In many setups of transparently intercepting proxies
#			Path-MTU discovery can not work on traffic towards the
#			clients. This is the case when the intercepting device
#			does not fully track connections and fails to forward
#			ICMP must fragment messages to the cache server. If you
#			have such setup and experience that certain clients
#			sporadically hang or never complete requests set
#			disable-pmtu-discovery option to 'transparent'.
#
#	   ssl-bump 	Intercept each CONNECT request matching ssl_bump ACL,
#			establish secure connection with the client and with
#			the server, decrypt HTTP messages as they pass through
#			Squid, and treat them as unencrypted HTTP messages,
#			becoming the man-in-the-middle.
#
#			When this option is enabled, additional options become
#			available to specify SSL-related properties of the
#			client-side connection: cert, key, version, cipher,
#			options, clientca, cafile, capath, crlfile, dhparams,
#			sslflags, and sslcontext. See the https_port directive
#			for more information on these options.
#
#			The ssl_bump option is required to fully enable
#			the SslBump feature.
#
#	   name=	Specifies a internal name for the port. Defaults to
#			the port specification (port or addr:port)
#
#	   tcpkeepalive[=idle,interval,timeout]
#			Enable TCP keepalive probes of idle connections.
#			In seconds; idle is the initial time before TCP starts
#			probing the connection, interval how often to probe, and
#			timeout the time before giving up.
#
#	If you run Squid on a dual-homed machine with an internal
#	and an external interface we recommend you to specify the
#	internal address:port in http_port. This way Squid will only be
#	visible on the internal address.
#
#

# Squid normally listens to port 3128
http_port 3128

#  TAG: https_port
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	Usage:  [ip:]port cert=certificate.pem [key=key.pem] [options...]
#
#	The socket address where Squid will listen for HTTPS client
#	requests.
#
#	This is really only useful for situations where you are running
#	squid in accelerator mode and you want to do the SSL work at the
#	accelerator level.
#
#	You may specify multiple socket addresses on multiple lines,
#	each with their own SSL certificate and/or options.
#
#	Options:
#
#	   accel	Accelerator mode. Also needs at least one of
#			defaultsite or vhost.
#
#	   defaultsite=	The name of the https site presented on
#	   		this port. Implies accel.
#
#	   vhost	Accelerator mode using Host header for virtual
#			domain support. Requires a wildcard certificate
#			or other certificate valid for more than one domain.
#			Implies accel.
#
#	   protocol=	Protocol to reconstruct accelerated requests with.
#			Defaults to https.
#
#	   cert=	Path to SSL certificate (PEM format).
#
#	   key=		Path to SSL private key file (PEM format)
#			if not specified, the certificate file is
#			assumed to be a combined certificate and
#			key file.
#
#	   version=	The version of SSL/TLS supported
#			    1	automatic (default)
#			    2	SSLv2 only
#			    3	SSLv3 only
#			    4	TLSv1 only
#
#	   cipher=	Colon separated list of supported ciphers.
#			NOTE: some ciphers such as EDH ciphers depend on
#			      additional settings. If those settings are
#			      omitted the ciphers may be silently ignored
#			      by the OpenSSL library.
#
#	   options=	Various SSL engine options. The most important
#			being:
#			    NO_SSLv2  Disallow the use of SSLv2
#			    NO_SSLv3  Disallow the use of SSLv3
#			    NO_TLSv1  Disallow the use of TLSv1
#			    SINGLE_DH_USE Always create a new key when using
#				      temporary/ephemeral DH key exchanges
#			See OpenSSL SSL_CTX_set_options documentation for a
#			complete list of options.
#
#	   clientca=	File containing the list of CAs to use when
#			requesting a client certificate.
#
#	   cafile=	File containing additional CA certificates to
#			use when verifying client certificates. If unset
#			clientca will be used.
#
#	   capath=	Directory containing additional CA certificates
#			and CRL lists to use when verifying client certificates.
#
#	   crlfile=	File of additional CRL lists to use when verifying
#			the client certificate, in addition to CRLs stored in
#			the capath. Implies VERIFY_CRL flag below.
#
#	   dhparams=	File containing DH parameters for temporary/ephemeral
#			DH key exchanges. See OpenSSL documentation for details
#			on how to create this file.
#			WARNING: EDH ciphers will be silently disabled if this
#				 option is not set.
#
#	   sslflags=	Various flags modifying the use of SSL:
#			    DELAYED_AUTH
#				Don't request client certificates
#				immediately, but wait until acl processing
#				requires a certificate (not yet implemented).
#			    NO_DEFAULT_CA
#				Don't use the default CA lists built in
#				to OpenSSL.
#			    NO_SESSION_REUSE
#				Don't allow for session reuse. Each connection
#				will result in a new SSL session.
#			    VERIFY_CRL
#				Verify CRL lists when accepting client
#				certificates.
#			    VERIFY_CRL_ALL
#				Verify CRL lists for all certificates in the
#				client certificate chain.
#
#	   sslcontext=	SSL session ID context identifier.
#
#	   generate-host-certificates[=<on|off>]
#			Dynamically create SSL server certificates for the
#			destination hosts of bumped CONNECT requests.When 
#			enabled, the cert and key options are used to sign
#			generated certificates. Otherwise generated
#			certificate will be selfsigned.
#			If there is CA certificate life time of generated 
#			certificate equals lifetime of CA certificate. If
#			generated certificate is selfsigned lifetime is three 
#			years.
#			This option is enabled by default when SslBump is used.
#			See the sslBump option above for more information.
#			
#	   dynamic_cert_mem_cache_size=SIZE
#			Approximate total RAM size spent on cached generated
#			certificates. If set to zero, caching is disabled. The
#			default value is 4MB. An average XXX-bit certificate
#			consumes about XXX bytes of RAM.
#
#	   vport	Accelerator with IP based virtual host support.
#
#	   vport=NN	As above, but uses specified port number rather
#			than the https_port number. Implies accel.
#
#	   name=	Specifies a internal name for the port. Defaults to
#			the port specification (port or addr:port)
#
#Default:
# none

#  TAG: tcp_outgoing_tos
#	Allows you to select a TOS/Diffserv value to mark outgoing
#	connections with, based on the username or source address
#	making the request.
#
#	tcp_outgoing_tos ds-field [!]aclname ...
#
#	Example where normal_service_net uses the TOS value 0x00
#	and good_service_net uses 0x20
#
#	acl normal_service_net src 10.0.0.0/24
#	acl good_service_net src 10.0.1.0/24
#	tcp_outgoing_tos 0x00 normal_service_net
#	tcp_outgoing_tos 0x20 good_service_net
#
#	TOS/DSCP values really only have local significance - so you should
#	know what you're specifying. For more information, see RFC2474,
#	RFC2475, and RFC3260.
#
#	The TOS/DSCP byte must be exactly that - a octet value  0 - 255, or
#	"default" to use whatever default your host has. Note that in
#	practice often only multiples of 4 is usable as the two rightmost bits
#	have been redefined for use by ECN (RFC 3168 section 23.1).
#
#	Processing proceeds in the order specified, and stops at first fully
#	matching line.
#
#	Note: The use of this directive using client dependent ACLs is
#	incompatible with the use of server side persistent connections. To
#	ensure correct results it is best to set server_persisten_connections
#	to off when using this directive in such configurations.
#Default:
# none

#  TAG: clientside_tos
#	Allows you to select a TOS/Diffserv value to mark client-side
#	connections with, based on the username or source address
#	making the request.
#Default:
# none

#  TAG: qos_flows
# Note: This option is only available if Squid is rebuilt with the
#       --enable-zph-qos option
#
#	Allows you to select a TOS/DSCP value to mark outgoing
#	connections with, based on where the reply was sourced.
#
#	TOS values really only have local significance - so you should
#	know what you're specifying. For more information, see RFC2474,
#	RFC2475, and RFC3260.
#
#	The TOS/DSCP byte must be exactly that - octet value 0x00-0xFF.
#	Note that in practice often only values up to 0x3F are usable
#	as the two highest bits have been redefined for use by ECN
#	(RFC3168).
#
#	This setting is configured by setting the source TOS values:
#
#	local-hit=0xFF		Value to mark local cache hits.
#
#	sibling-hit=0xFF	Value to mark hits from sibling peers.
#
#	parent-hit=0xFF		Value to mark hits from parent peers.
#
#
#	NOTE: 'miss' preserve feature is only possible on Linux at this time.
#
#	For the following to work correctly, you will need to patch your
#	linux kernel with the TOS preserving ZPH patch.
#	The kernel patch can be downloaded from http://zph.bratcheda.org
#
#	disable-preserve-miss
#		By default, the existing TOS value of the response coming
#		from the remote server will be retained and masked with
#		miss-mark. This option disables that feature.
#
#	miss-mask=0xFF
#		Allows you to mask certain bits in the TOS received from the
#		remote server, before copying the value to the TOS sent
#		towards clients.
#		Default: 0xFF (TOS from server is not changed).
#
#Default:
# none

#  TAG: tcp_outgoing_address
#	Allows you to map requests to different outgoing IP addresses
#	based on the username or source address of the user making
#	the request.
#
#	tcp_outgoing_address ipaddr [[!]aclname] ...
#
#	Example where requests from 10.0.0.0/24 will be forwarded
#	with source address 10.1.0.1, 10.0.2.0/24 forwarded with
#	source address 10.1.0.2 and the rest will be forwarded with
#	source address 10.1.0.3.
#
#	acl normal_service_net src 10.0.0.0/24
#	acl good_service_net src 10.0.2.0/24
#	tcp_outgoing_address 10.1.0.1 normal_service_net
#	tcp_outgoing_address 10.1.0.2 good_service_net
#	tcp_outgoing_address 10.1.0.3
#
#	Processing proceeds in the order specified, and stops at first fully
#	matching line.
#
#	Note: The use of this directive using client dependent ACLs is
#	incompatible with the use of server side persistent connections. To
#	ensure correct results it is best to set server_persistent_connections
#	to off when using this directive in such configurations.
#
#
#        IPv6 Magic:
#
#	Squid is built with a capability of bridging the IPv4 and IPv6 
#	internets.
#	tcp_outgoing_address as exampled above breaks this bridging by forcing
#	all outbound traffic through a certain IPv4 which may be on the wrong
#	side of the IPv4/IPv6 boundary.
#
#	To operate with tcp_outgoing_address and keep the bridging benefits
#	an additional ACL needs to be used which ensures the IPv6-bound traffic
#	is never forced or permitted out the IPv4 interface.
#
#	# IPv6 destination test along with a dummy access control to perofrm the required DNS
#	# This MUST be place before any ALLOW rules.
#	acl to_ipv6 dst ipv6
#	http_access deny ipv6 !all
#
#	tcp_outgoing_address 2001:db8::c001 good_service_net to_ipv6
#	tcp_outgoing_address 10.1.0.2 good_service_net !to_ipv6
#
#	tcp_outgoing_address 2001:db8::beef normal_service_net to_ipv6
#	tcp_outgoing_address 10.1.0.1 normal_service_net !to_ipv6
#
#	tcp_outgoing_address 2001:db8::1 to_ipv6
#	tcp_outgoing_address 10.1.0.3 !to_ipv6
#
#	WARNING:
#	  'dst ipv6' bases its selection assuming DIRECT access.
#	  If peers are used the peername ACL are needed to select outgoing
#	  address which can link to the peer.
#
#	  'dst ipv6' is a slow ACL. It will only work here if 'dst' is used
#	  previously in the http_access rules to locate the destination IP.
#	  Some more magic may be needed for that:
#	    http_access allow to_ipv6 !all
#	  (meaning, allow if to IPv6 but not from anywhere ;)
#
#Default:
# none

# SSL OPTIONS
# -----------------------------------------------------------------------------

#  TAG: ssl_unclean_shutdown
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	Some browsers (especially MSIE) bugs out on SSL shutdown
#	messages.
#Default:
# ssl_unclean_shutdown off

#  TAG: ssl_engine
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	The OpenSSL engine to use. You will need to set this if you
#	would like to use hardware SSL acceleration for example.
#Default:
# none

#  TAG: sslproxy_client_certificate
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	Client SSL Certificate to use when proxying https:// URLs
#Default:
# none

#  TAG: sslproxy_client_key
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	Client SSL Key to use when proxying https:// URLs
#Default:
# none

#  TAG: sslproxy_version
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	SSL version level to use when proxying https:// URLs
#Default:
# sslproxy_version 1

#  TAG: sslproxy_options
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	SSL engine options to use when proxying https:// URLs
#	
#	The most important being:
#
#		NO_SSLv2  Disallow the use of SSLv2
#		NO_SSLv3  Disallow the use of SSLv3
#		NO_TLSv1  Disallow the use of TLSv1
#		SINGLE_DH_USE
#			Always create a new key when using
#			temporary/ephemeral DH key exchanges
#	
#	These options vary depending on your SSL engine.
#	See the OpenSSL SSL_CTX_set_options documentation for a
#	complete list of possible options.
#Default:
# none

#  TAG: sslproxy_cipher
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	SSL cipher list to use when proxying https:// URLs
#
#	Colon separated list of supported ciphers.
#Default:
# none

#  TAG: sslproxy_cafile
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	file containing CA certificates to use when verifying server
#	certificates while proxying https:// URLs
#Default:
# none

#  TAG: sslproxy_capath
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	directory containing CA certificates to use when verifying
#	server certificates while proxying https:// URLs
#Default:
# none

#  TAG: ssl_bump
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	This ACL controls which CONNECT requests to an http_port
#	marked with an sslBump flag are actually "bumped". Please 
#	see the sslBump flag of an http_port option for more details
#	about decoding proxied SSL connections.
#
#	By default, no requests are bumped.
#
#	See also: http_port ssl-bump
#   
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
#
#	# Example: Bump all requests except those originating from localhost and 
#	# those going to webax.com or example.com sites.
#
#	acl localhost src 127.0.0.1/32
#	acl broken_sites dstdomain .webax.com
#	acl broken_sites dstdomain .example.com
#	ssl_bump deny localhost
#	ssl_bump deny broken_sites
#	ssl_bump allow all
#Default:
# none

#  TAG: sslproxy_flags
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	Various flags modifying the use of SSL while proxying https:// URLs:
#	    DONT_VERIFY_PEER	Accept certificates that fail verification.
#				For refined control, see sslproxy_cert_error.
#	    NO_DEFAULT_CA	Don't use the default CA list built in
#				to OpenSSL.
#Default:
# none

#  TAG: sslproxy_cert_error
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	Use this ACL to bypass server certificate validation errors.
#
#	For example, the following lines will bypass all validation errors
#	when talking to servers located at 172.16.0.0/16. All other
#	validation errors will result in ERR_SECURE_CONNECT_FAIL error.
#
#		acl BrokenServersAtTrustedIP dst 172.16.0.0/16
#		sslproxy_cert_error allow BrokenServersAtTrustedIP
#		sslproxy_cert_error deny all
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#	Using slow acl types may result in server crashes
#
#	Without this option, all server certificate validation errors
#	terminate the transaction. Bypassing validation errors is dangerous
#	because an error usually implies that the server cannot be trusted and
#	the connection may be insecure.
#
#	See also: sslproxy_flags and DONT_VERIFY_PEER.
#
#	Default setting:  sslproxy_cert_error deny all
#Default:
# none

#  TAG: sslpassword_program
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ssl option
#
#	Specify a program used for entering SSL key passphrases
#	when using encrypted SSL certificate keys. If not specified
#	keys must either be unencrypted, or Squid started with the -N
#	option to allow it to query interactively for the passphrase.
#
#	The key file name is given as argument to the program allowing
#	selection of the right password if you have multiple encrypted
#	keys.
#Default:
# none

#OPTIONS RELATING TO EXTERNAL SSL_CRTD 
#-----------------------------------------------------------------------------

#  TAG: sslcrtd_program
# Note: This option is only available if Squid is rebuilt with the
#       -DUSE_SSL_CRTD define
#
#	Specify the location and options of the executable for ssl_crtd process.
#	/usr/local/squid/libexec/ssl_crtd program requires -s and -M parameters
#	For more information use:
#		/usr/local/squid/libexec/ssl_crtd -h
#Default:
# sslcrtd_program /usr/local/squid/libexec/ssl_crtd -s /usr/local/squid/var/lib/ssl_db -M 4MB

#  TAG: sslcrtd_children
# Note: This option is only available if Squid is rebuilt with the
#       -DUSE_SSL_CRTD define
#
#	The maximum number of processes spawn to service ssl server.
#	The maximum this may be safely set to is 32.
#	
#	You must have at least one ssl_crtd process.
#Default:
# sslcrtd_children 5

# OPTIONS WHICH AFFECT THE NEIGHBOR SELECTION ALGORITHM
# -----------------------------------------------------------------------------

#  TAG: cache_peer
#	To specify other caches in a hierarchy, use the format:
#	
#		cache_peer hostname type http-port icp-port [options]
#	
#	For example,
#	
#	#                                        proxy  icp
#	#          hostname             type     port   port  options
#	#          -------------------- -------- ----- -----  -----------
#	cache_peer parent.foo.net       parent    3128  3130  default
#	cache_peer sib1.foo.net         sibling   3128  3130  proxy-only
#	cache_peer sib2.foo.net         sibling   3128  3130  proxy-only
#	cache_peer example.com          parent    80       0  default
#	cache_peer cdn.example.com      sibling   3128     0  
#	
#	      type:	either 'parent', 'sibling', or 'multicast'.
#	
#	proxy-port:	The port number where the peer accept HTTP requests.
#			For other Squid proxies this is usually 3128
#			For web servers this is usually 80
#	
#	  icp-port:	Used for querying neighbor caches about objects.
#			Set to 0 if the peer does not support ICP or HTCP.
#			See ICP and HTCP options below for additional details.
#	
#	
#	==== ICP OPTIONS ====
#	
#	You MUST also set icp_port and icp_access explicitly when using these options.
#	The defaults will prevent peer traffic using ICP.
#	
#	
#	no-query	Disable ICP queries to this neighbor.
#	
#	multicast-responder
#			Indicates the named peer is a member of a multicast group.
#			ICP queries will not be sent directly to the peer, but ICP
#			replies will be accepted from it.
#	
#	closest-only	Indicates that, for ICP_OP_MISS replies, we'll only forward
#			CLOSEST_PARENT_MISSes and never FIRST_PARENT_MISSes.
#	
#	background-ping
#			To only send ICP queries to this neighbor infrequently.
#			This is used to keep the neighbor round trip time updated
#			and is usually used in conjunction with weighted-round-robin.
#	
#	
#	==== HTCP OPTIONS ====
#	
#	You MUST also set htcp_port and htcp_access explicitly when using these options.
#	The defaults will prevent peer traffic using HTCP.
#	
#	
#	htcp		Send HTCP, instead of ICP, queries to the neighbor.
#			You probably also want to set the "icp-port" to 4827
#			instead of 3130.
#	
#	htcp-oldsquid	Send HTCP to old Squid versions.
#	
#	htcp-no-clr	Send HTCP to the neighbor but without
#			sending any CLR requests.  This cannot be used with
#			htcp-only-clr.
#	
#	htcp-only-clr	Send HTCP to the neighbor but ONLY CLR requests.
#			This cannot be used with htcp-no-clr.
#	
#	htcp-no-purge-clr
#			Send HTCP to the neighbor including CLRs but only when
#			they do not result from PURGE requests.
#	
#	htcp-forward-clr
#			Forward any HTCP CLR requests this proxy receives to the peer.
#	
#	
#	==== PEER SELECTION METHODS ====
#	
#	The default peer selection method is ICP, with the first responding peer
#	being used as source. These options can be used for better load balancing.
#	
#	
#	default		This is a parent cache which can be used as a "last-resort"
#			if a peer cannot be located by any of the peer-selection methods.
#			If specified more than once, only the first is used.
#	
#	round-robin	Load-Balance parents which should be used in a round-robin
#			fashion in the absence of any ICP queries.
#			weight=N can be used to add bias.
#	
#	weighted-round-robin
#			Load-Balance parents which should be used in a round-robin
#			fashion with the frequency of each parent being based on the
#			round trip time. Closer parents are used more often.
#			Usually used for background-ping parents.
#			weight=N can be used to add bias.
#	
#	carp		Load-Balance parents which should be used as a CARP array.
#			The requests will be distributed among the parents based on the
#			CARP load balancing hash function based on their weight.
#	
#	userhash	Load-balance parents based on the client proxy_auth or ident username.
#	
#	sourcehash	Load-balance parents based on the client source IP.
#
#	multicast-siblings
#			To be used only for cache peers of type "multicast".
#			ALL members of this multicast group have "sibling"
#			relationship with it, not "parent".  This is to a multicast
#			group when the requested object would be fetched only from
#			a "parent" cache, anyway.  It's useful, e.g., when
#			configuring a pool of redundant Squid proxies, being
#			members of the same multicast group.
#	
#	
#	==== PEER SELECTION OPTIONS ====
#	
#	weight=N	use to affect the selection of a peer during any weighted
#			peer-selection mechanisms.
#			The weight must be an integer; default is 1,
#			larger weights are favored more.
#			This option does not affect parent selection if a peering
#			protocol is not in use.
#	
#	basetime=N	Specify a base amount to be subtracted from round trip
#			times of parents.
#			It is subtracted before division by weight in calculating
#			which parent to fectch from. If the rtt is less than the
#			base time the rtt is set to a minimal value.
#	
#	ttl=N		Specify a TTL to use when sending multicast ICP queries
#			to this address.
#			Only useful when sending to a multicast group.
#			Because we don't accept ICP replies from random
#			hosts, you must configure other group members as
#			peers with the 'multicast-responder' option.
#	
#	no-delay	To prevent access to this neighbor from influencing the
#			delay pools.
#	
#	digest-url=URL	Tell Squid to fetch the cache digest (if digests are
#			enabled) for this host from the specified URL rather
#			than the Squid default location.
#	
#	
#	==== ACCELERATOR / REVERSE-PROXY OPTIONS ====
#	
#	originserver	Causes this parent to be contacted as an origin server.
#			Meant to be used in accelerator setups when the peer
#			is a web server.
#	
#	forceddomain=name
#			Set the Host header of requests forwarded to this peer.
#			Useful in accelerator setups where the server (peer)
#			expects a certain domain name but clients may request
#			others. ie example.com or www.example.com
#	
#	no-digest	Disable request of cache digests.
#	
#	no-netdb-exchange
#			Disables requesting ICMP RTT database (NetDB).
#	
#	
#	==== AUTHENTICATION OPTIONS ====
#	
#	login=user:password
#			If this is a personal/workgroup proxy and your parent
#			requires proxy authentication.
#			
#			Note: The string can include URL escapes (i.e. %20 for
#			spaces). This also means % must be written as %%.
#	
#	login=PROXYPASS
#			Send login details received from client to this peer.
#			Authentication is not required, nor changed.
#			
#			Note: This will pass any form of authentication but
#			only Basic auth will work through a proxy unless the
#			connection-auth options are also used.
#	
#	login=PASS	Send login details received from client to this peer.
#			Authentication is not required by this option.
#			If there are no client-provided authentication headers
#			to pass on, but username and password are available
#			from either proxy login or an external ACL user= and
#			password= result tags they may be sent instead.
#			
#			Note: To combine this with proxy_auth both proxies must
#			share the same user database as HTTP only allows for
#			a single login (one for proxy, one for origin server).
#			Also be warned this will expose your users proxy
#			password to the peer. USE WITH CAUTION
#	
#	login=*:password
#			Send the username to the upstream cache, but with a
#			fixed password. This is meant to be used when the peer
#			is in another administrative domain, but it is still
#			needed to identify each user.
#			The star can optionally be followed by some extra
#			information which is added to the username. This can
#			be used to identify this proxy to the peer, similar to
#			the login=username:password option above.
#	
#	connection-auth=on|off
#			Tell Squid that this peer does or not support Microsoft
#			connection oriented authentication, and any such
#			challenges received from there should be ignored.
#			Default is auto to automatically determine the status
#			of the peer.
#	
#	
#	==== SSL / HTTPS / TLS OPTIONS ====
#	
#	ssl		Encrypt connections to this peer with SSL/TLS.
#	
#	sslcert=/path/to/ssl/certificate
#			A client SSL certificate to use when connecting to
#			this peer.
#	
#	sslkey=/path/to/ssl/key
#			The private SSL key corresponding to sslcert above.
#			If 'sslkey' is not specified 'sslcert' is assumed to
#			reference a combined file containing both the
#			certificate and the key.
#	
#	sslversion=1|2|3|4
#			The SSL version to use when connecting to this peer
#				1 = automatic (default)
#				2 = SSL v2 only
#				3 = SSL v3 only
#				4 = TLS v1 only
#	
#	sslcipher=...	The list of valid SSL ciphers to use when connecting
#			to this peer.
#	
#	ssloptions=... 	Specify various SSL engine options:
#				NO_SSLv2  Disallow the use of SSLv2
#				NO_SSLv3  Disallow the use of SSLv3
#				NO_TLSv1  Disallow the use of TLSv1
#			See src/ssl_support.c or the OpenSSL documentation for
#			a more complete list.
#	
#	sslcafile=... 	A file containing additional CA certificates to use
#			when verifying the peer certificate.
#	
#	sslcapath=...	A directory containing additional CA certificates to
#			use when verifying the peer certificate.
#	
#	sslcrlfile=... 	A certificate revocation list file to use when
#			verifying the peer certificate.
#	
#	sslflags=...	Specify various flags modifying the SSL implementation:
#	
#			DONT_VERIFY_PEER
#				Accept certificates even if they fail to
#				verify.
#			NO_DEFAULT_CA
#				Don't use the default CA list built in
#				to OpenSSL.
#			DONT_VERIFY_DOMAIN
#				Don't verify the peer certificate
#				matches the server name
#	
#	ssldomain= 	The peer name as advertised in it's certificate.
#			Used for verifying the correctness of the received peer
#			certificate. If not specified the peer hostname will be
#			used.
#	
#	front-end-https
#			Enable the "Front-End-Https: On" header needed when
#			using Squid as a SSL frontend in front of Microsoft OWA.
#			See MS KB document Q307347 for details on this header.
#			If set to auto the header will only be added if the
#			request is forwarded as a https:// URL.
#	
#	
#	==== GENERAL OPTIONS ====
#	
#	connect-timeout=N
#			A peer-specific connect timeout.
#			Also see the peer_connect_timeout directive.
#	
#	connect-fail-limit=N
#			How many times connecting to a peer must fail before
#			it is marked as down. Default is 10.
#	
#	allow-miss	Disable Squid's use of only-if-cached when forwarding
#			requests to siblings. This is primarily useful when
#			icp_hit_stale is used by the sibling. To extensive use
#			of this option may result in forwarding loops, and you
#			should avoid having two-way peerings with this option.
#			For example to deny peer usage on requests from peer
#			by denying cache_peer_access if the source is a peer.
#	
#	max-conn=N	Limit the amount of connections Squid may open to this
#			peer. see also 
#	
#	name=xxx	Unique name for the peer.
#			Required if you have multiple peers on the same host
#			but different ports.
#			This name can be used in cache_peer_access and similar
#			directives to dentify the peer.
#			Can be used by outgoing access controls through the
#			peername ACL type.
#	
#	no-tproxy	Do not use the client-spoof TPROXY support when forwarding
#			requests to this peer. Use normal address selection instead.
#	
#	proxy-only	objects fetched from the peer will not be stored locally.
#	
#Default:
# none

#  TAG: cache_peer_domain
#	Use to limit the domains for which a neighbor cache will be
#	queried.  Usage:
#
#	cache_peer_domain cache-host domain [domain ...]
#	cache_peer_domain cache-host !domain
#
#	For example, specifying
#
#		cache_peer_domain parent.foo.net	.edu
#
#	has the effect such that UDP query packets are sent to
#	'bigserver' only when the requested object exists on a
#	server in the .edu domain.  Prefixing the domainname
#	with '!' means the cache will be queried for objects
#	NOT in that domain.
#
#	NOTE:	* Any number of domains may be given for a cache-host,
#		  either on the same or separate lines.
#		* When multiple domains are given for a particular
#		  cache-host, the first matched domain is applied.
#		* Cache hosts with no domain restrictions are queried
#		  for all requests.
#		* There are no defaults.
#		* There is also a 'cache_peer_access' tag in the ACL
#		  section.
#Default:
# none

#  TAG: cache_peer_access
#	Similar to 'cache_peer_domain' but provides more flexibility by
#	using ACL elements.
#
#	cache_peer_access cache-host allow|deny [!]aclname ...
#
#	The syntax is identical to 'http_access' and the other lists of
#	ACL elements.  See the comments for 'http_access' below, or
#	the Squid FAQ (http://wiki.squid-cache.org/SquidFaq/SquidAcl).
#Default:
# none

#  TAG: neighbor_type_domain
#	usage: neighbor_type_domain neighbor parent|sibling domain domain ...
#
#	Modifying the neighbor type for specific domains is now
#	possible.  You can treat some domains differently than the the
#	default neighbor type specified on the 'cache_peer' line.
#	Normally it should only be necessary to list domains which
#	should be treated differently because the default neighbor type
#	applies for hostnames which do not match domains listed here.
#
#EXAMPLE:
#	cache_peer cache.foo.org parent 3128 3130
#	neighbor_type_domain cache.foo.org sibling .com .net
#	neighbor_type_domain cache.foo.org sibling .au .de
#Default:
# none

#  TAG: dead_peer_timeout	(seconds)
#	This controls how long Squid waits to declare a peer cache
#	as "dead."  If there are no ICP replies received in this
#	amount of time, Squid will declare the peer dead and not
#	expect to receive any further ICP replies.  However, it
#	continues to send ICP queries, and will mark the peer as
#	alive upon receipt of the first subsequent ICP reply.
#
#	This timeout also affects when Squid expects to receive ICP
#	replies from peers.  If more than 'dead_peer' seconds have
#	passed since the last ICP reply was received, Squid will not
#	expect to receive an ICP reply on the next query.  Thus, if
#	your time between requests is greater than this timeout, you
#	will see a lot of requests sent DIRECT to origin servers
#	instead of to your parents.
#Default:
# dead_peer_timeout 10 seconds

#  TAG: forward_max_tries
#	Controls how many different forward paths Squid will try
#	before giving up. See also forward_timeout.
#Default:
# forward_max_tries 10

#  TAG: hierarchy_stoplist
#	A list of words which, if found in a URL, cause the object to
#	be handled directly by this cache.  In other words, use this
#	to not query neighbor caches for certain objects.  You may
#	list this option multiple times.
#
#	Example:
#		hierarchy_stoplist cgi-bin ?
#
#	Note: never_direct overrides this option.
#Default:
# none

# MEMORY CACHE OPTIONS
# -----------------------------------------------------------------------------

#  TAG: cache_mem	(bytes)
#	NOTE: THIS PARAMETER DOES NOT SPECIFY THE MAXIMUM PROCESS SIZE.
#	IT ONLY PLACES A LIMIT ON HOW MUCH ADDITIONAL MEMORY SQUID WILL
#	USE AS A MEMORY CACHE OF OBJECTS. SQUID USES MEMORY FOR OTHER
#	THINGS AS WELL. SEE THE SQUID FAQ SECTION 8 FOR DETAILS.
#
#	'cache_mem' specifies the ideal amount of memory to be used
#	for:
#		* In-Transit objects
#		* Hot Objects
#		* Negative-Cached objects
#
#	Data for these objects are stored in 4 KB blocks.  This
#	parameter specifies the ideal upper limit on the total size of
#	4 KB blocks allocated.  In-Transit objects take the highest
#	priority.
#
#	In-transit objects have priority over the others.  When
#	additional space is needed for incoming data, negative-cached
#	and hot objects will be released.  In other words, the
#	negative-cached and hot objects will fill up any unused space
#	not needed for in-transit objects.
#
#	If circumstances require, this limit will be exceeded.
#	Specifically, if your incoming request rate requires more than
#	'cache_mem' of memory to hold in-transit objects, Squid will
#	exceed this limit to satisfy the new requests.  When the load
#	decreases, blocks will be freed until the high-water mark is
#	reached.  Thereafter, blocks will be used to store hot
#	objects.
#Default:
# cache_mem 256 MB

#  TAG: maximum_object_size_in_memory	(bytes)
#	Objects greater than this size will not be attempted to kept in
#	the memory cache. This should be set high enough to keep objects
#	accessed frequently in memory to improve performance whilst low
#	enough to keep larger objects from hoarding cache_mem.
#Default:
# maximum_object_size_in_memory 512 KB

#  TAG: memory_replacement_policy
#	The memory replacement policy parameter determines which
#	objects are purged from memory when memory space is needed.
#
#	See cache_replacement_policy for details.
#Default:
# memory_replacement_policy lru

# DISK CACHE OPTIONS
# -----------------------------------------------------------------------------

#  TAG: cache_replacement_policy
#	The cache replacement policy parameter determines which
#	objects are evicted (replaced) when disk space is needed.
#
#	    lru       : Squid's original list based LRU policy
#	    heap GDSF : Greedy-Dual Size Frequency
#	    heap LFUDA: Least Frequently Used with Dynamic Aging
#	    heap LRU  : LRU policy implemented using a heap
#
#	Applies to any cache_dir lines listed below this.
#
#	The LRU policies keeps recently referenced objects.
#
#	The heap GDSF policy optimizes object hit rate by keeping smaller
#	popular objects in cache so it has a better chance of getting a
#	hit.  It achieves a lower byte hit rate than LFUDA though since
#	it evicts larger (possibly popular) objects.
#
#	The heap LFUDA policy keeps popular objects in cache regardless of
#	their size and thus optimizes byte hit rate at the expense of
#	hit rate since one large, popular object will prevent many
#	smaller, slightly less popular objects from being cached.
#
#	Both policies utilize a dynamic aging mechanism that prevents
#	cache pollution that can otherwise occur with frequency-based
#	replacement policies.
#
#	NOTE: if using the LFUDA replacement policy you should increase
#	the value of maximum_object_size above its default of 4096 KB to
#	to maximize the potential byte hit rate improvement of LFUDA.
#
#	For more information about the GDSF and LFUDA cache replacement
#	policies see http://www.hpl.hp.com/techreports/1999/HPL-1999-69.html
#	and http://fog.hpl.external.hp.com/techreports/98/HPL-98-173.html.
#Default:
# cache_replacement_policy lru

#  TAG: cache_dir
#	Usage:
#
#	cache_dir Type Directory-Name Fs-specific-data [options]
#
#	You can specify multiple cache_dir lines to spread the
#	cache among different disk partitions.
#
#	Type specifies the kind of storage system to use. Only "ufs"
#	is built by default. To enable any of the other storage systems
#	see the --enable-storeio configure option.
#
#	'Directory' is a top-level directory where cache swap
#	files will be stored.  If you want to use an entire disk
#	for caching, this can be the mount-point directory.
#	The directory must exist and be writable by the Squid
#	process.  Squid will NOT create this directory for you.
#
#	The ufs store type:
#
#	"ufs" is the old well-known Squid storage format that has always
#	been there.
#
#	cache_dir ufs Directory-Name Mbytes L1 L2 [options]
#
#	'Mbytes' is the amount of disk space (MB) to use under this
#	directory.  The default is 100 MB.  Change this to suit your
#	configuration.  Do NOT put the size of your disk drive here.
#	Instead, if you want Squid to use the entire disk drive,
#	subtract 20% and use that value.
#
#	'L1' is the number of first-level subdirectories which
#	will be created under the 'Directory'.  The default is 16.
#
#	'L2' is the number of second-level subdirectories which
#	will be created under each first-level directory.  The default
#	is 256.
#
#	The aufs store type:
#
#	"aufs" uses the same storage format as "ufs", utilizing
#	POSIX-threads to avoid blocking the main Squid process on
#	disk-I/O. This was formerly known in Squid as async-io.
#
#	cache_dir aufs Directory-Name Mbytes L1 L2 [options]
#
#	see argument descriptions under ufs above
#
#	The diskd store type:
#
#	"diskd" uses the same storage format as "ufs", utilizing a
#	separate process to avoid blocking the main Squid process on
#	disk-I/O.
#
#	cache_dir diskd Directory-Name Mbytes L1 L2 [options] [Q1=n] [Q2=n]
#
#	see argument descriptions under ufs above
#
#	Q1 specifies the number of unacknowledged I/O requests when Squid
#	stops opening new files. If this many messages are in the queues,
#	Squid won't open new files. Default is 64
#
#	Q2 specifies the number of unacknowledged messages when Squid
#	starts blocking.  If this many messages are in the queues,
#	Squid blocks until it receives some replies. Default is 72
#
#	When Q1 < Q2 (the default), the cache directory is optimized
#	for lower response time at the expense of a decrease in hit
#	ratio.  If Q1 > Q2, the cache directory is optimized for
#	higher hit ratio at the expense of an increase in response
#	time.
#
#	The coss store type:
#
#	NP: COSS filesystem in Squid-3 has been deemed too unstable for
#	    production use and has thus been removed from this release.
#	    We hope that it can be made usable again soon.
#
#	block-size=n defines the "block size" for COSS cache_dir's.
#	Squid uses file numbers as block numbers.  Since file numbers
#	are limited to 24 bits, the block size determines the maximum
#	size of the COSS partition.  The default is 512 bytes, which
#	leads to a maximum cache_dir size of 512<<24, or 8 GB.  Note
#	you should not change the coss block size after Squid
#	has written some objects to the cache_dir.
#
#	The coss file store has changed from 2.5. Now it uses a file
#	called 'stripe' in the directory names in the config - and
#	this will be created by squid -z.
#
#	Common options:
#
#	no-store, no new objects should be stored to this cache_dir
#
#	max-size=n, refers to the max object size in bytes this cache_dir
#	supports.  It is used to select the cache_dir to store the object.
#	Note: To make optimal use of the max-size limits you should order
#	the cache_dir lines with the smallest max-size value first and the
#	ones with no max-size specification last.
#
#	Note for coss, max-size must be less than COSS_MEMBUF_SZ,
#	which can be changed with the --with-coss-membuf-size=N configure
#	option.
#

# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /usr/local/squid/var/cache 100 16 256

#  TAG: store_dir_select_algorithm
#	Set this to 'round-robin' as an alternative.
#Default:
# store_dir_select_algorithm least-load

#  TAG: max_open_disk_fds
#	To avoid having disk as the I/O bottleneck Squid can optionally
#	bypass the on-disk cache if more than this amount of disk file
#	descriptors are open.
#
#	A value of 0 indicates no limit.
#Default:
# max_open_disk_fds 0

#  TAG: minimum_object_size	(bytes)
#	Objects smaller than this size will NOT be saved on disk.  The
#	value is specified in kilobytes, and the default is 0 KB, which
#	means there is no minimum.
#Default:
# minimum_object_size 0 KB

#  TAG: maximum_object_size	(bytes)
#	Objects larger than this size will NOT be saved on disk.  The
#	value is specified in kilobytes, and the default is 4MB.  If
#	you wish to get a high BYTES hit ratio, you should probably
#	increase this (one 32 MB object hit counts for 3200 10KB
#	hits).  If you wish to increase speed more than your want to
#	save bandwidth you should leave this low.
#
#	NOTE: if using the LFUDA replacement policy you should increase
#	this value to maximize the byte hit rate improvement of LFUDA!
#	See replacement_policy below for a discussion of this policy.
#Default:
# maximum_object_size 4096 KB

#  TAG: cache_swap_low	(percent, 0-100)
#Default:
# cache_swap_low 90

#  TAG: cache_swap_high	(percent, 0-100)
#
#	The low- and high-water marks for cache object replacement.
#	Replacement begins when the swap (disk) usage is above the
#	low-water mark and attempts to maintain utilization near the
#	low-water mark.  As swap utilization gets close to high-water
#	mark object eviction becomes more aggressive.  If utilization is
#	close to the low-water mark less replacement is done each time.
#
#	Defaults are 90% and 95%. If you have a large cache, 5% could be
#	hundreds of MB. If this is the case you may wish to set these
#	numbers closer together.
#Default:
# cache_swap_high 95

# LOGFILE OPTIONS
# -----------------------------------------------------------------------------

#  TAG: logformat
#	Usage:
#
#	logformat <name> <format specification>
#
#	Defines an access log format.
#
#	The <format specification> is a string with embedded % format codes
#
#	% format codes all follow the same basic structure where all but
#	the formatcode is optional. Output strings are automatically escaped
#	as required according to their context and the output format
#	modifiers are usually not needed, but can be specified if an explicit
#	output format is desired.
#
#		% ["|[|'|#] [-] [[0]width] [{argument}] formatcode
#
#		"	output in quoted string format
#		[	output in squid text log format as used by log_mime_hdrs
#		#	output in URL quoted format
#		'	output as-is
#
#		-	left aligned
#		width	field width. If starting with 0 the
#			output is zero padded
#		{arg}	argument such as header name etc
#
#	Format codes:
#
#		%	a literal % character
#		>a	Client source IP address
#		>A	Client FQDN
#		>p	Client source port
#		<A	Server IP address or peer name
#		la	Local IP address (http_port)
#		lp	Local port number (http_port)
#		<la	Local IP address of the last server or peer connection
#		<lp     Local port number of the last server or peer connection
#		ts	Seconds since epoch
#		tu	subsecond time (milliseconds)
#		tl	Local time. Optional strftime format argument
#				default %d/%b/%Y:%H:%M:%S %z
#		tg	GMT time. Optional strftime format argument
#				default %d/%b/%Y:%H:%M:%S %z
#		tr	Response time (milliseconds)
#		dt	Total time spent making DNS lookups (milliseconds)
#
#	HTTP cache related format codes:
#
#		[http::]>h	Original request header. Optional header name argument
#				on the format header[:[separator]element]
#		[http::]>ha	The HTTP request headers after adaptation and redirection. 
#				Optional header name argument as for >h
#		[http::]<h	Reply header. Optional header name argument
#				as for >h
#		[http::]un	User name
#		[http::]ul	User name from authentication
#		[http::]ui	User name from ident
#		[http::]us	User name from SSL
#		[http::]ue	User name from external acl helper
#		[http::]>Hs	HTTP status code sent to the client
#		[http::]<Hs	HTTP status code received from the next hop
#		[http::]Ss	Squid request status (TCP_MISS etc)
#		[http::]Sh	Squid hierarchy status (DEFAULT_PARENT etc)
#		[http::]mt	MIME content type
#		[http::]rm	Request method (GET/POST etc)
#		[http::]ru	Request URL
#		[http::]rp	Request URL-Path excluding hostname
#		[http::]rv	Request protocol version
#		[http::]et	Tag returned by external acl
#		[http::]ea	Log string returned by external acl
#		[http::]<st	Sent reply size including HTTP headers
#		[http::]>st	Received request size including HTTP headers. In the
#				case of chunked requests the chunked encoding metadata
#				are not included
#		[http::]>sh	Received HTTP request headers size
#		[http::]<sh	Sent HTTP reply headers size
#		[http::]st	Request+Reply size including HTTP headers
#		[http::]<sH	Reply high offset sent
#		[http::]<sS	Upstream object size
#		[http::]<pt	Peer response time in milliseconds. The timer starts
#				when the last request byte is sent to the next hop
#				and stops when the last response byte is received.
#		[http::]<tt	Total server-side time in milliseconds. The timer 
#				starts with the first connect request (or write I/O)
#				sent to the first selected peer. The timer stops
#				with the last I/O with the last peer.
#
#	If ICAP is enabled, the following two codes become available (as
#	well as ICAP log codes documented with the icap_log option):
#
#		icap::tt        Total ICAP processing time for the HTTP
#				transaction. The timer ticks when ICAP
#				ACLs are checked and when ICAP
#				transaction is in progress.
#
#		icap::<last_h	The header of the last ICAP response
#				related to the HTTP transaction. Like
#				<h, accepts an optional header name
#				argument.  Will not change semantics
#				when multiple ICAP transactions per HTTP
#				transaction are supported.
#
#	If adaptation is enabled the following two codes become available:
#
#		adapt::sum_trs Summed adaptation transaction response
#				times recorded as a comma-separated list in
#				the order of transaction start time. Each time
#				value is recorded as an integer number,
#				representing response time of one or more
#				adaptation (ICAP or eCAP) transaction in
#				milliseconds.  When a failed transaction is
#				being retried or repeated, its time is not
#				logged individually but added to the
#				replacement (next) transaction. See also:
#				adapt::all_trs.
#
#		adapt::all_trs All adaptation transaction response times.
#				Same as adaptation_strs but response times of
#				individual transactions are never added
#				together. Instead, all transaction response
#				times are recorded individually.
#
#	You can prefix adapt::*_trs format codes with adaptation
#	service name in curly braces to record response time(s) specific
#	to that service. For example: %{my_service}adapt::sum_trs
#
#	The default formats available (which do not need re-defining) are:
#
#logformat squid %ts.%03tu %6tr %>a %Ss/%03>Hs %<st %rm %ru %un %Sh/%<A %mt
#logformat squidmime %ts.%03tu %6tr %>a %Ss/%03>Hs %<st %rm %ru %un %Sh/%<A %mt [%>h] [%<h]
#logformat common %>a %ui %un [%tl] "%rm %ru HTTP/%rv" %>Hs %<st %Ss:%Sh
#logformat combined %>a %ui %un [%tl] "%rm %ru HTTP/%rv" %>Hs %<st "%{Referer}>h" "%{User-Agent}>h" %Ss:%Sh
#Default:
# none

#  TAG: access_log
#	These files log client request activities. Has a line every HTTP or
#	ICP request. The format is:
#	access_log <filepath> [<logformat name> [acl acl ...]]
#	access_log none [acl acl ...]]
#
#	Will log to the specified file using the specified format (which
#	must be defined in a logformat directive) those entries which match
#	ALL the acl's specified (which must be defined in acl clauses).
#
#	If no acl is specified, all requests will be logged to this file.
#
#	To disable logging of a request use the filepath "none", in which case
#	a logformat name should not be specified.
#
#	To log the request via syslog specify a filepath of "syslog":
#
#	access_log syslog[:facility.priority] [format [acl1 [acl2 ....]]]
#	where facility could be any of:
#	authpriv, daemon, local0 .. local7 or user.
#
#	And priority could be any of:
#	err, warning, notice, info, debug.
#
#	Default:
#		access_log /usr/local/squid/var/logs/access.log squid
#Default:
# access_log /usr/local/squid/var/logs/access.log squid

#  TAG: icap_log
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	ICAP log files record ICAP transaction summaries, one line per
#	transaction.
#
#	The icap_log option format is:
#	icap_log <filepath> [<logformat name> [acl acl ...]]
#	icap_log none [acl acl ...]]
#	
#	Please see access_log option documentation for details. The two
#	kinds of logs share the overall configuration approach and many
#	features.
#
#	ICAP processing of a single HTTP message or transaction may
#	require multiple ICAP transactions.  In such cases, multiple
#	ICAP transaction log lines will correspond to a single access
#	log line.
#
#	ICAP log uses logformat codes that make sense for an ICAP
#	transaction. Header-related codes are applied to the HTTP header
#	embedded in an ICAP server response, with the following caveats:
#	For REQMOD, there is no HTTP response header unless the ICAP
#	server performed request satisfaction. For RESPMOD, the HTTP
#	request header is the header sent to the ICAP server. For
#	OPTIONS, there are no HTTP headers.
#
#	The following format codes are also available for ICAP logs:
#
#		icap::<A	ICAP server IP address. Similar to <A.
#
#		icap::<service_name	ICAP service name from the icap_service
#				option in Squid configuration file.
#
#		icap::ru	ICAP Request-URI. Similar to ru.
#
#		icap::rm	ICAP request method (REQMOD, RESPMOD, or 
#				OPTIONS). Similar to existing rm.
#
#		icap::>st	Bytes sent to the ICAP server (TCP payload
#				only; i.e., what Squid writes to the socket).
#
#		icap::<st	Bytes received from the ICAP server (TCP
#				payload only; i.e., what Squid reads from
#				the socket).
#
#		icap::tr 	Transaction response time (in
#				milliseconds).  The timer starts when
#				the ICAP transaction is created and
#				stops when the transaction is completed.
#				Similar to tr.
#
#		icap::tio	Transaction I/O time (in milliseconds). The
#				timer starts when the first ICAP request
#				byte is scheduled for sending. The timers
#				stops when the last byte of the ICAP response
#				is received.
#
#		icap::to 	Transaction outcome: ICAP_ERR* for all
#				transaction errors, ICAP_OPT for OPTION
#				transactions, ICAP_ECHO for 204
#				responses, ICAP_MOD for message
#				modification, and ICAP_SAT for request
#				satisfaction. Similar to Ss.
#
#		icap::Hs	ICAP response status code. Similar to Hs.
#
#		icap::>h	ICAP request header(s). Similar to >h.
#
#		icap::<h	ICAP response header(s). Similar to <h.
#
#	The default ICAP log format, which can be used without an explicit
#	definition, is called icap_squid:
#
#logformat icap_squid %ts.%03tu %6icap::tr %>a %icap::to/%03icap::Hs %icap::<size %icap::rm %icap::ru% %un -/%icap::<A -
#
#	See also: logformat, log_icap, and %icap::<last_h 
#Default:
# none

#  TAG: log_access	allow|deny acl acl...
#	This options allows you to control which requests gets logged
#	to access.log (see access_log directive). Requests denied for
#	logging will also not be accounted for in performance counters.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# none

#  TAG: log_icap
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	This options allows you to control which requests get logged
#	to icap.log. See the icap_log directive for ICAP log details.
#Default:
# none

#  TAG: cache_store_log
#	Logs the activities of the storage manager.  Shows which
#	objects are ejected from the cache, and which objects are
#	saved and for how long.  To disable, enter "none" or remove the line.
#	There are not really utilities to analyze this data, so you can safely
#	disable it.
#
#	Example:
#		cache_store_log /usr/local/squid/var/logs/store.log
#Default:
# none

#  TAG: cache_swap_state
#	Location for the cache "swap.state" file. This index file holds
#	the metadata of objects saved on disk.  It is used to rebuild
#	the cache during startup.  Normally this file resides in each
#	'cache_dir' directory, but you may specify an alternate
#	pathname here.  Note you must give a full filename, not just
#	a directory. Since this is the index for the whole object
#	list you CANNOT periodically rotate it!
#
#	If %s can be used in the file name it will be replaced with a
#	a representation of the cache_dir name where each / is replaced
#	with '.'. This is needed to allow adding/removing cache_dir
#	lines when cache_swap_log is being used.
#
#	If have more than one 'cache_dir', and %s is not used in the name
#	these swap logs will have names such as:
#
#		cache_swap_log.00
#		cache_swap_log.01
#		cache_swap_log.02
#
#	The numbered extension (which is added automatically)
#	corresponds to the order of the 'cache_dir' lines in this
#	configuration file.  If you change the order of the 'cache_dir'
#	lines in this file, these index files will NOT correspond to
#	the correct 'cache_dir' entry (unless you manually rename
#	them).  We recommend you do NOT use this option.  It is
#	better to keep these index files in each 'cache_dir' directory.
#Default:
# none

#  TAG: logfile_rotate
#	Specifies the number of logfile rotations to make when you
#	type 'squid -k rotate'. The default is 10, which will rotate
#	with extensions 0 through 9. Setting logfile_rotate to 0 will
#	disable the file name rotation, but the logfiles are still closed
#	and re-opened. This will enable you to rename the logfiles
#	yourself just before sending the rotate signal.
#
#	Note, the 'squid -k rotate' command normally sends a USR1
#	signal to the running squid process.  In certain situations
#	(e.g. on Linux with Async I/O), USR1 is used for other
#	purposes, so -k rotate uses another signal.  It is best to get
#	in the habit of using 'squid -k rotate' instead of 'kill -USR1
#	<pid>'.
#
#	Note, from Squid-3.1 this option has no effect on the cache.log,
#	that log can be rotated separately by using debug_options
#Default:
# logfile_rotate 10

#  TAG: emulate_httpd_log	on|off
#	The Cache can emulate the log file format which many 'httpd'
#	programs use.  To disable/enable this emulation, set
#	emulate_httpd_log to 'off' or 'on'.  The default
#	is to use the native log format since it includes useful
#	information Squid-specific log analyzers use.
#Default:
# emulate_httpd_log off

#  TAG: log_ip_on_direct	on|off
#	Log the destination IP address in the hierarchy log tag when going
#	direct. Earlier Squid versions logged the hostname here. If you
#	prefer the old way set this to off.
#Default:
# log_ip_on_direct on

#  TAG: mime_table
#	Pathname to Squid's MIME table. You shouldn't need to change
#	this, but the default file contains examples and formatting
#	information if you do.
#Default:
# mime_table /usr/local/squid/etc/mime.conf

#  TAG: log_mime_hdrs	on|off
#	The Cache can record both the request and the response MIME
#	headers for each HTTP transaction.  The headers are encoded
#	safely and will appear as two bracketed fields at the end of
#	the access log (for either the native or httpd-emulated log
#	formats).  To enable this logging set log_mime_hdrs to 'on'.
#Default:
# log_mime_hdrs off

#  TAG: useragent_log
# Note: This option is only available if Squid is rebuilt with the
#       --enable-useragent-log option
#
#	Squid will write the User-Agent field from HTTP requests
#	to the filename specified here.  By default useragent_log
#	is disabled.
#Default:
# none

#  TAG: referer_log
# Note: This option is only available if Squid is rebuilt with the
#       --enable-referer-log option
#
#	Squid will write the Referer field from HTTP requests to the
#	filename specified here.  By default referer_log is disabled.
#	Note that "referer" is actually a misspelling of "referrer"
#	however the misspelt version has been accepted into the HTTP RFCs
#	and we accept both.
#Default:
# none

#  TAG: pid_filename
#	A filename to write the process-id to.  To disable, enter "none".
#Default:
# pid_filename /usr/local/squid/var/run/squid.pid

#  TAG: log_fqdn	on|off
#	Turn this on if you wish to log fully qualified domain names
#	in the access.log. To do this Squid does a DNS lookup of all
#	IP's connecting to it. This can (in some situations) increase
#	latency, which makes your cache seem slower for interactive
#	browsing.
#Default:
# log_fqdn off

#  TAG: client_netmask
#	A netmask for client addresses in logfiles and cachemgr output.
#	Change this to protect the privacy of your cache clients.
#	A netmask of 255.255.255.0 will log all IP's in that range with
#	the last digit set to '0'.
#Default:
# client_netmask no_addr

#  TAG: forward_log
# Note: This option is only available if Squid is rebuilt with the
#       -DWIP_FWD_LOG define
#
#	Logs the server-side requests.
#
#	This is currently work in progress.
#Default:
# none

#  TAG: strip_query_terms
#	By default, Squid strips query terms from requested URLs before
#	logging.  This protects your user's privacy.
#Default:
# strip_query_terms on

#  TAG: buffered_logs	on|off
#	cache.log log file is written with stdio functions, and as such
#	it can be buffered or unbuffered. By default it will be unbuffered.
#	Buffering it can speed up the writing slightly (though you are
#	unlikely to need to worry unless you run with tons of debugging
#	enabled in which case performance will suffer badly anyway..).
#Default:
# buffered_logs off

#  TAG: netdb_filename
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icmp option
#
#	A filename where Squid stores it's netdb state between restarts.
#	To disable, enter "none".
#Default:
# netdb_filename /usr/local/squid/var/logs/netdb.state

# OPTIONS FOR TROUBLESHOOTING
# -----------------------------------------------------------------------------

#  TAG: cache_log
#	Cache logging file. This is where general information about
#	your cache's behavior goes. You can increase the amount of data
#	logged to this file and how often its rotated with "debug_options"
#Default:
# cache_log /usr/local/squid/var/logs/cache.log

#  TAG: debug_options
#	Logging options are set as section,level where each source file
#	is assigned a unique section.  Lower levels result in less
#	output,  Full debugging (level 9) can result in a very large
#	log file, so be careful.
#
#	The magic word "ALL" sets debugging levels for all sections.
#	We recommend normally running with "ALL,1".
#
#	The rotate=N option can be used to keep more or less of these logs
#	than would otherwise be kept by logfile_rotate.
#	For most uses a single log should be enough to monitor current
#	events affecting Squid.
#Default:
# debug_options ALL,1

#  TAG: coredump_dir
#	By default Squid leaves core files in the directory from where
#	it was started. If you set 'coredump_dir' to a directory
#	that exists, Squid will chdir() to that directory at startup
#	and coredump files will be left there.
#
#Default:
# coredump_dir none
#

# Leave coredumps in the first cache dir
coredump_dir /usr/local/squid/var/cache

# OPTIONS FOR FTP GATEWAYING
# -----------------------------------------------------------------------------

#  TAG: ftp_user
#	If you want the anonymous login password to be more informative
#	(and enable the use of picky ftp servers), set this to something
#	reasonable for your domain, like wwwuser@somewhere.net
#
#	The reason why this is domainless by default is the
#	request can be made on the behalf of a user in any domain,
#	depending on how the cache is used.
#	Some ftp server also validate the email address is valid
#	(for example perl.com).
#Default:
# ftp_user Squid@

#  TAG: ftp_list_width
#	Sets the width of ftp listings. This should be set to fit in
#	the width of a standard browser. Setting this too small
#	can cut off long filenames when browsing ftp sites.
#Default:
# ftp_list_width 32

#  TAG: ftp_passive
#	If your firewall does not allow Squid to use passive
#	connections, turn off this option.
#
#	Use of ftp_epsv_all option requires this to be ON.
#Default:
# ftp_passive on

#  TAG: ftp_epsv_all
#	FTP Protocol extensions permit the use of a special "EPSV ALL" command.
#
#	NATs may be able to put the connection on a "fast path" through the
#	translator, as the EPRT command will never be used and therefore,
#	translation of the data portion of the segments will never be needed.
#
#	When a client only expects to do two-way FTP transfers this may be
#	useful.
#	If squid finds that it must do a three-way FTP transfer after issuing
#	an EPSV ALL command, the FTP session will fail.
#
#	If you have any doubts about this option do not use it.
#	Squid will nicely attempt all other connection methods.
#
#	Requires ftp_passive to be ON (default) for any effect.
#Default:
# ftp_epsv_all off

#  TAG: ftp_epsv
#	FTP Protocol extensions permit the use of a special "EPSV" command.
#
#	NATs may be able to put the connection on a "fast path" through the
#	translator using EPSV, as the EPRT command will never be used
#	and therefore, translation of the data portion of the segments 
#	will never be needed.
#
#	Turning this OFF will prevent EPSV being attempted.
#	WARNING: Doing so will convert Squid back to the old behavior with all
#	the related problems with external NAT devices/layers.
#
#	Requires ftp_passive to be ON (default) for any effect.
#Default:
# ftp_epsv on

#  TAG: ftp_eprt
#	FTP Protocol extensions permit the use of a special "EPRT" command.
#
#	This extension provides a protocol neutral alternative to the
#	IPv4-only PORT command. When supported it enables active FTP data
#	channels over IPv6 and efficient NAT handling.
#
#	Turning this OFF will prevent EPRT being attempted and will skip
#	straight to using PORT for IPv4 servers.
#
#	Some devices are known to not handle this extension correctly and
#	may result in crashes. Devices which suport EPRT enough to fail
#	cleanly will result in Squid attempting PORT anyway. This directive
#	should only be disabled when EPRT results in device failures.
#
#	WARNING: Doing so will convert Squid back to the old behavior with all
#	the related problems with external NAT devices/layers and IPv4-only FTP.
#Default:
# ftp_eprt on

#  TAG: ftp_sanitycheck
#	For security and data integrity reasons Squid by default performs
#	sanity checks of the addresses of FTP data connections ensure the
#	data connection is to the requested server. If you need to allow
#	FTP connections to servers using another IP address for the data
#	connection turn this off.
#Default:
# ftp_sanitycheck on

#  TAG: ftp_telnet_protocol
#	The FTP protocol is officially defined to use the telnet protocol
#	as transport channel for the control connection. However, many
#	implementations are broken and does not respect this aspect of
#	the FTP protocol.
#
#	If you have trouble accessing files with ASCII code 255 in the
#	path or similar problems involving this ASCII code you can
#	try setting this directive to off. If that helps, report to the
#	operator of the FTP server in question that their FTP server
#	is broken and does not follow the FTP standard.
#Default:
# ftp_telnet_protocol on

# OPTIONS FOR EXTERNAL SUPPORT PROGRAMS
# -----------------------------------------------------------------------------

#  TAG: diskd_program
#	Specify the location of the diskd executable.
#	Note this is only useful if you have compiled in
#	diskd as one of the store io modules.
#Default:
# diskd_program /usr/local/squid/libexec/diskd

#  TAG: unlinkd_program
#	Specify the location of the executable for file deletion process.
#Default:
# unlinkd_program /usr/local/squid/libexec/unlinkd

#  TAG: pinger_program
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icmp option
#
#	Specify the location of the executable for the pinger process.
#Default:
# pinger_program /usr/local/squid/libexec/pinger

#  TAG: pinger_enable
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icmp option
#
#	Control whether the pinger is active at run-time.
#	Enables turning ICMP pinger on and off with a simple
#	squid -k reconfigure.
#Default:
# pinger_enable off

# OPTIONS FOR URL REWRITING
# -----------------------------------------------------------------------------

#  TAG: url_rewrite_program
#	Specify the location of the executable URL rewriter to use.
#	Since they can perform almost any function there isn't one included.
#
#	For each requested URL, the rewriter will receive on line with the format
#
#	URL <SP> client_ip "/" fqdn <SP> user <SP> method [<SP> kvpairs]<NL>
#
#	In the future, the rewriter interface will be extended with
#	key=value pairs ("kvpairs" shown above).  Rewriter programs
#	should be prepared to receive and possibly ignore additional
#	whitespace-separated tokens on each input line.
#
#	And the rewriter may return a rewritten URL. The other components of
#	the request line does not need to be returned (ignored if they are).
#
#	The rewriter can also indicate that a client-side redirect should
#	be performed to the new URL. This is done by prefixing the returned
#	URL with "301:" (moved permanently) or 302: (moved temporarily), etc.
#
#	By default, a URL rewriter is not used.
#Default:
# none

#  TAG: url_rewrite_children
#	The number of redirector processes to spawn. If you start
#	too few Squid will have to wait for them to process a backlog of
#	URLs, slowing it down. If you start too many they will use RAM
#	and other system resources.
#Default:
# url_rewrite_children 5

#  TAG: url_rewrite_concurrency
#	The number of requests each redirector helper can handle in
#	parallel. Defaults to 0 which indicates the redirector
#	is a old-style single threaded redirector.
#
#	When this directive is set to a value >= 1 then the protocol
#	used to communicate with the helper is modified to include
#	a request ID in front of the request/response. The request
#	ID from the request must be echoed back with the response
#	to that request.
#Default:
# url_rewrite_concurrency 0

#  TAG: url_rewrite_host_header
#	By default Squid rewrites any Host: header in redirected
#	requests.  If you are running an accelerator this may
#	not be a wanted effect of a redirector.
#
#	WARNING: Entries are cached on the result of the URL rewriting
#	process, so be careful if you have domain-virtual hosts.
#Default:
# url_rewrite_host_header on

#  TAG: url_rewrite_access
#	If defined, this access list specifies which requests are
#	sent to the redirector processes.  By default all requests
#	are sent.
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# none

#  TAG: url_rewrite_bypass
#	When this is 'on', a request will not go through the
#	redirector if all redirectors are busy.  If this is 'off'
#	and the redirector queue grows too large, Squid will exit
#	with a FATAL error and ask you to increase the number of
#	redirectors.  You should only enable this if the redirectors
#	are not critical to your caching system.  If you use
#	redirectors for access control, and you enable this option,
#	users may have access to pages they should not
#	be allowed to request.
#Default:
# url_rewrite_bypass off

# OPTIONS FOR TUNING THE CACHE
# -----------------------------------------------------------------------------

#  TAG: cache
#	A list of ACL elements which, if matched and denied, cause the request to
#	not be satisfied from the cache and the reply to not be cached.
#	In other words, use this to force certain objects to never be cached.
#
#	You must use the words 'allow' or 'deny' to indicate whether items
#	matching the ACL should be allowed or denied into the cache.
#
#	Default is to allow all to be cached.
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# none

#  TAG: refresh_pattern
#	usage: refresh_pattern [-i] regex min percent max [options]
#
#	By default, regular expressions are CASE-SENSITIVE.  To make
#	them case-insensitive, use the -i option.
#
#	'Min' is the time (in minutes) an object without an explicit
#	expiry time should be considered fresh. The recommended
#	value is 0, any higher values may cause dynamic applications
#	to be erroneously cached unless the application designer
#	has taken the appropriate actions.
#
#	'Percent' is a percentage of the objects age (time since last
#	modification age) an object without explicit expiry time
#	will be considered fresh.
#
#	'Max' is an upper limit on how long objects without an explicit
#	expiry time will be considered fresh.
#
#	options: override-expire
#		 override-lastmod
#		 reload-into-ims
#		 ignore-reload
#		 ignore-no-cache
#		 ignore-no-store
#		 ignore-must-revalidate
#		 ignore-private
#		 ignore-auth
#		 refresh-ims
#
#		override-expire enforces min age even if the server
#		sent an explicit expiry time (e.g., with the
#		Expires: header or Cache-Control: max-age). Doing this
#		VIOLATES the HTTP standard.  Enabling this feature
#		could make you liable for problems which it causes.
#
#		Note: override-expire does not enforce staleness - it only extends
#		freshness / min. If the server returns a Expires time which
#		is longer than your max time, Squid will still consider
#		the object fresh for that period of time.
#
#		override-lastmod enforces min age even on objects
#		that were modified recently.
#
#		reload-into-ims changes client no-cache or ``reload''
#		to If-Modified-Since requests. Doing this VIOLATES the
#		HTTP standard. Enabling this feature could make you
#		liable for problems which it causes.
#
#		ignore-reload ignores a client no-cache or ``reload''
#		header. Doing this VIOLATES the HTTP standard. Enabling
#		this feature could make you liable for problems which
#		it causes.
#
#		ignore-no-cache ignores any ``Pragma: no-cache'' and
#		``Cache-control: no-cache'' headers received from a server.
#		The HTTP RFC never allows the use of this (Pragma) header
#		from a server, only a client, though plenty of servers
#		send it anyway.
#
#		ignore-no-store ignores any ``Cache-control: no-store''
#		headers received from a server. Doing this VIOLATES
#		the HTTP standard. Enabling this feature could make you
#		liable for problems which it causes.
#
#		ignore-must-revalidate ignores any ``Cache-Control: must-revalidate``
#		headers received from a server. Doing this VIOLATES
#		the HTTP standard. Enabling this feature could make you
#		liable for problems which it causes.
#
#		ignore-private ignores any ``Cache-control: private''
#		headers received from a server. Doing this VIOLATES
#		the HTTP standard. Enabling this feature could make you
#		liable for problems which it causes.
#
#		ignore-auth caches responses to requests with authorization,
#		as if the originserver had sent ``Cache-control: public''
#		in the response header. Doing this VIOLATES the HTTP standard.
#		Enabling this feature could make you liable for problems which
#		it causes.
#
#		refresh-ims causes squid to contact the origin server
#		when a client issues an If-Modified-Since request. This
#		ensures that the client will receive an updated version
#		if one is available.
#
#	Basically a cached object is:
#
#		FRESH if expires < now, else STALE
#		STALE if age > max
#		FRESH if lm-factor < percent, else STALE
#		FRESH if age < min
#		else STALE
#
#	The refresh_pattern lines are checked in the order listed here.
#	The first entry which matches is used.  If none of the entries
#	match the default will be used.
#
#	Note, you must uncomment all the default lines if you want
#	to change one. The default setting is only active if none is
#	used.
#
#

# Add any of your own refresh_pattern entries above these.
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern .		0	20%	4320

#  TAG: quick_abort_min	(KB)
#Default:
# quick_abort_min 16 KB

#  TAG: quick_abort_max	(KB)
#Default:
# quick_abort_max 16 KB

#  TAG: quick_abort_pct	(percent)
#	The cache by default continues downloading aborted requests
#	which are almost completed (less than 16 KB remaining). This
#	may be undesirable on slow (e.g. SLIP) links and/or very busy
#	caches.  Impatient users may tie up file descriptors and
#	bandwidth by repeatedly requesting and immediately aborting
#	downloads.
#
#	When the user aborts a request, Squid will check the
#	quick_abort values to the amount of data transfered until
#	then.
#
#	If the transfer has less than 'quick_abort_min' KB remaining,
#	it will finish the retrieval.
#
#	If the transfer has more than 'quick_abort_max' KB remaining,
#	it will abort the retrieval.
#
#	If more than 'quick_abort_pct' of the transfer has completed,
#	it will finish the retrieval.
#
#	If you do not want any retrieval to continue after the client
#	has aborted, set both 'quick_abort_min' and 'quick_abort_max'
#	to '0 KB'.
#
#	If you want retrievals to always continue if they are being
#	cached set 'quick_abort_min' to '-1 KB'.
#Default:
# quick_abort_pct 95

#  TAG: read_ahead_gap	buffer-size
#	The amount of data the cache will buffer ahead of what has been
#	sent to the client when retrieving an object from another server.
#Default:
# read_ahead_gap 16 KB

#  TAG: negative_ttl	time-units
#	Set the Default Time-to-Live (TTL) for failed requests.
#	Certain types of failures (such as "connection refused" and
#	"404 Not Found") are able to be negatively-cached for a short time.
#	Modern web servers should provide Expires: header, however if they
#	do not this can provide a minimum TTL.
#	The default is not to cache errors with unknown expiry details.
#
#	Note that this is different from negative caching of DNS lookups.
#
#	WARNING: Doing this VIOLATES the HTTP standard.  Enabling
#	this feature could make you liable for problems which it
#	causes.
#Default:
# negative_ttl 0 seconds

#  TAG: positive_dns_ttl	time-units
#	Upper limit on how long Squid will cache positive DNS responses.
#	Default is 6 hours (360 minutes). This directive must be set
#	larger than negative_dns_ttl.
#Default:
# positive_dns_ttl 6 hours

#  TAG: negative_dns_ttl	time-units
#	Time-to-Live (TTL) for negative caching of failed DNS lookups.
#	This also sets the lower cache limit on positive lookups.
#	Minimum value is 1 second, and it is not recommendable to go
#	much below 10 seconds.
#Default:
# negative_dns_ttl 1 minutes

#  TAG: range_offset_limit	(bytes)
#	Sets a upper limit on how far into the the file a Range request
#	may be to cause Squid to prefetch the whole file. If beyond this
#	limit Squid forwards the Range request as it is and the result
#	is NOT cached.
#
#	This is to stop a far ahead range request (lets say start at 17MB)
#	from making Squid fetch the whole object up to that point before
#	sending anything to the client.
#
#	A value of 0 causes Squid to never fetch more than the
#	client requested. (default)
#
#	A value of -1 causes Squid to always fetch the object from the
#	beginning so it may cache the result. (2.0 style)
#
#	NP: Using -1 here will override any quick_abort settings that may
#	    otherwise apply to the range request. The range request will
#	    be fully fetched from start to finish regardless of the client
#	    actions. This affects bandwidth usage.
#Default:
# range_offset_limit 0 KB

#  TAG: minimum_expiry_time	(seconds)
#	The minimum caching time according to (Expires - Date)
#	Headers Squid honors if the object can't be revalidated
#	defaults to 60 seconds. In reverse proxy environments it
#	might be desirable to honor shorter object lifetimes. It
#	is most likely better to make your server return a
#	meaningful Last-Modified header however. In ESI environments
#	where page fragments often have short lifetimes, this will
#	often be best set to 0.
#Default:
# minimum_expiry_time 60 seconds

#  TAG: store_avg_object_size	(kbytes)
#	Average object size, used to estimate number of objects your
#	cache can hold.  The default is 13 KB.
#Default:
# store_avg_object_size 13 KB

#  TAG: store_objects_per_bucket
#	Target number of objects per bucket in the store hash table.
#	Lowering this value increases the total number of buckets and
#	also the storage maintenance rate.  The default is 20.
#Default:
# store_objects_per_bucket 20

# HTTP OPTIONS
# -----------------------------------------------------------------------------

#  TAG: request_header_max_size	(KB)
#	This specifies the maximum size for HTTP headers in a request.
#	Request headers are usually relatively small (about 512 bytes).
#	Placing a limit on the request header size will catch certain
#	bugs (for example with persistent connections) and possibly
#	buffer-overflow or denial-of-service attacks.
#Default:
# request_header_max_size 64 KB

#  TAG: reply_header_max_size	(KB)
#	This specifies the maximum size for HTTP headers in a reply.
#	Reply headers are usually relatively small (about 512 bytes).
#	Placing a limit on the reply header size will catch certain
#	bugs (for example with persistent connections) and possibly
#	buffer-overflow or denial-of-service attacks.
#Default:
# reply_header_max_size 64 KB

#  TAG: request_body_max_size	(bytes)
#	This specifies the maximum size for an HTTP request body.
#	In other words, the maximum size of a PUT/POST request.
#	A user who attempts to send a request with a body larger
#	than this limit receives an "Invalid Request" error message.
#	If you set this parameter to a zero (the default), there will
#	be no limit imposed.
#Default:
# request_body_max_size 0 KB

#  TAG: client_request_buffer_max_size	(bytes)
#	This specifies the maximum buffer size of a client request.
#	It prevents squid eating too much memory when somebody uploads
#	a large file.
#Default:
# client_request_buffer_max_size 512 KB

#  TAG: chunked_request_body_max_size	(bytes)
#	A broken or confused HTTP/1.1 client may send a chunked HTTP
#	request to Squid. Squid does not have full support for that
#	feature yet. To cope with such requests, Squid buffers the
#	entire request and then dechunks request body to create a
#	plain HTTP/1.0 request with a known content length. The plain
#	request is then used by the rest of Squid code as usual.
#
#	The option value specifies the maximum size of the buffer used
#	to hold the request before the conversion. If the chunked
#	request size exceeds the specified limit, the conversion
#	fails, and the client receives an "unsupported request" error,
#	as if dechunking was disabled.
#
#	Dechunking is enabled by default. To disable conversion of
#	chunked requests, set the maximum to zero.
#
#	Request dechunking feature and this option in particular are a
#	temporary hack. When chunking requests and responses are fully
#	supported, there will be no need to buffer a chunked request.
#Default:
# chunked_request_body_max_size 64 KB

#  TAG: broken_posts
#	A list of ACL elements which, if matched, causes Squid to send
#	an extra CRLF pair after the body of a PUT/POST request.
#
#	Some HTTP servers has broken implementations of PUT/POST,
#	and rely on an extra CRLF pair sent by some WWW clients.
#
#	Quote from RFC2616 section 4.1 on this matter:
#
#	  Note: certain buggy HTTP/1.0 client implementations generate an
#	  extra CRLF's after a POST request. To restate what is explicitly
#	  forbidden by the BNF, an HTTP/1.1 client must not preface or follow
#	  a request with an extra CRLF.
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
#Example:
# acl buggy_server url_regex ^http://....
# broken_posts allow buggy_server
#Default:
# none

#  TAG: icap_uses_indirect_client	on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-follow-x-forwarded-for and --enable-icap-client option
#
#	Controls whether the indirect client IP address (instead of the direct
#	client IP address) is passed to adaptation services.
#
#	See also: follow_x_forwarded_for adaptation_send_client_ip
#Default:
# icap_uses_indirect_client on

#  TAG: via	on|off
#	If set (default), Squid will include a Via header in requests and
#	replies as required by RFC2616.
#Default:
# via on

#  TAG: ie_refresh	on|off
#	Microsoft Internet Explorer up until version 5.5 Service
#	Pack 1 has an issue with transparent proxies, wherein it
#	is impossible to force a refresh.  Turning this on provides
#	a partial fix to the problem, by causing all IMS-REFRESH
#	requests from older IE versions to check the origin server
#	for fresh content.  This reduces hit ratio by some amount
#	(~10% in my experience), but allows users to actually get
#	fresh content when they want it.  Note because Squid
#	cannot tell if the user is using 5.5 or 5.5SP1, the behavior
#	of 5.5 is unchanged from old versions of Squid (i.e. a
#	forced refresh is impossible).  Newer versions of IE will,
#	hopefully, continue to have the new behavior and will be
#	handled based on that assumption.  This option defaults to
#	the old Squid behavior, which is better for hit ratios but
#	worse for clients using IE, if they need to be able to
#	force fresh content.
#Default:
# ie_refresh off

#  TAG: vary_ignore_expire	on|off
#	Many HTTP servers supporting Vary gives such objects
#	immediate expiry time with no cache-control header
#	when requested by a HTTP/1.0 client. This option
#	enables Squid to ignore such expiry times until
#	HTTP/1.1 is fully implemented.
#
#	WARNING: If turned on this may eventually cause some
#	varying objects not intended for caching to get cached.
#Default:
# vary_ignore_expire off

#  TAG: request_entities
#	Squid defaults to deny GET and HEAD requests with request entities,
#	as the meaning of such requests are undefined in the HTTP standard
#	even if not explicitly forbidden.
#
#	Set this directive to on if you have clients which insists
#	on sending request entities in GET or HEAD requests. But be warned
#	that there is server software (both proxies and web servers) which
#	can fail to properly process this kind of request which may make you
#	vulnerable to cache pollution attacks if enabled.
#Default:
# request_entities off

#  TAG: request_header_access
#	Usage: request_header_access header_name allow|deny [!]aclname ...
#
#	WARNING: Doing this VIOLATES the HTTP standard.  Enabling
#	this feature could make you liable for problems which it
#	causes.
#
#	This option replaces the old 'anonymize_headers' and the
#	older 'http_anonymizer' option with something that is much
#	more configurable. This new method creates a list of ACLs
#	for each header, allowing you very fine-tuned header
#	mangling.
#
#	This option only applies to request headers, i.e., from the
#	client to the server.
#
#	You can only specify known headers for the header name.
#	Other headers are reclassified as 'Other'. You can also
#	refer to all the headers with 'All'.
#
#	For example, to achieve the same behavior as the old
#	'http_anonymizer standard' option, you should use:
#
#		request_header_access From deny all
#		request_header_access Referer deny all
#		request_header_access Server deny all
#		request_header_access User-Agent deny all
#		request_header_access WWW-Authenticate deny all
#		request_header_access Link deny all
#
#	Or, to reproduce the old 'http_anonymizer paranoid' feature
#	you should use:
#
#		request_header_access Allow allow all
#		request_header_access Authorization allow all
#		request_header_access WWW-Authenticate allow all
#		request_header_access Proxy-Authorization allow all
#		request_header_access Proxy-Authenticate allow all
#		request_header_access Cache-Control allow all
#		request_header_access Content-Encoding allow all
#		request_header_access Content-Length allow all
#		request_header_access Content-Type allow all
#		request_header_access Date allow all
#		request_header_access Expires allow all
#		request_header_access Host allow all
#		request_header_access If-Modified-Since allow all
#		request_header_access Last-Modified allow all
#		request_header_access Location allow all
#		request_header_access Pragma allow all
#		request_header_access Accept allow all
#		request_header_access Accept-Charset allow all
#		request_header_access Accept-Encoding allow all
#		request_header_access Accept-Language allow all
#		request_header_access Content-Language allow all
#		request_header_access Mime-Version allow all
#		request_header_access Retry-After allow all
#		request_header_access Title allow all
#		request_header_access Connection allow all
#		request_header_access All deny all
#
#	although many of those are HTTP reply headers, and so should be
#	controlled with the reply_header_access directive.
#
#	By default, all headers are allowed (no anonymizing is
#	performed).
#Default:
# none

#  TAG: reply_header_access
#	Usage: reply_header_access header_name allow|deny [!]aclname ...
#
#	WARNING: Doing this VIOLATES the HTTP standard.  Enabling
#	this feature could make you liable for problems which it
#	causes.
#
#	This option only applies to reply headers, i.e., from the
#	server to the client.
#
#	This is the same as request_header_access, but in the other
#	direction.
#
#	This option replaces the old 'anonymize_headers' and the
#	older 'http_anonymizer' option with something that is much
#	more configurable. This new method creates a list of ACLs
#	for each header, allowing you very fine-tuned header
#	mangling.
#
#	You can only specify known headers for the header name.
#	Other headers are reclassified as 'Other'. You can also
#	refer to all the headers with 'All'.
#
#	For example, to achieve the same behavior as the old
#	'http_anonymizer standard' option, you should use:
#
#		reply_header_access From deny all
#		reply_header_access Referer deny all
#		reply_header_access Server deny all
#		reply_header_access User-Agent deny all
#		reply_header_access WWW-Authenticate deny all
#		reply_header_access Link deny all
#
#	Or, to reproduce the old 'http_anonymizer paranoid' feature
#	you should use:
#
#		reply_header_access Allow allow all
#		reply_header_access Authorization allow all
#		reply_header_access WWW-Authenticate allow all
#		reply_header_access Proxy-Authorization allow all
#		reply_header_access Proxy-Authenticate allow all
#		reply_header_access Cache-Control allow all
#		reply_header_access Content-Encoding allow all
#		reply_header_access Content-Length allow all
#		reply_header_access Content-Type allow all
#		reply_header_access Date allow all
#		reply_header_access Expires allow all
#		reply_header_access Host allow all
#		reply_header_access If-Modified-Since allow all
#		reply_header_access Last-Modified allow all
#		reply_header_access Location allow all
#		reply_header_access Pragma allow all
#		reply_header_access Accept allow all
#		reply_header_access Accept-Charset allow all
#		reply_header_access Accept-Encoding allow all
#		reply_header_access Accept-Language allow all
#		reply_header_access Content-Language allow all
#		reply_header_access Mime-Version allow all
#		reply_header_access Retry-After allow all
#		reply_header_access Title allow all
#		reply_header_access Connection allow all
#		reply_header_access All deny all
#
#	although the HTTP request headers won't be usefully controlled
#	by this directive -- see request_header_access for details.
#
#	By default, all headers are allowed (no anonymizing is
#	performed).
#Default:
# none

#  TAG: request_header_replace
#	Usage:   request_header_replace header_name message
#	Example: request_header_replace User-Agent Nutscrape/1.0 (CP/M; 8-bit)
#
#	This option allows you to change the contents of headers
#	denied with request_header_access above, by replacing them
#	with some fixed string. This replaces the old fake_user_agent
#	option.
#
#	This only applies to request headers, not reply headers.
#
#	By default, headers are removed if denied.
#Default:
# none

#  TAG: reply_header_replace
#        Usage:   reply_header_replace header_name message
#        Example: reply_header_replace Server Foo/1.0
#
#        This option allows you to change the contents of headers
#        denied with reply_header_access above, by replacing them
#        with some fixed string.
#
#        This only applies to reply headers, not request headers.
#
#        By default, headers are removed if denied.
#Default:
# none

#  TAG: relaxed_header_parser	on|off|warn
#	In the default "on" setting Squid accepts certain forms
#	of non-compliant HTTP messages where it is unambiguous
#	what the sending application intended even if the message
#	is not correctly formatted. The messages is then normalized
#	to the correct form when forwarded by Squid.
#
#	If set to "warn" then a warning will be emitted in cache.log
#	each time such HTTP error is encountered.
#
#	If set to "off" then such HTTP errors will cause the request
#	or response to be rejected.
#Default:
# relaxed_header_parser on

#  TAG: ignore_expect_100	on|off
#	This option makes Squid ignore any Expect: 100-continue header present
#	in the request. RFC 2616 requires that Squid being unable to satisfy
#	the response expectation MUST return a 417 error.
#
#	Note: Enabling this is a HTTP protocol violation, but some clients may
#	not handle it well..
#Default:
# ignore_expect_100 off

# TIMEOUTS
# -----------------------------------------------------------------------------

#  TAG: forward_timeout	time-units
#	This parameter specifies how long Squid should at most attempt in
#	finding a forwarding path for the request before giving up.
#Default:
# forward_timeout 4 minutes

#  TAG: connect_timeout	time-units
#	This parameter specifies how long to wait for the TCP connect to
#	the requested server or peer to complete before Squid should
#	attempt to find another path where to forward the request.
#Default:
# connect_timeout 1 minute

#  TAG: peer_connect_timeout	time-units
#	This parameter specifies how long to wait for a pending TCP
#	connection to a peer cache.  The default is 30 seconds.   You
#	may also set different timeout values for individual neighbors
#	with the 'connect-timeout' option on a 'cache_peer' line.
#Default:
# peer_connect_timeout 30 seconds

#  TAG: read_timeout	time-units
#	The read_timeout is applied on server-side connections.  After
#	each successful read(), the timeout will be extended by this
#	amount.  If no data is read again after this amount of time,
#	the request is aborted and logged with ERR_READ_TIMEOUT.  The
#	default is 15 minutes.
#Default:
# read_timeout 15 minutes

#  TAG: request_timeout
#	How long to wait for complete HTTP request headers after initial
#	connection establishment.
#Default:
# request_timeout 5 minutes

#  TAG: persistent_request_timeout
#	How long to wait for the next HTTP request on a persistent
#	connection after the previous request completes.
#Default:
# persistent_request_timeout 2 minutes

#  TAG: client_lifetime	time-units
#	The maximum amount of time a client (browser) is allowed to
#	remain connected to the cache process.  This protects the Cache
#	from having a lot of sockets (and hence file descriptors) tied up
#	in a CLOSE_WAIT state from remote clients that go away without
#	properly shutting down (either because of a network failure or
#	because of a poor client implementation).  The default is one
#	day, 1440 minutes.
#
#	NOTE:  The default value is intended to be much larger than any
#	client would ever need to be connected to your cache.  You
#	should probably change client_lifetime only as a last resort.
#	If you seem to have many client connections tying up
#	filedescriptors, we recommend first tuning the read_timeout,
#	request_timeout, persistent_request_timeout and quick_abort values.
#Default:
# client_lifetime 1 day

#  TAG: half_closed_clients
#	Some clients may shutdown the sending side of their TCP
#	connections, while leaving their receiving sides open.	Sometimes,
#	Squid can not tell the difference between a half-closed and a
#	fully-closed TCP connection.
#
#	By default, Squid will immediately close client connections when
#	read(2) returns "no more data to read."
#
#	Change this option to 'on' and Squid will keep open connections
#	until a read(2) or write(2) on the socket returns an error.
#	This may show some benefits for reverse proxies. But if not
#	it is recommended to leave OFF.
#Default:
# half_closed_clients off

#  TAG: pconn_timeout
#	Timeout for idle persistent connections to servers and other
#	proxies.
#Default:
# pconn_timeout 1 minute

#  TAG: ident_timeout
#	Maximum time to wait for IDENT lookups to complete.
#
#	If this is too high, and you enabled IDENT lookups from untrusted
#	users, you might be susceptible to denial-of-service by having
#	many ident requests going at once.
#Default:
# ident_timeout 10 seconds

#  TAG: shutdown_lifetime	time-units
#	When SIGTERM or SIGHUP is received, the cache is put into
#	"shutdown pending" mode until all active sockets are closed.
#	This value is the lifetime to set for all open descriptors
#	during shutdown mode.  Any active clients after this many
#	seconds will receive a 'timeout' message.
#Default:
# shutdown_lifetime 30 seconds

# ADMINISTRATIVE PARAMETERS
# -----------------------------------------------------------------------------

#  TAG: cache_mgr
#	Email-address of local cache manager who will receive
#	mail if the cache dies.  The default is "webmaster."
#Default:
# cache_mgr webmaster

#  TAG: mail_from
#	From: email-address for mail sent when the cache dies.
#	The default is to use 'appname@unique_hostname'.
#	Default appname value is "squid", can be changed into
#	src/globals.h before building squid.
#Default:
# none

#  TAG: mail_program
#	Email program used to send mail if the cache dies.
#	The default is "mail". The specified program must comply
#	with the standard Unix mail syntax:
#	  mail-program recipient < mailfile
#
#	Optional command line options can be specified.
#Default:
# mail_program mail

#  TAG: cache_effective_user
#	If you start Squid as root, it will change its effective/real
#	UID/GID to the user specified below.  The default is to change
#	to UID of nobody.
#	see also; cache_effective_group
#Default:
# cache_effective_user nobody

#  TAG: cache_effective_group
#	Squid sets the GID to the effective user's default group ID
#	(taken from the password file) and supplementary group list
#	from the groups membership.
#
#	If you want Squid to run with a specific GID regardless of
#	the group memberships of the effective user then set this
#	to the group (or GID) you want Squid to run as. When set
#	all other group privileges of the effective user are ignored
#	and only this GID is effective. If Squid is not started as
#	root the user starting Squid MUST be member of the specified
#	group.
#
#	This option is not recommended by the Squid Team.
#	Our preference is for administrators to configure a secure
#	user account for squid with UID/GID matching system policies.
#Default:
# none

#  TAG: httpd_suppress_version_string	on|off
#	Suppress Squid version string info in HTTP headers and HTML error pages.
#Default:
# httpd_suppress_version_string off

#  TAG: visible_hostname
#	If you want to present a special hostname in error messages, etc,
#	define this.  Otherwise, the return value of gethostname()
#	will be used. If you have multiple caches in a cluster and
#	get errors about IP-forwarding you must set them to have individual
#	names with this setting.
#Default:
# none

#  TAG: unique_hostname
#	If you want to have multiple machines with the same
#	'visible_hostname' you must give each machine a different
#	'unique_hostname' so forwarding loops can be detected.
#Default:
# none

#  TAG: hostname_aliases
#	A list of other DNS names your cache has.
#Default:
# none

#  TAG: umask
#	Minimum umask which should be enforced while the proxy
#	is running, in addition to the umask set at startup.
#
#	For a traditional octal representation of umasks, start
#        your value with 0.
#Default:
# umask 027

# OPTIONS FOR THE CACHE REGISTRATION SERVICE
# -----------------------------------------------------------------------------
#
#	This section contains parameters for the (optional) cache
#	announcement service.  This service is provided to help
#	cache administrators locate one another in order to join or
#	create cache hierarchies.
#
#	An 'announcement' message is sent (via UDP) to the registration
#	service by Squid.  By default, the announcement message is NOT
#	SENT unless you enable it with 'announce_period' below.
#
#	The announcement message includes your hostname, plus the
#	following information from this configuration file:
#
#		http_port
#		icp_port
#		cache_mgr
#
#	All current information is processed regularly and made
#	available on the Web at http://www.ircache.net/Cache/Tracker/.

#  TAG: announce_period
#	This is how frequently to send cache announcements.  The
#	default is `0' which disables sending the announcement
#	messages.
#
#	To enable announcing your cache, just set an announce period.
#
#	Example:
#		announce_period 1 day
#Default:
# announce_period 0

#  TAG: announce_host
#Default:
# announce_host tracker.ircache.net

#  TAG: announce_file
#Default:
# none

#  TAG: announce_port
#	announce_host and announce_port set the hostname and port
#	number where the registration message will be sent.
#
#	Hostname will default to 'tracker.ircache.net' and port will
#	default default to 3131.  If the 'filename' argument is given,
#	the contents of that file will be included in the announce
#	message.
#Default:
# announce_port 3131

# HTTPD-ACCELERATOR OPTIONS
# -----------------------------------------------------------------------------

#  TAG: httpd_accel_surrogate_id
# Note: This option is only available if Squid is rebuilt with the
#       --enable-esi option
#
#	Surrogates (http://www.esi.org/architecture_spec_1.0.html)
#	need an identification token to allow control targeting. Because
#	a farm of surrogates may all perform the same tasks, they may share
#	an identification token.
#Default:
# httpd_accel_surrogate_id unset-id

#  TAG: http_accel_surrogate_remote	on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-esi option
#
#	Remote surrogates (such as those in a CDN) honour Surrogate-Control: no-store-remote.
#	Set this to on to have squid behave as a remote surrogate.
#Default:
# http_accel_surrogate_remote off

#  TAG: esi_parser	libxml2|expat|custom
# Note: This option is only available if Squid is rebuilt with the
#       --enable-esi option
#
#	ESI markup is not strictly XML compatible. The custom ESI parser
#	will give higher performance, but cannot handle non ASCII character
#	encodings.
#Default:
# esi_parser custom

# DELAY POOL PARAMETERS
# -----------------------------------------------------------------------------

#  TAG: delay_pools
# Note: This option is only available if Squid is rebuilt with the
#       --enable-delay-pools option
#
#	This represents the number of delay pools to be used.  For example,
#	if you have one class 2 delay pool and one class 3 delays pool, you
#	have a total of 2 delay pools.
#Default:
# delay_pools 0

#  TAG: delay_class
# Note: This option is only available if Squid is rebuilt with the
#       --enable-delay-pools option
#
#	This defines the class of each delay pool.  There must be exactly one
#	delay_class line for each delay pool.  For example, to define two
#	delay pools, one of class 2 and one of class 3, the settings above
#	and here would be:
#
#	Example:
#	    delay_pools 4      # 4 delay pools
#	    delay_class 1 2    # pool 1 is a class 2 pool
#	    delay_class 2 3    # pool 2 is a class 3 pool
#	    delay_class 3 4    # pool 3 is a class 4 pool
#	    delay_class 4 5    # pool 4 is a class 5 pool
#
#	The delay pool classes are:
#
#		class 1		Everything is limited by a single aggregate
#				bucket.
#
#		class 2 	Everything is limited by a single aggregate
#				bucket as well as an "individual" bucket chosen
#				from bits 25 through 32 of the IPv4 address.
#
#		class 3		Everything is limited by a single aggregate
#				bucket as well as a "network" bucket chosen
#				from bits 17 through 24 of the IP address and a
#				"individual" bucket chosen from bits 17 through
#				32 of the IPv4 address.
#
#		class 4		Everything in a class 3 delay pool, with an
#				additional limit on a per user basis. This
#				only takes effect if the username is established
#				in advance - by forcing authentication in your
#				http_access rules.
#
#		class 5		Requests are grouped according their tag (see
#				external_acl's tag= reply).
#
#
#	Each pool also requires a delay_parameters directive to configure the pool size
#	and speed limits used whenever the pool is applied to a request. Along with
#	a set of delay_access directives to determine when it is used.
#
#	NOTE: If an IP address is a.b.c.d
#		-> bits 25 through 32 are "d"
#		-> bits 17 through 24 are "c"
#		-> bits 17 through 32 are "c * 256 + d"
#
#	NOTE-2: Due to the use of bitmasks in class 2,3,4 pools they only apply to
#		IPv4 traffic. Class 1 and 5 pools may be used with IPv6 traffic.
#Default:
# none

#  TAG: delay_access
# Note: This option is only available if Squid is rebuilt with the
#       --enable-delay-pools option
#
#	This is used to determine which delay pool a request falls into.
#
#	delay_access is sorted per pool and the matching starts with pool 1,
#	then pool 2, ..., and finally pool N. The first delay pool where the
#	request is allowed is selected for the request. If it does not allow
#	the request to any pool then the request is not delayed (default).
#
#	For example, if you want some_big_clients in delay
#	pool 1 and lotsa_little_clients in delay pool 2:
#
#Example:
# delay_access 1 allow some_big_clients
# delay_access 1 deny all
# delay_access 2 allow lotsa_little_clients
# delay_access 2 deny all
# delay_access 3 allow authenticated_clients
#Default:
# none

#  TAG: delay_parameters
# Note: This option is only available if Squid is rebuilt with the
#       --enable-delay-pools option
#
#	This defines the parameters for a delay pool.  Each delay pool has
#	a number of "buckets" associated with it, as explained in the
#	description of delay_class.
#
#	For a class 1 delay pool, the syntax is:
#		delay_pools pool 1
#		delay_parameters pool aggregate
#
#	For a class 2 delay pool:
#		delay_pools pool 2
#		delay_parameters pool aggregate individual
#
#	For a class 3 delay pool:
#		delay_pools pool 3
#		delay_parameters pool aggregate network individual
#
#	For a class 4 delay pool:
#		delay_pools pool 4
#		delay_parameters pool aggregate network individual user
#
#	For a class 5 delay pool:
#		delay_pools pool 5
#		delay_parameters pool tagrate
#
#	The option variables are:
#
#		pool		a pool number - ie, a number between 1 and the
#				number specified in delay_pools as used in
#				delay_class lines.
#
#		aggregate	the speed limit parameters for the aggregate bucket
#				(class 1, 2, 3).
#
#		individual	the speed limit parameters for the individual
#				buckets (class 2, 3).
#
#		network		the speed limit parameters for the network buckets
#				(class 3).
#
#		user		the speed limit parameters for the user buckets
#				(class 4).
#
#		tagrate		the speed limit parameters for the tag buckets
#				(class 5).
#
#	A pair of delay parameters is written restore/maximum, where restore is
#	the number of bytes (not bits - modem and network speeds are usually
#	quoted in bits) per second placed into the bucket, and maximum is the
#	maximum number of bytes which can be in the bucket at any time.
#
#	There must be one delay_parameters line for each delay pool.
#
#
#	For example, if delay pool number 1 is a class 2 delay pool as in the
#	above example, and is being used to strictly limit each host to 64Kbit/sec
#	(plus overheads), with no overall limit, the line is:
#
#		delay_parameters 1 -1/-1 8000/8000
#
#	Note that 8 x 8000 KByte/sec -> 64Kbit/sec.
#
#	Note that the figure -1 is used to represent "unlimited".
#
#
#	And, if delay pool number 2 is a class 3 delay pool as in the above
#	example, and you want to limit it to a total of 256Kbit/sec (strict limit)
#	with each 8-bit network permitted 64Kbit/sec (strict limit) and each
#	individual host permitted 4800bit/sec with a bucket maximum size of 64Kbits
#	to permit a decent web page to be downloaded at a decent speed
#	(if the network is not being limited due to overuse) but slow down
#	large downloads more significantly:
#
#		delay_parameters 2 32000/32000 8000/8000 600/8000
#
#	Note that 8 x 32000 KByte/sec -> 256Kbit/sec.
#		  8 x  8000 KByte/sec ->  64Kbit/sec.
#		  8 x   600 Byte/sec  -> 4800bit/sec.
#
#
#	Finally, for a class 4 delay pool as in the example - each user will
#	be limited to 128Kbits/sec no matter how many workstations they are logged into.:
#
#		delay_parameters 4 32000/32000 8000/8000 600/64000 16000/16000
#Default:
# none

#  TAG: delay_initial_bucket_level	(percent, 0-100)
# Note: This option is only available if Squid is rebuilt with the
#       --enable-delay-pools option
#
#	The initial bucket percentage is used to determine how much is put
#	in each bucket when squid starts, is reconfigured, or first notices
#	a host accessing it (in class 2 and class 3, individual hosts and
#	networks only have buckets associated with them once they have been
#	"seen" by squid).
#Default:
# delay_initial_bucket_level 50

# WCCPv1 AND WCCPv2 CONFIGURATION OPTIONS
# -----------------------------------------------------------------------------

#  TAG: wccp_router
#	Use this option to define your WCCP ``home'' router for
#	Squid.
#
#	wccp_router supports a single WCCP(v1) router
#
#	wccp2_router supports multiple WCCPv2 routers
#
#	only one of the two may be used at the same time and defines
#	which version of WCCP to use.
#Default:
# wccp_router any_addr

#  TAG: wccp2_router
#	Use this option to define your WCCP ``home'' router for
#	Squid.
#
#	wccp_router supports a single WCCP(v1) router
#
#	wccp2_router supports multiple WCCPv2 routers
#
#	only one of the two may be used at the same time and defines
#	which version of WCCP to use.
#Default:
# none

#  TAG: wccp_version
#	This directive is only relevant if you need to set up WCCP(v1)
#	to some very old and end-of-life Cisco routers. In all other
#	setups it must be left unset or at the default setting.
#	It defines an internal version in the WCCP(v1) protocol,
#	with version 4 being the officially documented protocol.
#
#	According to some users, Cisco IOS 11.2 and earlier only
#	support WCCP version 3.  If you're using that or an earlier
#	version of IOS, you may need to change this value to 3, otherwise
#	do not specify this parameter.
#Default:
# wccp_version 4

#  TAG: wccp2_rebuild_wait
#	If this is enabled Squid will wait for the cache dir rebuild to finish
#	before sending the first wccp2 HereIAm packet
#Default:
# wccp2_rebuild_wait on

#  TAG: wccp2_forwarding_method
#	WCCP2 allows the setting of forwarding methods between the
#	router/switch and the cache.  Valid values are as follows:
#
#	gre - GRE encapsulation (forward the packet in a GRE/WCCP tunnel)
#	l2  - L2 redirect (forward the packet using Layer 2/MAC rewriting)
#
#	Currently (as of IOS 12.4) cisco routers only support GRE.
#	Cisco switches only support the L2 redirect assignment method.
#Default:
# wccp2_forwarding_method gre

#  TAG: wccp2_return_method
#	WCCP2 allows the setting of return methods between the
#	router/switch and the cache for packets that the cache
#	decides not to handle.  Valid values are as follows:
#
#	gre - GRE encapsulation (forward the packet in a GRE/WCCP tunnel)
#	l2  - L2 redirect (forward the packet using Layer 2/MAC rewriting)
#
#	Currently (as of IOS 12.4) cisco routers only support GRE.
#	Cisco switches only support the L2 redirect assignment.
#
#	If the "ip wccp redirect exclude in" command has been
#	enabled on the cache interface, then it is still safe for
#	the proxy server to use a l2 redirect method even if this
#	option is set to GRE.
#Default:
# wccp2_return_method gre

#  TAG: wccp2_assignment_method
#	WCCP2 allows the setting of methods to assign the WCCP hash
#	Valid values are as follows:
#
#	hash - Hash assignment
#	mask  - Mask assignment
#
#	As a general rule, cisco routers support the hash assignment method
#	and cisco switches support the mask assignment method.
#Default:
# wccp2_assignment_method hash

#  TAG: wccp2_service
#	WCCP2 allows for multiple traffic services. There are two
#	types: "standard" and "dynamic". The standard type defines
#	one service id - http (id 0). The dynamic service ids can be from
#	51 to 255 inclusive.  In order to use a dynamic service id
#	one must define the type of traffic to be redirected; this is done
#	using the wccp2_service_info option.
#
#	The "standard" type does not require a wccp2_service_info option,
#	just specifying the service id will suffice.
#
#	MD5 service authentication can be enabled by adding
#	"password=<password>" to the end of this service declaration.
#
#	Examples:
#
#	wccp2_service standard 0	# for the 'web-cache' standard service
#	wccp2_service dynamic 80	# a dynamic service type which will be
#					# fleshed out with subsequent options.
#	wccp2_service standard 0 password=foo
#Default:
# wccp2_service standard 0

#  TAG: wccp2_service_info
#	Dynamic WCCPv2 services require further information to define the
#	traffic you wish to have diverted.
#
#	The format is:
#
#	wccp2_service_info <id> protocol=<protocol> flags=<flag>,<flag>..
#	    priority=<priority> ports=<port>,<port>..
#
#	The relevant WCCPv2 flags:
#	+ src_ip_hash, dst_ip_hash
#	+ source_port_hash, dst_port_hash
#	+ src_ip_alt_hash, dst_ip_alt_hash
#	+ src_port_alt_hash, dst_port_alt_hash
#	+ ports_source
#
#	The port list can be one to eight entries.
#
#	Example:
#
#	wccp2_service_info 80 protocol=tcp flags=src_ip_hash,ports_source
#	    priority=240 ports=80
#
#	Note: the service id must have been defined by a previous
#	'wccp2_service dynamic <id>' entry.
#Default:
# none

#  TAG: wccp2_weight
#	Each cache server gets assigned a set of the destination
#	hash proportional to their weight.
#Default:
# wccp2_weight 10000

#  TAG: wccp_address
#Default:
# wccp_address 0.0.0.0

#  TAG: wccp2_address
#	Use this option if you require WCCP to use a specific
#	interface address.
#
#	The default behavior is to not bind to any specific address.
#Default:
# wccp2_address 0.0.0.0

# PERSISTENT CONNECTION HANDLING
# -----------------------------------------------------------------------------
#
# Also see "pconn_timeout" in the TIMEOUTS section

#  TAG: client_persistent_connections
#Default:
# client_persistent_connections on

#  TAG: server_persistent_connections
#	Persistent connection support for clients and servers.  By
#	default, Squid uses persistent connections (when allowed)
#	with its clients and servers.  You can use these options to
#	disable persistent connections with clients and/or servers.
#Default:
# server_persistent_connections on

#  TAG: persistent_connection_after_error
#	With this directive the use of persistent connections after
#	HTTP errors can be disabled. Useful if you have clients
#	who fail to handle errors on persistent connections proper.
#Default:
# persistent_connection_after_error on

#  TAG: detect_broken_pconn
#	Some servers have been found to incorrectly signal the use
#	of HTTP/1.0 persistent connections even on replies not
#	compatible, causing significant delays. This server problem
#	has mostly been seen on redirects.
#
#	By enabling this directive Squid attempts to detect such
#	broken replies and automatically assume the reply is finished
#	after 10 seconds timeout.
#Default:
# detect_broken_pconn off

# CACHE DIGEST OPTIONS
# -----------------------------------------------------------------------------

#  TAG: digest_generation
# Note: This option is only available if Squid is rebuilt with the
#       --enable-cache-digests option
#
#	This controls whether the server will generate a Cache Digest
#	of its contents.  By default, Cache Digest generation is
#	enabled if Squid is compiled with --enable-cache-digests defined.
#Default:
# digest_generation on

#  TAG: digest_bits_per_entry
# Note: This option is only available if Squid is rebuilt with the
#       --enable-cache-digests option
#
#	This is the number of bits of the server's Cache Digest which
#	will be associated with the Digest entry for a given HTTP
#	Method and URL (public key) combination.  The default is 5.
#Default:
# digest_bits_per_entry 5

#  TAG: digest_rebuild_period	(seconds)
# Note: This option is only available if Squid is rebuilt with the
#       --enable-cache-digests option
#
#	This is the wait time between Cache Digest rebuilds.
#Default:
# digest_rebuild_period 1 hour

#  TAG: digest_rewrite_period	(seconds)
# Note: This option is only available if Squid is rebuilt with the
#       --enable-cache-digests option
#
#	This is the wait time between Cache Digest writes to
#	disk.
#Default:
# digest_rewrite_period 1 hour

#  TAG: digest_swapout_chunk_size	(bytes)
# Note: This option is only available if Squid is rebuilt with the
#       --enable-cache-digests option
#
#	This is the number of bytes of the Cache Digest to write to
#	disk at a time.  It defaults to 4096 bytes (4KB), the Squid
#	default swap page.
#Default:
# digest_swapout_chunk_size 4096 bytes

#  TAG: digest_rebuild_chunk_percentage	(percent, 0-100)
# Note: This option is only available if Squid is rebuilt with the
#       --enable-cache-digests option
#
#	This is the percentage of the Cache Digest to be scanned at a
#	time.  By default it is set to 10% of the Cache Digest.
#Default:
# digest_rebuild_chunk_percentage 10

# SNMP OPTIONS
# -----------------------------------------------------------------------------

#  TAG: snmp_port
#	The port number where Squid listens for SNMP requests. To enable
#	SNMP support set this to a suitable port number. Port number
#	3401 is often used for the Squid SNMP agent. By default it's
#	set to "0" (disabled)
#
#	Example:
#		snmp_port 3401
#Default:
# snmp_port 0

#  TAG: snmp_access
#	Allowing or denying access to the SNMP port.
#
#	All access to the agent is denied by default.
#	usage:
#
#	snmp_access allow|deny [!]aclname ...
#
#	This clause only supports fast acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Example:
# snmp_access allow snmppublic localhost
# snmp_access deny all
#Default:
# snmp_access deny all

#  TAG: snmp_incoming_address
#Default:
# snmp_incoming_address any_addr

#  TAG: snmp_outgoing_address
#	Just like 'udp_incoming_address', but for the SNMP port.
#
#	snmp_incoming_address	is used for the SNMP socket receiving
#				messages from SNMP agents.
#	snmp_outgoing_address	is used for SNMP packets returned to SNMP
#				agents.
#
#	The default snmp_incoming_address is to listen on all
#	available network interfaces.
#
#	If snmp_outgoing_address is not set it will use the same socket
#	as snmp_incoming_address. Only change this if you want to have
#	SNMP replies sent using another address than where this Squid
#	listens for SNMP queries.
#
#	NOTE, snmp_incoming_address and snmp_outgoing_address can not have
#	the same value since they both use port 3401.
#Default:
# snmp_outgoing_address no_addr

# ICP OPTIONS
# -----------------------------------------------------------------------------

#  TAG: icp_port
#	The port number where Squid sends and receives ICP queries to
#	and from neighbor caches.  The standard UDP port for ICP is 3130.
#	Default is disabled (0).
#
#	Example:
#		icp_port 3130
#Default:
# icp_port 0

#  TAG: htcp_port
#	The port number where Squid sends and receives HTCP queries to
#	and from neighbor caches.  To turn it on you want to set it to
#	4827. By default it is set to "0" (disabled).
#
#	Example:
#		htcp_port 4827
#Default:
# htcp_port 0

#  TAG: log_icp_queries	on|off
#	If set, ICP queries are logged to access.log. You may wish
#	do disable this if your ICP load is VERY high to speed things
#	up or to simplify log analysis.
#Default:
# log_icp_queries on

#  TAG: udp_incoming_address
#	udp_incoming_address	is used for UDP packets received from other
#				caches.
#
#	The default behavior is to not bind to any specific address.
#
#	Only change this if you want to have all UDP queries received on
#	a specific interface/address.
#
#	NOTE: udp_incoming_address is used by the ICP, HTCP, and DNS
#	modules. Altering it will affect all of them in the same manner.
#
#	see also; udp_outgoing_address
#
#	NOTE, udp_incoming_address and udp_outgoing_address can not
#	have the same value since they both use the same port.
#Default:
# udp_incoming_address any_addr

#  TAG: udp_outgoing_address
#	udp_outgoing_address	is used for UDP packets sent out to other
#				caches.
#
#	The default behavior is to not bind to any specific address.
#
#	Instead it will use the same socket as udp_incoming_address.
#	Only change this if you want to have UDP queries sent using another
#	address than where this Squid listens for UDP queries from other
#	caches.
#
#	NOTE: udp_outgoing_address is used by the ICP, HTCP, and DNS
#	modules. Altering it will affect all of them in the same manner.
#
#	see also; udp_incoming_address
#
#	NOTE, udp_incoming_address and udp_outgoing_address can not
#	have the same value since they both use the same port.
#Default:
# udp_outgoing_address no_addr

#  TAG: icp_hit_stale	on|off
#	If you want to return ICP_HIT for stale cache objects, set this
#	option to 'on'.  If you have sibling relationships with caches
#	in other administrative domains, this should be 'off'.  If you only
#	have sibling relationships with caches under your control,
#	it is probably okay to set this to 'on'.
#	If set to 'on', your siblings should use the option "allow-miss"
#	on their cache_peer lines for connecting to you.
#Default:
# icp_hit_stale off

#  TAG: minimum_direct_hops
#	If using the ICMP pinging stuff, do direct fetches for sites
#	which are no more than this many hops away.
#Default:
# minimum_direct_hops 4

#  TAG: minimum_direct_rtt
#	If using the ICMP pinging stuff, do direct fetches for sites
#	which are no more than this many rtt milliseconds away.
#Default:
# minimum_direct_rtt 400

#  TAG: netdb_low
#Default:
# netdb_low 900

#  TAG: netdb_high
#	The low and high water marks for the ICMP measurement
#	database.  These are counts, not percents.  The defaults are
#	900 and 1000.  When the high water mark is reached, database
#	entries will be deleted until the low mark is reached.
#Default:
# netdb_high 1000

#  TAG: netdb_ping_period
#	The minimum period for measuring a site.  There will be at
#	least this much delay between successive pings to the same
#	network.  The default is five minutes.
#Default:
# netdb_ping_period 5 minutes

#  TAG: query_icmp	on|off
#	If you want to ask your peers to include ICMP data in their ICP
#	replies, enable this option.
#
#	If your peer has configured Squid (during compilation) with
#	'--enable-icmp' that peer will send ICMP pings to origin server
#	sites of the URLs it receives.  If you enable this option the
#	ICP replies from that peer will include the ICMP data (if available).
#	Then, when choosing a parent cache, Squid will choose the parent with
#	the minimal RTT to the origin server.  When this happens, the
#	hierarchy field of the access.log will be
#	"CLOSEST_PARENT_MISS".  This option is off by default.
#Default:
# query_icmp off

#  TAG: test_reachability	on|off
#	When this is 'on', ICP MISS replies will be ICP_MISS_NOFETCH
#	instead of ICP_MISS if the target host is NOT in the ICMP
#	database, or has a zero RTT.
#Default:
# test_reachability off

#  TAG: icp_query_timeout	(msec)
#	Normally Squid will automatically determine an optimal ICP
#	query timeout value based on the round-trip-time of recent ICP
#	queries.  If you want to override the value determined by
#	Squid, set this 'icp_query_timeout' to a non-zero value.  This
#	value is specified in MILLISECONDS, so, to use a 2-second
#	timeout (the old default), you would write:
#
#		icp_query_timeout 2000
#Default:
# icp_query_timeout 0

#  TAG: maximum_icp_query_timeout	(msec)
#	Normally the ICP query timeout is determined dynamically.  But
#	sometimes it can lead to very large values (say 5 seconds).
#	Use this option to put an upper limit on the dynamic timeout
#	value.  Do NOT use this option to always use a fixed (instead
#	of a dynamic) timeout value. To set a fixed timeout see the
#	'icp_query_timeout' directive.
#Default:
# maximum_icp_query_timeout 2000

#  TAG: minimum_icp_query_timeout	(msec)
#	Normally the ICP query timeout is determined dynamically.  But
#	sometimes it can lead to very small timeouts, even lower than
#	the normal latency variance on your link due to traffic.
#	Use this option to put an lower limit on the dynamic timeout
#	value.  Do NOT use this option to always use a fixed (instead
#	of a dynamic) timeout value. To set a fixed timeout see the
#	'icp_query_timeout' directive.
#Default:
# minimum_icp_query_timeout 5

#  TAG: background_ping_rate	time-units
#	Controls how often the ICP pings are sent to siblings that
#	have background-ping set.
#Default:
# background_ping_rate 10 seconds

# MULTICAST ICP OPTIONS
# -----------------------------------------------------------------------------

#  TAG: mcast_groups
#	This tag specifies a list of multicast groups which your server
#	should join to receive multicasted ICP queries.
#
#	NOTE!  Be very careful what you put here!  Be sure you
#	understand the difference between an ICP _query_ and an ICP
#	_reply_.  This option is to be set only if you want to RECEIVE
#	multicast queries.  Do NOT set this option to SEND multicast
#	ICP (use cache_peer for that).  ICP replies are always sent via
#	unicast, so this option does not affect whether or not you will
#	receive replies from multicast group members.
#
#	You must be very careful to NOT use a multicast address which
#	is already in use by another group of caches.
#
#	If you are unsure about multicast, please read the Multicast
#	chapter in the Squid FAQ (http://www.squid-cache.org/FAQ/).
#
#	Usage: mcast_groups 239.128.16.128 224.0.1.20
#
#	By default, Squid doesn't listen on any multicast groups.
#Default:
# none

#  TAG: mcast_miss_addr
# Note: This option is only available if Squid is rebuilt with the
#       -DMULTICAST_MISS_STREAM define
#
#	If you enable this option, every "cache miss" URL will
#	be sent out on the specified multicast address.
#
#	Do not enable this option unless you are are absolutely
#	certain you understand what you are doing.
#Default:
# mcast_miss_addr no_addr

#  TAG: mcast_miss_ttl
# Note: This option is only available if Squid is rebuilt with the
#       -DMULTICAST_MISS_STREAM define
#
#	This is the time-to-live value for packets multicasted
#	when multicasting off cache miss URLs is enabled.  By
#	default this is set to 'site scope', i.e. 16.
#Default:
# mcast_miss_ttl 16

#  TAG: mcast_miss_port
# Note: This option is only available if Squid is rebuilt with the
#       -DMULTICAST_MISS_STREAM define
#
#	This is the port number to be used in conjunction with
#	'mcast_miss_addr'.
#Default:
# mcast_miss_port 3135

#  TAG: mcast_miss_encode_key
# Note: This option is only available if Squid is rebuilt with the
#       -DMULTICAST_MISS_STREAM define
#
#	The URLs that are sent in the multicast miss stream are
#	encrypted.  This is the encryption key.
#Default:
# mcast_miss_encode_key XXXXXXXXXXXXXXXX

#  TAG: mcast_icp_query_timeout	(msec)
#	For multicast peers, Squid regularly sends out ICP "probes" to
#	count how many other peers are listening on the given multicast
#	address.  This value specifies how long Squid should wait to
#	count all the replies.  The default is 2000 msec, or 2
#	seconds.
#Default:
# mcast_icp_query_timeout 2000

# INTERNAL ICON OPTIONS
# -----------------------------------------------------------------------------

#  TAG: icon_directory
#	Where the icons are stored. These are normally kept in
#	/usr/local/squid/share/icons
#Default:
# icon_directory /usr/local/squid/share/icons

#  TAG: global_internal_static
#	This directive controls is Squid should intercept all requests for
#	/squid-internal-static/ no matter which host the URL is requesting
#	(default on setting), or if nothing special should be done for
#	such URLs (off setting). The purpose of this directive is to make
#	icons etc work better in complex cache hierarchies where it may
#	not always be possible for all corners in the cache mesh to reach
#	the server generating a directory listing.
#Default:
# global_internal_static on

#  TAG: short_icon_urls
#	If this is enabled Squid will use short URLs for icons.
#	If disabled it will revert to the old behavior of including
#	it's own name and port in the URL.
#
#	If you run a complex cache hierarchy with a mix of Squid and
#	other proxies you may need to disable this directive.
#Default:
# short_icon_urls on

# ERROR PAGE OPTIONS
# -----------------------------------------------------------------------------

#  TAG: error_directory
#	If you wish to create your own versions of the default
#	error files to customize them to suit your company copy
#	the error/template files to another directory and point
#	this tag at them.
#
#	WARNING: This option will disable multi-language support
#	         on error pages if used.
#
#	The squid developers are interested in making squid available in
#	a wide variety of languages. If you are making translations for a
#	language that Squid does not currently provide please consider
#	contributing your translation back to the project.
#	http://wiki.squid-cache.org/Translations
#
#	The squid developers working on translations are happy to supply drop-in
#	translated error files in exchange for any new language contributions.
#Default:
# none

#  TAG: error_default_language
#	Set the default language which squid will send error pages in
#	if no existing translation matches the clients language
#	preferences.
#
#	If unset (default) generic English will be used.
#
#	The squid developers are interested in making squid available in
#	a wide variety of languages. If you are interested in making
#	translations for any language see the squid wiki for details.
#	http://wiki.squid-cache.org/Translations
#Default:
# none

#  TAG: error_log_languages
#	Log to cache.log what languages users are attempting to
#	auto-negotiate for translations.
#
#	Successful negotiations are not logged. Only failures
#	have meaning to indicate that Squid may need an upgrade
#	of its error page translations.
#Default:
# error_log_languages on

#  TAG: err_page_stylesheet
#	CSS Stylesheet to pattern the display of Squid default error pages.
#
#	For information on CSS see http://www.w3.org/Style/CSS/
#Default:
# err_page_stylesheet /usr/local/squid/etc/errorpage.css

#  TAG: err_html_text
#	HTML text to include in error messages.  Make this a "mailto"
#	URL to your admin address, or maybe just a link to your
#	organizations Web page.
#
#	To include this in your error messages, you must rewrite
#	the error template files (found in the "errors" directory).
#	Wherever you want the 'err_html_text' line to appear,
#	insert a %L tag in the error template file.
#Default:
# none

#  TAG: email_err_data	on|off
#	If enabled, information about the occurred error will be
#	included in the mailto links of the ERR pages (if %W is set)
#	so that the email body contains the data.
#	Syntax is <A HREF="mailto:%w%W">%w</A>
#Default:
# email_err_data on

#  TAG: deny_info
#	Usage:   deny_info err_page_name acl
#	or       deny_info http://... acl
#	or       deny_info TCP_RESET acl
#
#	This can be used to return a ERR_ page for requests which
#	do not pass the 'http_access' rules.  Squid remembers the last
#	acl it evaluated in http_access, and if a 'deny_info' line exists
#	for that ACL Squid returns a corresponding error page.
#
#	The acl is typically the last acl on the http_access deny line which
#	denied access. The exceptions to this rule are:
#	- When Squid needs to request authentication credentials. It's then
#	  the first authentication related acl encountered
#	- When none of the http_access lines matches. It's then the last
#	  acl processed on the last http_access line.
#
#	NP: If providing your own custom error pages with error_directory
#	    you may also specify them by your custom file name:
#	    Example: deny_info ERR_CUSTOM_ACCESS_DENIED bad_guys
#
#	Alternatively you can specify an error URL. The browsers will
#	get redirected (302 or 307) to the specified URL. %s in the redirection
#	URL will be replaced by the requested URL.
#
#	Alternatively you can tell Squid to reset the TCP connection
#	by specifying TCP_RESET.
#Default:
# none

# OPTIONS INFLUENCING REQUEST FORWARDING 
# -----------------------------------------------------------------------------

#  TAG: nonhierarchical_direct
#	By default, Squid will send any non-hierarchical requests
#	(matching hierarchy_stoplist or not cacheable request type) direct
#	to origin servers.
#
#	If you set this to off, Squid will prefer to send these
#	requests to parents.
#
#	Note that in most configurations, by turning this off you will only
#	add latency to these request without any improvement in global hit
#	ratio.
#
#	If you are inside an firewall see never_direct instead of
#	this directive.
#Default:
# nonhierarchical_direct on

#  TAG: prefer_direct
#	Normally Squid tries to use parents for most requests. If you for some
#	reason like it to first try going direct and only use a parent if
#	going direct fails set this to on.
#
#	By combining nonhierarchical_direct off and prefer_direct on you
#	can set up Squid to use a parent as a backup path if going direct
#	fails.
#
#	Note: If you want Squid to use parents for all requests see
#	the never_direct directive. prefer_direct only modifies how Squid
#	acts on cacheable requests.
#Default:
# prefer_direct off

#  TAG: always_direct
#	Usage: always_direct allow|deny [!]aclname ...
#
#	Here you can use ACL elements to specify requests which should
#	ALWAYS be forwarded by Squid to the origin servers without using
#	any peers.  For example, to always directly forward requests for
#	local servers ignoring any parents or siblings you may have use
#	something like:
#
#		acl local-servers dstdomain my.domain.net
#		always_direct allow local-servers
#
#	To always forward FTP requests directly, use
#
#		acl FTP proto FTP
#		always_direct allow FTP
#
#	NOTE: There is a similar, but opposite option named
#	'never_direct'.  You need to be aware that "always_direct deny
#	foo" is NOT the same thing as "never_direct allow foo".  You
#	may need to use a deny rule to exclude a more-specific case of
#	some other rule.  Example:
#
#		acl local-external dstdomain external.foo.net
#		acl local-servers dstdomain  .foo.net
#		always_direct deny local-external
#		always_direct allow local-servers
#
#	NOTE: If your goal is to make the client forward the request
#	directly to the origin server bypassing Squid then this needs
#	to be done in the client configuration. Squid configuration
#	can only tell Squid how Squid should fetch the object.
#
#	NOTE: This directive is not related to caching. The replies
#	is cached as usual even if you use always_direct. To not cache
#	the replies see the 'cache' directive.
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# none

#  TAG: never_direct
#	Usage: never_direct allow|deny [!]aclname ...
#
#	never_direct is the opposite of always_direct.  Please read
#	the description for always_direct if you have not already.
#
#	With 'never_direct' you can use ACL elements to specify
#	requests which should NEVER be forwarded directly to origin
#	servers.  For example, to force the use of a proxy for all
#	requests, except those in your local domain use something like:
#
#		acl local-servers dstdomain .foo.net
#		never_direct deny local-servers
#		never_direct allow all
#
#	or if Squid is inside a firewall and there are local intranet
#	servers inside the firewall use something like:
#
#		acl local-intranet dstdomain .foo.net
#		acl local-external dstdomain external.foo.net
#		always_direct deny local-external
#		always_direct allow local-intranet
#		never_direct allow all
#
#	This clause supports both fast and slow acl types.
#	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# none

# ADVANCED NETWORKING OPTIONS
# -----------------------------------------------------------------------------

#  TAG: incoming_icp_average
#Default:
# incoming_icp_average 6

#  TAG: incoming_http_average
#Default:
# incoming_http_average 4

#  TAG: incoming_dns_average
#Default:
# incoming_dns_average 4

#  TAG: min_icp_poll_cnt
#Default:
# min_icp_poll_cnt 8

#  TAG: min_dns_poll_cnt
#Default:
# min_dns_poll_cnt 8

#  TAG: min_http_poll_cnt
#	Heavy voodoo here.  I can't even believe you are reading this.
#	Are you crazy?  Don't even think about adjusting these unless
#	you understand the algorithms in comm_select.c first!
#Default:
# min_http_poll_cnt 8

#  TAG: accept_filter
#	FreeBSD:
#
#	The name of an accept(2) filter to install on Squid's
#	listen socket(s).  This feature is perhaps specific to
#	FreeBSD and requires support in the kernel.
#
#	The 'httpready' filter delays delivering new connections
#	to Squid until a full HTTP request has been received.
#	See the accf_http(9) man page for details.
#
#	The 'dataready' filter delays delivering new connections
#	to Squid until there is some data to process.
#	See the accf_dataready(9) man page for details.
#
#	Linux:
#	
#	The 'data' filter delays delivering of new connections
#	to Squid until there is some data to process by TCP_ACCEPT_DEFER.
#	You may optionally specify a number of seconds to wait by
#	'data=N' where N is the number of seconds. Defaults to 30
#	if not specified.  See the tcp(7) man page for details.
#EXAMPLE:
## FreeBSD
#accept_filter httpready
## Linux
#accept_filter data
#Default:
# none

#  TAG: client_ip_max_connections
#	Set an absolute limit on the number of connections a single
#	client IP can use. Any more than this and Squid will begin to drop
#	new connections from the client until it closes some links.
#
#	Note that this is a global limit. It affects all HTTP, HTCP, Gopher and FTP
#	connections from the client. For finer control use the ACL access controls.
#
#	Requires client_db to be enabled (the default).
#
#	WARNING: This may noticably slow down traffic received via external proxies
#	or NAT devices and cause them to rebound error messages back to their clients.
#Default:
# client_ip_max_connections -1

#  TAG: tcp_recv_bufsize	(bytes)
#	Size of receive buffer to set for TCP sockets.  Probably just
#	as easy to change your kernel's default.  Set to zero to use
#	the default buffer size.
#Default:
# tcp_recv_bufsize 0 bytes

# ICAP OPTIONS
# -----------------------------------------------------------------------------

#  TAG: icap_enable	on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	If you want to enable the ICAP module support, set this to on.
#Default:
# icap_enable off

#  TAG: icap_connect_timeout
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	This parameter specifies how long to wait for the TCP connect to
#	the requested ICAP server to complete before giving up and either
#	terminating the HTTP transaction or bypassing the failure.
#
#	The default for optional services is peer_connect_timeout.
#	The default for essential services is connect_timeout.
#	If this option is explicitly set, its value applies to all services.
#Default:
# none

#  TAG: icap_io_timeout	time-units
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	This parameter specifies how long to wait for an I/O activity on
#	an established, active ICAP connection before giving up and
#	either terminating the HTTP transaction or bypassing the
#	failure.
#
#	The default is read_timeout.
#Default:
# none

#  TAG: icap_service_failure_limit
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	The limit specifies the number of failures that Squid tolerates
#	when establishing a new TCP connection with an ICAP service. If
#	the number of failures exceeds the limit, the ICAP service is
#	not used for new ICAP requests until it is time to refresh its
#	OPTIONS. The per-service failure counter is reset to zero each
#	time Squid fetches new service OPTIONS.
#
#	A negative value disables the limit. Without the limit, an ICAP
#	service will not be considered down due to connectivity failures
#	between ICAP OPTIONS requests.
#Default:
# icap_service_failure_limit 10

#  TAG: icap_service_revival_delay
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	The delay specifies the number of seconds to wait after an ICAP
#	OPTIONS request failure before requesting the options again. The
#	failed ICAP service is considered "down" until fresh OPTIONS are
#	fetched.
#
#	The actual delay cannot be smaller than the hardcoded minimum
#	delay of 30 seconds.
#Default:
# icap_service_revival_delay 180

#  TAG: icap_preview_enable	on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	The ICAP Preview feature allows the ICAP server to handle the
#	HTTP message by looking only at the beginning of the message body
#	or even without receiving the body at all. In some environments, 
#	previews greatly speedup ICAP processing.
#
#	During an ICAP OPTIONS transaction, the server may tell	Squid what
#	HTTP messages should be previewed and how big the preview should be.
#	Squid will not use Preview if the server did not request one.
#
#	To disable ICAP Preview for all ICAP services, regardless of
#	individual ICAP server OPTIONS responses, set this option to "off".
#Example:
#icap_preview_enable off
#Default:
# icap_preview_enable on

#  TAG: icap_preview_size
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	The default size of preview data to be sent to the ICAP server.
#	-1 means no preview. This value might be overwritten on a per server
#	basis by OPTIONS requests.
#Default:
# icap_preview_size -1

#  TAG: icap_default_options_ttl
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	The default TTL value for ICAP OPTIONS responses that don't have
#	an Options-TTL header.
#Default:
# icap_default_options_ttl 60

#  TAG: icap_persistent_connections	on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	Whether or not Squid should use persistent connections to
#	an ICAP server.
#Default:
# icap_persistent_connections on

#  TAG: icap_send_client_ip	on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	If enabled, Squid shares HTTP client IP information with adaptation
#	services. For ICAP, Squid adds the X-Client-IP header to ICAP requests.
#	For eCAP, Squid sets the libecap::metaClientIp transaction option.
#
#	See also: adaptation_uses_indirect_client
#Default:
# icap_send_client_ip off

#  TAG: icap_send_client_username	on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	This sends authenticated HTTP client username (if available) to
#	the ICAP service. The username value is encoded based on the
#	icap_client_username_encode option and is sent using the header
#	specified by the icap_client_username_header option.
#Default:
# icap_send_client_username off

#  TAG: icap_client_username_header
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	ICAP request header name to use for send_client_username.
#Default:
# icap_client_username_header X-Client-Username

#  TAG: icap_client_username_encode	on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	Whether to base64 encode the authenticated client username.
#Default:
# icap_client_username_encode off

#  TAG: icap_service
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	Defines a single ICAP service using the following format:
#
#	icap_service service_name vectoring_point [options] service_url
#
#	service_name: ID
#		an opaque identifier which must be unique in squid.conf
#
#	vectoring_point: reqmod_precache|reqmod_postcache|respmod_precache|respmod_postcache
#		This specifies at which point of transaction processing the
#		ICAP service should be activated. *_postcache vectoring points
#		are not yet supported.
#
#	service_url: icap://servername:port/servicepath
#		ICAP server and service location.
#
#	ICAP does not allow a single service to handle both REQMOD and RESPMOD
#	transactions. Squid does not enforce that requirement. You can specify
#	services with the same service_url and different vectoring_points. You
#	can even specify multiple identical services as long as their
#	service_names differ.
#
#
#	Service options are separated by white space. ICAP services support
#	the following name=value options:
#
#	bypass=on|off|1|0
#		If set to 'on' or '1', the ICAP service is treated as
#		optional. If the service cannot be reached or malfunctions,
#		Squid will try to ignore any errors and process the message as
#		if the service was not enabled. No all ICAP errors can be
#		bypassed.  If set to 0, the ICAP service is treated as
#		essential and all ICAP errors will result in an error page
#		returned to the HTTP client.
#
#		Bypass is off by default: services are treated as essential.
#
#	routing=on|off|1|0
#		If set to 'on' or '1', the ICAP service is allowed to
#		dynamically change the current message adaptation plan by
#		returning a chain of services to be used next. The services
#		are specified using the X-Next-Services ICAP response header
#		value, formatted as a comma-separated list of service names.
#		Each named service should be configured in squid.conf and
#		should have the same method and vectoring point as the current
#		ICAP transaction.  Services violating these rules are ignored.
#		An empty X-Next-Services value results in an empty plan which
#		ends the current adaptation. 
#
#		Routing is not allowed by default: the ICAP X-Next-Services
#		response header is ignored.
#
#	ipv6=on|off
#		Only has effect on split-stack systems. The default on those systems
#		is to use IPv4-only connections. When set to 'on' this option will
#		make Squid use IPv6-only connections to contact this ICAP service.
#
#	Older icap_service format without optional named parameters is
#	deprecated but supported for backward compatibility.
#
#Example:
#icap_service svcBlocker reqmod_precache bypass=0 icap://icap1.mydomain.net:1344/reqmod
#icap_service svcLogger reqmod_precache routing=on icap://icap2.mydomain.net:1344/respmod
#Default:
# none

#  TAG: icap_class
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	This deprecated option was documented to define an ICAP service
#	chain, even though it actually defined a set of similar, redundant
#	services, and the chains were not supported. 
#
#	To define a set of redundant services, please use the
#	adaptation_service_set directive. For service chains, use
#	adaptation_service_chain.
#Default:
# none

#  TAG: icap_access
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	This option is deprecated. Please use adaptation_access, which
#	has the same ICAP functionality, but comes with better
#	documentation, and eCAP support.
#Default:
# none

# eCAP OPTIONS
# -----------------------------------------------------------------------------

#  TAG: ecap_enable	on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ecap option
#
#	Controls whether eCAP support is enabled.
#Default:
# ecap_enable off

#  TAG: ecap_service
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ecap option
#
#	Defines a single eCAP service
#
#	ecap_service servicename vectoring_point bypass service_url
#
#	vectoring_point = reqmod_precache|reqmod_postcache|respmod_precache|respmod_postcache
#		This specifies at which point of transaction processing the
#		eCAP service should be activated. *_postcache vectoring points
#		are not yet supported.
#	bypass = 1|0
#		If set to 1, the eCAP service is treated as optional. If the
#		service cannot be reached or malfunctions, Squid will try to
#		ignore any errors and process the message as if the service
#		was not enabled. No all eCAP errors can be bypassed.
#		If set to 0, the eCAP service is treated as essential and all
#		eCAP errors will result in an error page returned to the
#		HTTP client.
#	service_url = ecap://vendor/service_name?custom&cgi=style&parameters=optional
#
#Example:
#ecap_service service_1 reqmod_precache 0 ecap://filters-R-us/leakDetector?on_error=block
#ecap_service service_2 respmod_precache 1 icap://filters-R-us/virusFilter?config=/etc/vf.cfg
#Default:
# none

#  TAG: loadable_modules
#	Instructs Squid to load the specified dynamic module(s) or activate
#	preloaded module(s).
#Example:
#loadable_modules /usr/local/squid/lib/MinimalAdapter.so
#Default:
# none

# MESSAGE ADAPTATION OPTIONS
# -----------------------------------------------------------------------------

#  TAG: adaptation_service_set
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ecap or --enable-icap-client option
#
#
#	Configures an ordered set of similar, redundant services. This is
#	useful when hot standby or backup adaptation servers are available.
#
#	    adaptation_service_set set_name service_name1 service_name2 ...
#
# 	The named services are used in the set declaration order. The first
#	applicable adaptation service from the set is used first. The next
#	applicable service is tried if and only if the transaction with the
#	previous service fails and the message waiting to be adapted is still
#	intact.
#
#	When adaptation starts, broken services are ignored as if they were
#	not a part of the set. A broken service is a down optional service.
#
#	The services in a set must be attached to the same vectoring point
#	(e.g., pre-cache) and use the same adaptation method (e.g., REQMOD).
#
#	If all services in a set are optional then adaptation failures are
#	bypassable. If all services in the set are essential, then a
#	transaction failure with one service may still be retried using
#	another service from the set, but when all services fail, the master
#	transaction fails as well.
#
#	A set may contain a mix of optional and essential services, but that
#	is likely to lead to surprising results because broken services become
#	ignored (see above), making previously bypassable failures fatal.
#	Technically, it is the bypassability of the last failed service that
#	matters.
#
#	See also: adaptation_access adaptation_service_chain
#
#Example:
#adaptation_service_set svcBlocker urlFilterPrimary urlFilterBackup
#adaptation service_set svcLogger loggerLocal loggerRemote
#Default:
# none

#  TAG: adaptation_service_chain
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ecap or --enable-icap-client option
#
#
#	Configures a list of complementary services that will be applied
#	one-by-one, forming an adaptation chain or pipeline. This is useful
#	when Squid must perform different adaptations on the same message.
#
#	    adaptation_service_chain chain_name service_name1 svc_name2 ...
#
# 	The named services are used in the chain declaration order. The first
#	applicable adaptation service from the chain is used first. The next
#	applicable service is applied to the successful adaptation results of
#	the previous service in the chain.
#
#	When adaptation starts, broken services are ignored as if they were
#	not a part of the chain. A broken service is a down optional service.
#
#	Request satisfaction terminates the adaptation chain because Squid
#	does not currently allow declaration of RESPMOD services at the
#	"reqmod_precache" vectoring point (see icap_service or ecap_service).
#
#	The services in a chain must be attached to the same vectoring point
#	(e.g., pre-cache) and use the same adaptation method (e.g., REQMOD).
#
#	A chain may contain a mix of optional and essential services. If an
#	essential adaptation fails (or the failure cannot be bypassed for
#	other reasons), the master transaction fails. Otherwise, the failure
#	is bypassed as if the failed adaptation service was not in the chain.
#
#	See also: adaptation_access adaptation_service_set
#
#Example:
#adaptation_service_chain svcRequest requestLogger urlFilter leakDetector
#Default:
# none

#  TAG: adaptation_access
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ecap or --enable-icap-client option
#
#	Sends an HTTP transaction to an ICAP or eCAP adaptation	service.
#
#	adaptation_access service_name allow|deny [!]aclname...
#	adaptation_access set_name     allow|deny [!]aclname...
#
#	At each supported vectoring point, the adaptation_access
#	statements are processed in the order they appear in this
#	configuration file. Statements pointing to the following services
#	are ignored (i.e., skipped without checking their ACL):
#
#	    - services serving different vectoring points
#	    - "broken-but-bypassable" services
#	    - "up" services configured to ignore such transactions
#              (e.g., based on the ICAP Transfer-Ignore header).
#
#        When a set_name is used, all services in the set are checked
#	using the same rules, to find the first applicable one. See
#	adaptation_service_set for details.
#
#	If an access list is checked and there is a match, the
#	processing stops: For an "allow" rule, the corresponding
#	adaptation service is used for the transaction. For a "deny"
#	rule, no adaptation service is activated.
#
#	It is currently not possible to apply more than one adaptation
#	service at the same vectoring point to the same HTTP transaction.
#
#        See also: icap_service and ecap_service
#
#Example:
#adaptation_access service_1 allow all
#Default:
# none

#  TAG: adaptation_service_iteration_limit
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ecap or --enable-icap-client option
#
#	Limits the number of iterations allowed when applying adaptation
#	services to a message. If your longest adaptation set or chain
#	may have more than 16 services, increase the limit beyond its
#	default value of 16. If detecting infinite iteration loops sooner
#	is critical, make the iteration limit match the actual number
#	of services in your longest adaptation set or chain.
#
#	Infinite adaptation loops are most likely with routing services.
#
#	See also: icap_service routing=1
#Default:
# adaptation_service_iteration_limit 16

#  TAG: adaptation_masterx_shared_names
# Note: This option is only available if Squid is rebuilt with the
#       --enable-ecap or --enable-icap-client option
#
#	For each master transaction (i.e., the HTTP request and response
#	sequence, including all related ICAP and eCAP exchanges), Squid
#	maintains a table of metadata. The table entries are (name, value)
#	pairs shared among eCAP and ICAP exchanges. The table is destroyed
#	with the master transaction.
#
#	This option specifies the table entry names that Squid must accept
#	from and forward to the adaptation transactions.
#
#	An ICAP REQMOD or RESPMOD transaction may set an entry in the 
#	shared table by returning an ICAP header field with a name 
#	specified in adaptation_masterx_shared_names. Squid will store 
#	and forward that ICAP header field to subsequent ICAP 
#	transactions within the same master transaction scope.
#
#	Only one shared entry name is supported at this time.
#
#Example:
## share authentication information among ICAP services
#adaptation_masterx_shared_names X-Subscriber-ID
#Default:
# none

#  TAG: icap_retry
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	This ACL determines which retriable ICAP transactions are
#	retried. Transactions that received a complete ICAP response
#	and did not have to consume or produce HTTP bodies to receive
#	that response are usually retriable.
#
#	icap_retry allow|deny [!]aclname ...
#
#	Squid automatically retries some ICAP I/O timeouts and errors
#	due to persistent connection race conditions.
#
#	See also: icap_retry_limit
#Default:
# icap_retry deny all

#  TAG: icap_retry_limit
# Note: This option is only available if Squid is rebuilt with the
#       --enable-icap-client option
#
#	Limits the number of retries allowed. When set to zero (default),
#	no retries are allowed.
#
#	Communication errors due to persistent connection race
#	conditions are unavoidable, automatically retried, and do not
#	count against this limit.
#
#	See also: icap_retry
#Default:
# icap_retry_limit 0

# DNS OPTIONS
# -----------------------------------------------------------------------------

#  TAG: check_hostnames
#	For security and stability reasons Squid can check
#	hostnames for Internet standard RFC compliance. If you want
#	Squid to perform these checks turn this directive on.
#Default:
# check_hostnames off

#  TAG: allow_underscore
#	Underscore characters is not strictly allowed in Internet hostnames
#	but nevertheless used by many sites. Set this to off if you want
#	Squid to be strict about the standard.
#	This check is performed only when check_hostnames is set to on.
#Default:
# allow_underscore on

#  TAG: cache_dns_program
# Note: This option is only available if Squid is rebuilt with the
#       --disable-internal-dns option
#
#	Specify the location of the executable for dnslookup process.
#Default:
# cache_dns_program /usr/local/squid/libexec/dnsserver

#  TAG: dns_children
# Note: This option is only available if Squid is rebuilt with the
#       --disable-internal-dns option
#
#	The number of processes spawn to service DNS name lookups.
#	For heavily loaded caches on large servers, you should
#	probably increase this value to at least 10.  The maximum
#	is 32.  The default is 5.
#
#	You must have at least one dnsserver process.
#Default:
# dns_children 5

#  TAG: dns_retransmit_interval
#	Initial retransmit interval for DNS queries. The interval is
#	doubled each time all configured DNS servers have been tried.
#
#Default:
# dns_retransmit_interval 5 seconds

#  TAG: dns_timeout
#	DNS Query timeout. If no response is received to a DNS query
#	within this time all DNS servers for the queried domain
#	are assumed to be unavailable.
#Default:
# dns_timeout 2 minutes

#  TAG: dns_defnames	on|off
#	Normally the RES_DEFNAMES resolver option is disabled
#	(see res_init(3)).  This prevents caches in a hierarchy
#	from interpreting single-component hostnames locally.  To allow
#	Squid to handle single-component names, enable this option.
#Default:
# dns_defnames off

#  TAG: dns_nameservers
#	Use this if you want to specify a list of DNS name servers
#	(IP addresses) to use instead of those given in your
#	/etc/resolv.conf file.
#	On Windows platforms, if no value is specified here or in
#	the /etc/resolv.conf file, the list of DNS name servers are
#	taken from the Windows registry, both static and dynamic DHCP
#	configurations are supported.
#
#	Example: dns_nameservers 10.0.0.1 192.172.0.4
#Default:
# none

#  TAG: hosts_file
#	Location of the host-local IP name-address associations
#	database. Most Operating Systems have such a file on different
#	default locations:
#	- Un*X & Linux:    /etc/hosts
#	- Windows NT/2000: %SystemRoot%\system32\drivers\etc\hosts
#			   (%SystemRoot% value install default is c:\winnt)
#	- Windows XP/2003: %SystemRoot%\system32\drivers\etc\hosts
#			   (%SystemRoot% value install default is c:\windows)
#	- Windows 9x/Me:   %windir%\hosts
#			   (%windir% value is usually c:\windows)
#	- Cygwin:	   /etc/hosts
#
#	The file contains newline-separated definitions, in the
#	form ip_address_in_dotted_form name [name ...] names are
#	whitespace-separated. Lines beginning with an hash (#)
#	character are comments.
#
#	The file is checked at startup and upon configuration.
#	If set to 'none', it won't be checked.
#	If append_domain is used, that domain will be added to
#	domain-local (i.e. not containing any dot character) host
#	definitions.
#Default:
# hosts_file /etc/hosts

#  TAG: append_domain
#	Appends local domain name to hostnames without any dots in
#	them.  append_domain must begin with a period.
#
#	Be warned there are now Internet names with no dots in
#	them using only top-domain names, so setting this may
#	cause some Internet sites to become unavailable.
#
#Example:
# append_domain .yourdomain.com
#Default:
# none

#  TAG: ignore_unknown_nameservers
#	By default Squid checks that DNS responses are received
#	from the same IP addresses they are sent to.  If they
#	don't match, Squid ignores the response and writes a warning
#	message to cache.log.  You can allow responses from unknown
#	nameservers by setting this option to 'off'.
#Default:
# ignore_unknown_nameservers on

#  TAG: dns_v4_fallback
#	Standard practice with DNS is to lookup either A or AAAA records
#	and use the results if it succeeds. Only looking up the other if
#	the first attempt fails or otherwise produces no results.
#
#	That policy however will cause squid to produce error pages for some
#	servers that advertise AAAA but are unreachable over IPv6.
#
#	If this is ON  squid will always lookup both AAAA and A, using both.
#	If this is OFF squid will lookup AAAA and only try A if none found.
#
#	WARNING: There are some possibly unwanted side-effects with this on:
#		*) Doubles the load placed by squid on the DNS network.
#		*) May negatively impact connection delay times.
#Default:
# dns_v4_fallback on

#  TAG: dns_v4_first
#	With the IPv6 Internet being as fast or faster than IPv4 Internet
#	for most networks Squid prefers to contact websites over IPv6.
#
#	This option reverses the order of preference to make Squid contact
#	dual-stack websites over IPv4 first. Squid will still perform both
#	IPv6 and IPv4 DNS lookups before connecting.
#
#	WARNING:
#	  This option will restrict the situations under which IPv6
#	  connectivity is used (and tested). Hiding network problems
#	  which would otherwise be detected and warned about.
#Default:
# dns_v4_first off

#  TAG: ipcache_size	(number of entries)
#Default:
# ipcache_size 1024

#  TAG: ipcache_low	(percent)
#Default:
# ipcache_low 90

#  TAG: ipcache_high	(percent)
#	The size, low-, and high-water marks for the IP cache.
#Default:
# ipcache_high 95

#  TAG: fqdncache_size	(number of entries)
#	Maximum number of FQDN cache entries.
#Default:
# fqdncache_size 1024

# MISCELLANEOUS
# -----------------------------------------------------------------------------

#  TAG: memory_pools	on|off
#	If set, Squid will keep pools of allocated (but unused) memory
#	available for future use.  If memory is a premium on your
#	system and you believe your malloc library outperforms Squid
#	routines, disable this.
#Default:
# memory_pools on

#  TAG: memory_pools_limit	(bytes)
#	Used only with memory_pools on:
#	memory_pools_limit 50 MB
#
#	If set to a non-zero value, Squid will keep at most the specified
#	limit of allocated (but unused) memory in memory pools. All free()
#	requests that exceed this limit will be handled by your malloc
#	library. Squid does not pre-allocate any memory, just safe-keeps
#	objects that otherwise would be free()d. Thus, it is safe to set
#	memory_pools_limit to a reasonably high value even if your
#	configuration will use less memory.
#
#	If set to none, Squid will keep all memory it can. That is, there
#	will be no limit on the total amount of memory used for safe-keeping.
#
#	To disable memory allocation optimization, do not set
#	memory_pools_limit to 0 or none. Set memory_pools to "off" instead.
#
#	An overhead for maintaining memory pools is not taken into account
#	when the limit is checked. This overhead is close to four bytes per
#	object kept. However, pools may actually _save_ memory because of
#	reduced memory thrashing in your malloc library.
#Default:
# memory_pools_limit 5 MB

#  TAG: forwarded_for	on|off|transparent|truncate|delete
#	If set to "on", Squid will append your client's IP address
#	in the HTTP requests it forwards. By default it looks like:
#
#		X-Forwarded-For: 192.1.2.3
#
#	If set to "off", it will appear as
#
#		X-Forwarded-For: unknown
#
#	If set to "transparent", Squid will not alter the
#	X-Forwarded-For header in any way.
#
#	If set to "delete", Squid will delete the entire
#	X-Forwarded-For header.
#
#	If set to "truncate", Squid will remove all existing
#	X-Forwarded-For entries, and place itself as the sole entry.
#Default:
# forwarded_for on

#  TAG: cachemgr_passwd
#	Specify passwords for cachemgr operations.
#
#	Usage: cachemgr_passwd password action action ...
#
#	Some valid actions are (see cache manager menu for a full list):
#		5min
#		60min
#		asndb
#		authenticator
#		cbdata
#		client_list
#		comm_incoming
#		config *
#		counters
#		delay
#		digest_stats
#		dns
#		events
#		filedescriptors
#		fqdncache
#		histograms
#		http_headers
#		info
#		io
#		ipcache
#		mem
#		menu
#		netdb
#		non_peers
#		objects
#		offline_toggle *
#		pconn
#		peer_select
#		reconfigure *
#		redirector
#		refresh
#		server_list
#		shutdown *
#		store_digest
#		storedir
#		utilization
#		via_headers
#		vm_objects
#
#	* Indicates actions which will not be performed without a
#	  valid password, others can be performed if not listed here.
#
#	To disable an action, set the password to "disable".
#	To allow performing an action without a password, set the
#	password to "none".
#
#	Use the keyword "all" to set the same password for all actions.
#
#Example:
# cachemgr_passwd secret shutdown
# cachemgr_passwd lesssssssecret info stats/objects
# cachemgr_passwd disable all
#Default:
# none

#  TAG: client_db	on|off
#	If you want to disable collecting per-client statistics,
#	turn off client_db here.
#Default:
# client_db on

#  TAG: refresh_all_ims	on|off
#	When you enable this option, squid will always check
#	the origin server for an update when a client sends an
#	If-Modified-Since request.  Many browsers use IMS
#	requests when the user requests a reload, and this
#	ensures those clients receive the latest version.
#
#	By default (off), squid may return a Not Modified response
#	based on the age of the cached version.
#Default:
# refresh_all_ims off

#  TAG: reload_into_ims	on|off
#	When you enable this option, client no-cache or ``reload''
#	requests will be changed to If-Modified-Since requests.
#	Doing this VIOLATES the HTTP standard.  Enabling this
#	feature could make you liable for problems which it
#	causes.
#
#	see also refresh_pattern for a more selective approach.
#Default:
# reload_into_ims off

#  TAG: maximum_single_addr_tries
#	This sets the maximum number of connection attempts for a
#	host that only has one address (for multiple-address hosts,
#	each address is tried once).
#
#	The default value is one attempt, the (not recommended)
#	maximum is 255 tries.  A warning message will be generated
#	if it is set to a value greater than ten.
#
#	Note: This is in addition to the request re-forwarding which
#	takes place if Squid fails to get a satisfying response.
#Default:
# maximum_single_addr_tries 1

#  TAG: retry_on_error
#	If set to ON Squid will automatically retry requests when
#	receiving an error response with status 403 (Forbidden),
#	500 (Internal Error), 501 or 503 (Service not available).
#	Status 502 and 504 (Gateway errors) are always retried.
#	
#	This is mainly useful if you are in a complex cache hierarchy to
#	work around access control errors.
#	
#	NOTE: This retry will attempt to find another working destination.
#	Which is different from the server which just failed.
#Default:
# retry_on_error off

#  TAG: as_whois_server
#	WHOIS server to query for AS numbers.  NOTE: AS numbers are
#	queried only when Squid starts up, not for every request.
#Default:
# as_whois_server whois.ra.net

#  TAG: offline_mode
#	Enable this option and Squid will never try to validate cached
#	objects.
#Default:
# offline_mode off

#  TAG: uri_whitespace
#	What to do with requests that have whitespace characters in the
#	URI.  Options:
#
#	strip:  The whitespace characters are stripped out of the URL.
#		This is the behavior recommended by RFC2396.
#	deny:   The request is denied.  The user receives an "Invalid
#		Request" message.
#	allow:  The request is allowed and the URI is not changed.  The
#		whitespace characters remain in the URI.  Note the
#		whitespace is passed to redirector processes if they
#		are in use.
#	encode:	The request is allowed and the whitespace characters are
#		encoded according to RFC1738.  This could be considered
#		a violation of the HTTP/1.1
#		RFC because proxies are not allowed to rewrite URI's.
#	chop:	The request is allowed and the URI is chopped at the
#		first whitespace.  This might also be considered a
#		violation.
#Default:
# uri_whitespace strip

#  TAG: chroot
#	Specifies a directory where Squid should do a chroot() while
#	initializing.  This also causes Squid to fully drop root
#	privileges after initializing.  This means, for example, if you
#	use a HTTP port less than 1024 and try to reconfigure, you may
#	get an error saying that Squid can not open the port.
#Default:
# none

#  TAG: balance_on_multiple_ip
#	Modern IP resolvers in squid sort lookup results by preferred access.
#	By default squid will use these IP in order and only rotates to
#	the next listed when the most preffered fails.
#
#	Some load balancing servers based on round robin DNS have been
#	found not to preserve user session state across requests
#	to different IP addresses.
#
#	Enabling this directive Squid rotates IP's per request.
#Default:
# balance_on_multiple_ip off

#  TAG: pipeline_prefetch
#	To boost the performance of pipelined requests to closer
#	match that of a non-proxied environment Squid can try to fetch
#	up to two requests in parallel from a pipeline.
#
#	Defaults to off for bandwidth management and access logging
#	reasons.
#
#	WARNING: pipelining breaks NTLM and Negotiate/Kerberos authentication.
#Default:
# pipeline_prefetch off

#  TAG: high_response_time_warning	(msec)
#	If the one-minute median response time exceeds this value,
#	Squid prints a WARNING with debug level 0 to get the
#	administrators attention.  The value is in milliseconds.
#Default:
# high_response_time_warning 0

#  TAG: high_page_fault_warning
#	If the one-minute average page fault rate exceeds this
#	value, Squid prints a WARNING with debug level 0 to get
#	the administrators attention.  The value is in page faults
#	per second.
#Default:
# high_page_fault_warning 0

#  TAG: high_memory_warning
#	If the memory usage (as determined by mallinfo) exceeds
#	this amount, Squid prints a WARNING with debug level 0 to get
#	the administrators attention.
#Default:
# high_memory_warning 0 KB

#  TAG: sleep_after_fork	(microseconds)
#	When this is set to a non-zero value, the main Squid process
#	sleeps the specified number of microseconds after a fork()
#	system call. This sleep may help the situation where your
#	system reports fork() failures due to lack of (virtual)
#	memory. Note, however, if you have a lot of child
#	processes, these sleep delays will add up and your
#	Squid will not service requests for some amount of time
#	until all the child processes have been started.
#	On Windows value less then 1000 (1 milliseconds) are
#	rounded to 1000.
#Default:
# sleep_after_fork 0

#  TAG: windows_ipaddrchangemonitor	on|off
#	On Windows Squid by default will monitor IP address changes and will 
#	reconfigure itself after any detected event. This is very useful for
#	proxies connected to internet with dial-up interfaces.
#	In some cases (a Proxy server acting as VPN gateway is one) it could be
#	desiderable to disable this behaviour setting this to 'off'.
#	Note: after changing this, Squid service must be restarted.
#Default:
# windows_ipaddrchangemonitor on

#  TAG: max_filedescriptors
#	The maximum number of filedescriptors supported.
#
#	The default "0" means Squid inherits the current ulimit setting.
#
#	Note: Changing this requires a restart of Squid. Also
#	not all comm loops supports large values.
#Default:
# max_filedescriptors 0

