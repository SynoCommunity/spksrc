#!/bin/sh 

CONFIG_FILE="/var/packages/hass.io/target/var/hassio.json"

container_name="hassio_supervisor"

runSupervisor() {
    /usr/local/bin/docker rm --force hassio_supervisor || true
    /usr/local/bin/docker run --name hassio_supervisor \
        --privileged \
        $APPARMOR \
        --security-opt seccomp=unconfined \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v /var/run/dbus:/var/run/dbus \
        -v ${HASSIO_DATA}:/data \
        -e SUPERVISOR_SHARE=${HASSIO_DATA} \
        -e SUPERVISOR_NAME=hassio_supervisor \
        -e HOMEASSISTANT_REPOSITORY=${HOMEASSISTANT} \
        ${SUPERVISOR}
}

start_hassio () {
  set +e
  CONFIG_FILE="/var/packages/hass.io/target/var/hassio.json"

  SUPERVISOR="$(jq --raw-output '.supervisor' ${CONFIG_FILE})"
  HOMEASSISTANT="$(jq --raw-output '.homeassistant' ${CONFIG_FILE})"
  HASSIO_DATA="$(jq --raw-output '.data // "/usr/share/hassio"' ${CONFIG_FILE})"

  HASSIO_IMAGE_ID=$(/usr/local/bin/docker inspect --format='{{.Id}}' ${SUPERVISOR})
  HASSIO_CONTAINER_ID=$(/usr/local/bin/docker inspect --format='{{.Image}}' hassio_supervisor || echo "--")

  APPARMOR="--security-opt apparmor=unconfined"



  # Fix routing
  route add -net 172.30.32.0/23 gw 172.30.32.1


  # create DSM shortcut
  # if [ ! -f "/usr/syno/synoman/webman/3rdparty/hass.io" ]; then
  #   ln -s "$DIR/dsm_config/hass.io" /usr/syno/synoman/webman/3rdparty
  # fi

  # Run supervisor
  ([ "${HASSIO_IMAGE_ID}" = "${HASSIO_CONTAINER_ID}" ] && /usr/local/bin/docker start --attach hassio_supervisor) || runSupervisor 
}

stop_hassio () {
  set +e
  /usr/local/bin/docker stop hassio_supervisor 2>/dev/null
  exit 0
}

hassio_status () {

  if [ "$(/usr/local/bin/docker inspect -f '{{.State.Running}}' hassio_supervisor 2>/dev/null)" = "true" ]; then 
    return 0
  else 
    return 1
  fi
}

case $1 in
  start)
    echo "Starting Hass.io ..."
    start_hassio >>/var/packages/hass.io/target/var/hass.io.log 2>&1 &
    exit 0
  ;;

  stop)
    echo "Stopping Hass.io ..."
    stop_hassio
    exit 0
  ;;

  status)
    if [ "$(/usr/local/bin/docker inspect -f '{{.State.Running}}' hassio_supervisor 2>/dev/null)" = "true" ]; then 
      echo "Hass.io is running"
      exit 0
    else
      echo "Hass.io is not running"
      exit 1
    fi
  ;;

  *)
    exit 1
  ;;
esac
